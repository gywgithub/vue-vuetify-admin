{"version":3,"sources":["webpack:///./src/components/Maps/OpenLayers.vue?070a","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/control.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/render.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/BaseTile.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/Image.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./src/components/Maps/OpenLayers.vue?18c3","webpack:///./src/components/Maps/OpenLayers.vue?e16f","webpack:///./src/components/Maps/OpenLayers.vue","webpack:///./node_modules/elm-pep/dist/elm-pep.js"],"names":["_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticStyle","attrs","Error","uidCounter_","getUid","obj","ol_uid","String","VERSION","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","_super","AssertionError","code","_this","path","split","message","call","name","ADD","REMOVE","PROPERTYCHANGE","assign","target","var_sources","undefined","TypeError","output","i","ii","arguments","length","source","key","clear","object","property","getValues","values","push","listen","type","listener","opt_this","opt_once","bind","originalListener_1","removeEventListener","apply","eventsKey","addEventListener","listenOnce","unlistenByKey","Disposable","disposed_","dispose","disposeInternal","numberSafeCompareFunction","a","linearFindNearest","arr","direction","n","extend","data","extension","isArray","equals","arr1","arr2","len1","isSorted","opt_func","opt_strict","compare","every","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","slice","BaseEvent","propagationStopped","preventDefault","stopPropagation","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","indexOf","dispatchEvent","event","evt","Event","propagate","handleEvent","pendingRemovals","getListeners","hasListener","opt_type","keys","splice","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","Observable","revision_","changed","EventType","getRevision","on","len","once","un","ObjectEvent","oldValue","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","notify","eventType","getChangeEventType","ObjectEventType","set","opt_silent","unset","changeEventTypeCache","Property","LENGTH","CollectionEvent","opt_element","opt_index","element","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","array","getArray","item","insertAt","elem","CollectionEventType","removeAt","remove","prev","setAt","j","opt_except","MapEvent","map","opt_frameState","frameState","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel_","coordinate_","dragging","defineProperty","getEventPixel","pixel","enumerable","configurable","getCoordinateFromPixel","coordinate","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","window","error","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent","pointerEvent","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","newEvent","MapBrowserEventType","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","document","handlePointerMove_","isMoving_","defaultPrevented","Math","abs","clientX","clientY","POSTRENDER","MOVESTART","MOVEEND","LAYERGROUP","SIZE","TARGET","VIEW","PRERENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","IDLE","LOADING","LOADED","EMPTY","assert","assertion","errorCode","Infinity","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","getTilesLoading","state","getState","hifi","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","center","viewState","deltaX","deltaY","log","sqrt","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","clamp","min","max","cosh","x","y","exp","squaredSegmentDistance","x1","y1","x2","y2","dx","dy","t","solveLinearSystem","mat","maxRow","maxEl","r","absValue","tmp","coef","k","l","m","toRadians","angleInDegrees","PI","modulo","lerp","createExtent","extent","onlyCenter","smooth","resolution","size","opt_isMoving","viewWidth","viewHeight","minX","maxX","minY","maxY","ratio","none","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","opt_extent","createOrUpdate","clone","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","Corner","getForViewAndSize","rotation","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","returnOrUpdate","scaleFromCenter","intersectsSegment","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","opt_stops","width","height","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","result","createSnapToResolutions","resolutions","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","capped","z","floor","createSnapToPower","power","opt_minResolution","tolerance","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","newResolution","pow","createMinMaxResolution","disable","createSnapToN","theta","createSnapToZero","opt_tolerance","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","add","delta","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","scale","projection","projectionExtent","getExtent","canWrapX","worldWidth","worldsAway","easeIn","easeOut","inAndOut","linear","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","XY","XYZ","XYM","XYZM","transform2D","transform","opt_dest","dest","anchor","anchorX","anchorY","sx","sy","translate","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","toEPSG4326","atan","EPSG4326Projection","opt_axisOrientation","transforms","destination","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","addProjections","projections","projectionLike","opt_units","pointResolution","getter","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","getTransform","transformExtent","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","compose","dx1","dy1","dx2","dy2","makeInverse","det","determinant","c","e","join","tmpTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","opt_sy","opt_anchor","simplify","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry","layout","GeometryLayout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","twiceArea","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","snap","round","quantize","quantizeArray","simplifiedEnds","LinearRing","maxDelta_","maxDeltaRevision_","GeometryType","Point","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","isNaN","ret","point1","point2","intersectsLineString","coordinatesExtent","intersectsLinearRing","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","right","isClockwise","orientLinearRings","reverse","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","fromExtent","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","properties","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","minZoom_","minZoom","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","w","h","setViewportSize","opt_size","ViewProperty","getConstraints","getConstrainResolution","constrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","maxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","nearest","baseLevel","fit","geometryOrExtent","geometry","userProjection","fitInternal","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","position","centerOnInternal","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","createCanvasContext2D","opt_width","opt_height","opt_canvasPool","canvas","shift","createElement","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","appendChild","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","BaseLayer","opacity","visible","zIndex","className_","className","state_","getClassName","getLayerState","opt_managed","layer","managed","getZIndex","getOpacity","sourceState","getSourceState","getVisible","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","Base","UNDEFINED","READY","LAYERS","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","pos","ownLayerState","layerState","hasArea","toSize","PluggableMap","optionsInternal","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","style","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","controls","interactions","overlays_","overlays","overlayIdIndex_","renderer_","handleResize_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","overlay","getId","toString","createRenderer","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","hitTolerance","layerFilter","checkWrapped","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","left","top","getTarget","getTargetElement","getElementById","getView","pixelToCoordinateTransform","getOverlayById","getLoading","layerStatesArray","getSource","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","coordinateToPixelTransform","getRenderer","getSize","getOverlayContainer","getOverlayContainerStopEvent","mapBrowserEvent","contains","body","getRootNode","interactionsArray","getActive","cont","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","handleViewPropertyChanged_","view","updateViewportSize_","layerGroup","isRendered","renderSync","redrawText","layerStates","hasRenderer","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterItems","layerIndex","usedTiles","renderFrame","moveStart","MapEventType","idle","setLayerGroup","setSize","setView","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","parseInt","Control","target_","listenerKeys","render_","getMap","mapEvent","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","getFeatures","layerRenderer","prepareFrame","renderEvent","some","arrayLayerState","inView","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attribution","attributionOptions","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","begin","update","lastIndex","firstIndex","getAngle","ACTIVE","Interaction","setActive","active","pan","zoomByDelta","DoubleClickZoom","delta_","stopEvent","shiftKey","altShiftKeysOnly","altKey","metaKey","ctrlKey","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerType","primaryAction","isPrimary","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","event_1","pointerEvents","Pointer","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","defaultCondition","noKinetic_","conditionInternal_","pass","hasAttribute","centroid","distance","centerpx","DragRotate","lastAngle_","RenderBox","geometry_","startPixel_","endPixel_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","pixels","getGeometry","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom","out_","out","mapExtent","boxPixelExtent","factor","UP","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","mapUnitsDelta","KeyboardZoom","charCode","charCodeAt","Mode","TRACKPAD","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","RenderEvent","opt_inversePixelTransform","opt_context","inversePixelTransform","context","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","rgb","MAX_CACHE_SIZE","cache","cacheSize","fromStringInternal_","s","g","exec","hasAlpha","substr","Number","normalize","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","maxCacheSize","colorString","shared","asColorLike","VectorContext","drawCustom","renderer","drawGeometry","setStyle","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","opt_declutterGroups","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultLineWidth","checkedFonts","labelCache","console","warn","measureFont","measureContext","textHeights","interval","referenceWidth","retries","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","div","heights","measureText","rotateAtOffset","offsetX","offsetY","createTransformStringCanvas","createTransformString","CanvasImmediateRenderer","viewRotation","opt_squaredTolerance","opt_userTransform","context_","transform_","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","alpha","globalAlpha","setTransform","drawImage","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","beginPath","arc","fill","stroke","getFill","getStroke","getImage","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","endss","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","renderDeclutterItems","declutterTree","items","zIndexItems","renderDeclutter","MapRenderer","declutterTree_","calculateMatrices2D","thisArg","thisArg2","translatedCoordinate","offsets","declutteredFeatures","numLayers","all","entry","tmpCoord","getWrapX","callback_1","hasFeature","scheduleExpireIconCache","expireIconCache","CompositeMapRenderer","fontChangeListenerKey_","container","firstChild","children_","previousElement","getDataAtPixel","Composite","Map","PRELOAD","USE_INTERIM_TILES_ON_ERROR","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","BaseTile","TileRange","tileCoord","containsTileRange","tileRange","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","tiles","createLoadedTileFinder","forEachLoadedTile","getLayer","image","ImageState","renderIfReadyAndVisible","loadImage","imageState","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform","containerReused","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","save","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","getImageData","err","Uint8Array","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileState","getTile","tileSource","setState","getInterimTile","viewResolution","viewCenter","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","layerExtent","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","clearRect","clips","clipZs","currentClip","zs","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","transition","i_1","drawTileImage","restore","updateUsedTiles","manageTilePyramid","scheduleExpireCache","gutter","getTileImage","tileAlpha","alphaChanged","endTransition","postRenderFunction","expireCache","opt_tileCallback","getTileCoordCenter","useTile","TileLayer","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","Tile","interimTile","transition_","transitionStarts_","release","refreshInterimChain","getTileCoord","ImageBase","getPixelRatio","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","listenImage","setImage","loadHandler","errorHandler","img","promise","listening_1","unlisten","then","catch","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","ctx","fillRect","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","replace","opt_tileCoord","getKeyZXY","fromKey","hash","withinExtentAndZ","getFullTileRange","TileCache","pruneExceptNewestZ","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","p0","p1","p2","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound_1","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","unlistenSources_","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","url","urls","startCharCode","stopCharCode","fromCharCode","stop_1","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","attributionLike","tmpTileCoord","TileGrid","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","fullTileRanges","getForProjection","createForProjection","extentFromProjection","createForExtent","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","opt_maxResolution","half","TileSource","opaque_","opaque","tilePixelRatio_","canUseScreen","screen","availWidth","availHeight","minCacheSize","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","getTileGrid","thisProj","getTileCoordForTileUrlFunction","opt_projection","TileSourceEvent","TILELOADSTART","TILELOADEND","TILELOADERROR","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","component","primaryTouchId","mouseCaptureTarget","definePointerCapture","Element","setPointerCapture","setCapture","releasePointerCapture","releaseCapture","addMouseToPointerListener","mouseType","mouseEvent","MouseEvent","tiltX","tiltY","buttons","pressure","addTouchToPointerListener","touchType","touchEvent","nbTouches","CustomEvent","bubbles","cancelable","touch","screenX","screenY","pageX","pageY","rect","identifier","movementX","movementY","region","relatedTarget"],"mappings":"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","file":"js/chunk-57474641.f0cc1877.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"height\":\"400px\",\"width\":\"100%\"},attrs:{\"id\":\"map\"}})])}]\n\nexport { render, staticRenderFns }","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.3.1';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n            '/doc/errors/#' + code + ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove'\n};\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange'\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var output = Object(target);\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\n        var source = arguments[i];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\n    var values = [];\n    for (var property in object) {\n        values.push(object[property]);\n    }\n    return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @private\n         */\n        this.disposed_ = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed_) {\n            this.disposed_ = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + (high - low >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) { /* Too low. */\n            low = mid + 1;\n        }\n        else { /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || opt_strict && res === 0);\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.pendingRemovals_ = {};\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.dispatching_ = {};\n        /**\n         * @private\n         * @type {!Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = {};\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_[type];\n        if (!listeners) {\n            listeners = [];\n            this.listeners_[type] = listeners;\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            if (!(type in this.dispatching_)) {\n                this.dispatching_[type] = 0;\n                this.pendingRemovals_[type] = 0;\n            }\n            ++this.dispatching_[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --this.dispatching_[type];\n            if (this.dispatching_[type] === 0) {\n                var pendingRemovals = this.pendingRemovals_[type];\n                delete this.pendingRemovals_[type];\n                while (pendingRemovals--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete this.dispatching_[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Target.prototype.disposeInternal = function () {\n        clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return this.listeners_[type];\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        return opt_type ?\n            opt_type in this.listeners_ :\n            Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel'\n};\n//# sourceMappingURL=EventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {import(\"./events.js\").ListenerFunction} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listenOnce(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listenOnce(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {!Object<string, *>}\n         */\n        _this.values_ = {};\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return Object.keys(this.values_);\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return assign({}, this.values_);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        if (opt_silent) {\n            this.values_[key] = value;\n        }\n        else {\n            var oldValue = this.values_[key];\n            this.values_[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key) ?\n        changeEventTypeCache[key] :\n        (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {CollectionEventType} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number=} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {Event} browserEvent Browser event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {Event}\n         * @api\n         */\n        _this.originalEvent = browserEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ?\n    navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' && typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            }\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserPointerEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {PointerEvent} pointerEvent Pointer event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, pointerEvent, opt_dragging, opt_frameState) || this;\n        /**\n         * @const\n         * @type {PointerEvent}\n         */\n        _this.pointerEvent = pointerEvent;\n        return _this;\n    }\n    return MapBrowserPointerEvent;\n}(MapBrowserEvent));\nexport default MapBrowserPointerEvent;\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport 'elm-pep';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport EventType from './events/EventType.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance ?\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            this.dragListenerKeys_.push(listen(document, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(document, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        if (!this.originalPointerMoveEvent_ || this.originalPointerMoveEvent_.defaultPrevented) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend'\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view'\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < (count >> 1)) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count &&\n                priorities[rIndex] < priorities[lIndex] ?\n                rIndex : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n}\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n}());\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = (maxX + minX) / 2;\n                maxX = minX;\n            }\n            if (minY > maxY) {\n                minY = (maxY + minY) / 2;\n                maxY = minY;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return Math.abs(extent1[0] - extent2[0]) < tolerance && Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance && Math.abs(extent1[3] - extent2[3]) < tolerance;\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = resolution * size[0] / 2;\n    var dy = resolution * size[1] / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) &&\n            !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - ((endY - maxY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - ((endX - maxX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - ((endY - minY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - ((endX - minX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + width * i / opt_stops, extent[1], extent[2], extent[1] + height * i / opt_stops, extent[2] - width * i / opt_stops, extent[3], extent[0], extent[3] - height * i / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0], extent[1],\n            extent[2], extent[1],\n            extent[2], extent[3],\n            extent[0], extent[3]\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() && (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = (worldsAway * worldWidth);\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { linearFindNearest } from './array.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { clamp } from './math.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    if (showFullExtent) {\n        return Math.min(resolution, Math.max(xResolution, yResolution));\n    }\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent) :\n                maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent) :\n                maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var tolerance = 1e-9;\n            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n            var offset = -direction * (0.5 - tolerance) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent) :\n                maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = 2 * Math.PI / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation'\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\nimport { getWidth } from './extent.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + r * dx / d;\n    var y = y0 + r * dy / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = (dx === 0 && dy === 0) ? 0 :\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - (deg * 3600) - (min * 60);\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    var projectionExtent = projection.getExtent();\n    if (projection.canWrapX() && (coordinate[0] < projectionExtent[0] || coordinate[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / worldWidth);\n        coordinate[0] -= (worldsAway * worldWidth);\n    }\n    return coordinate;\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle'\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM'\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/sphere\n */\nimport { toRadians, toDegrees } from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n            Math.cos(lat1) * Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area += toRadians(x2 - x1) *\n            (2 + Math.sin(toRadians(y1)) +\n                Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return area * radius * radius / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ = options.worldExtent !== undefined ?\n            options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\n            options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n    -HALF_SIZE, -HALF_SIZE,\n    HALF_SIZE, HALF_SIZE\n];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            }\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = halfSize * input[i] / 180;\n        var y = RADIUS *\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = 180 * input[i] / HALF_SIZE;\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\nimport { add as addProj, clear as clearProj, get as getProj } from './proj/projections.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string' ?\n        getProj(/** @type {string} */ (projectionLike)) :\n        ( /** @type {Projection} */(projectionLike) || null);\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2, point[1],\n                point[0] + resolution / 2, point[1],\n                point[0], point[1] - resolution / 2,\n                point[0], point[1] + resolution / 2\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units ?\n                METERS_PER_UNIT[opt_units] :\n                projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return (\n        /** @type {Projection} */ (projection));\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {?Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\nimport { memoizeOne } from '../functions.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            this.extent_ = this.computeExtent(this.extent_);\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n            function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            } :\n            getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {GeometryLayout}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {GeometryLayout} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {GeometryLayout} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {GeometryLayout|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n      * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return (\n    /** @type {GeometryLayout} */ (layout));\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n        opt_simplifiedFlatCoordinates : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if ((dx1 * dy2 == dy1 * dx2) &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @override\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @override\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; (offset + stride) < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] &&\n        coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] &&\n        coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0 ?\n            (right && isClockwise) || (!right && !isClockwise) :\n            (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @override\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { VOID } from './functions.js';\nimport { createExtent, none as centerNone } from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { linearFindNearest } from './array.js';\nimport { assert } from './asserts.js';\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\nimport { inAndOut } from './easing.js';\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\nimport { clamp, modulo } from './math.js';\nimport { assign } from './obj.js';\nimport { createProjection, METERS_PER_UNIT, toUserCoordinate, toUserExtent, fromUserCoordinate, fromUserExtent, getUserProjection } from './proj.js';\nimport Units from './proj/Units.js';\nimport { equals } from './coordinate.js';\nimport { easeOut } from './easing.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./size.js\").Size}\n         */\n        _this.viewportSize_ = [100, 100];\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.cancelAnchor_ = undefined;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        var anchor;\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n            if (!anchor) {\n                for (var j = 0, jj = series.length; j < jj; ++j) {\n                    var animation = series[j];\n                    if (!animation.complete) {\n                        anchor = animation.anchor;\n                        break;\n                    }\n                }\n            }\n        }\n        this.animations_.length = 0;\n        this.cancelAnchor_ = anchor;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1 ?\n                        animation.targetResolution :\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getViewportSize_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n                    var rotation = progress === 1 ?\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * Returns the current viewport size.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getViewportSize_ = function (opt_rotation) {\n        var size = this.viewportSize_;\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            return [\n                Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation)),\n                Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation))\n            ];\n        }\n        else {\n            return size;\n        }\n    };\n    /**\n     * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n     * to avoid performance hit and layout reflow.\n     * This should be done on map size change.\n     * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n     */\n    View.prototype.setViewportSize = function (opt_size) {\n        this.viewportSize_ = Array.isArray(opt_size) ? opt_size.slice() : [100, 100];\n        this.resolveConstraints(0);\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @return {boolean} Resolution constraint is set\n     */\n    View.prototype.getConstrainResolution = function () {\n        return this.options_.constrainResolution;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n     * of the map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var logPower = Math.log(opt_power || 2);\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / logPower;\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = (Math.log(maxResolution / resolution) / logPower) / max;\n            return value;\n        });\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom()\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n        }\n        else {\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = assign({ size: this.getViewportSize_() }, opt_options || {});\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent.clone().transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getViewportSize_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution) ? minResolution :\n            Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenterInternal([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getViewportSize_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {ViewHint} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n        this.cancelAnchor_ = undefined;\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0 && !this.cancelAnchor_) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n        this.cancelAnchor_ = undefined;\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: anchor\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ?\n        options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ?\n        options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ?\n        options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ?\n        options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution = resolutions[maxZoom] !== undefined ?\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent ?\n            // use an extent that can fit the whole world if need be\n            360 * METERS_PER_UNIT[Units.DEGREES] /\n                projection.getMetersPerUnit() :\n            Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ?\n        options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n    var canvas = opt_canvasPool && opt_canvasPool.length ?\n        opt_canvasPool.shift() :\n        WORKER_OFFSCREEN_CANVAS ?\n            new OffscreenCanvas(opt_width || 300, opt_height || 300) :\n            document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ || /** @type {?} */ ({\n            layer: this,\n            managed: opt_managed === undefined ? true : opt_managed\n        });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = zIndex !== undefined ? zIndex : (state.managed === false ? Infinity : 0);\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return (\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error'\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return (\n        /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS)));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { assert } from './asserts.js';\nimport { removeNode } from './dom.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { TRUE } from './functions.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport { hasArea } from './size.js';\nimport { create as createTransform, apply as applyTransform } from './transform.js';\nimport { toUserCoordinate, fromUserCoordinate } from './proj.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {Array<DeclutterItems>} declutterItems\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {Object} DeclutterItems\n * @property {Array<*>} items Declutter items of an executor.\n * @property {number} opacity Layer opacity.\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className = 'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\n        var handleMapBrowserEvent = _this.handleMapBrowserEvent.bind(_this);\n        for (var key in MapBrowserEventType) {\n            _this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], handleMapBrowserEvent);\n        }\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        var handleBrowserEvent = _this.handleBrowserEvent.bind(_this);\n        _this.viewport_.addEventListener(EventType.CONTEXTMENU, handleBrowserEvent, false);\n        _this.viewport_.addEventListener(EventType.WHEEL, handleBrowserEvent, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {undefined|function(Event): void}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * @inheritDoc\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.mapBrowserEventHandler_.dispose();\n        this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n        this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n        if (this.handleResize_ !== undefined) {\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\n            this.handleResize_ = undefined;\n        }\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ?\n            opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined ?\n            options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {Event|TouchEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = 'changedTouches' in event ?\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\n            /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string' ? document.getElementById(target) : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return (\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return (\n        /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE)));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return (\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {Event} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var target = /** @type {Node} */ (mapBrowserEvent.originalEvent.target);\n        if (!mapBrowserEvent.dragging) {\n            if (this.overlayContainerStopEvent_.contains(target) || !(document.body.contains(target) || this.viewport_.getRootNode && this.viewport_.getRootNode().contains(target))) {\n                // Abort if the event target is a child of the container that doesn't allow\n                // event propagation or is no longer in the page. It's possible for the target to no longer\n                // be in the page if it has been removed in an event listener, this might happen in a Control\n                // that recreates it's content based on user interaction either manually or via a render\n                // in something like https://reactjs.org/\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() && !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.keyHandlerKeys_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n            removeNode(this.viewport_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\n                targetElement : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this)\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterItems: previousFrameState ? previousFrameState.declutterItems : [],\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {}\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        this.postRenderTimeoutHandle_ = setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth'])\n            ]);\n        }\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10)\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n            document.getElementById(options.keyboardEventTarget) :\n            options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] = options.view !== undefined ?\n        options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport { VOID } from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport { removeNode } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = options.element ? options.element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        /**\n         * @private\n         * @type {function(import(\"../MapEvent.js\").default): void}\n         */\n        _this.render_ = options.render ? options.render : VOID;\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_ ?\n                this.target_ : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * Update the projection. Rendering of the coordinates is done in\n     * `handleMouseMove` and `handleMouseUp`.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @api\n     */\n    Control.prototype.render = function (mapEvent) {\n        this.render_.call(this, mapEvent);\n    };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ = typeof target === 'string' ?\n            document.getElementById(target) :\n            target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$'\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family'\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal'\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n//# sourceMappingURL=css.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n      * @inheritDoc\n      */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    Layer.prototype.getFeatures = function (pixel) {\n        return this.renderer_.getFeatures(pixel);\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                var layerState = this.getLayerState(false);\n                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                assert(!layerStatesArray.some(function (arrayLayerState) {\n                    return arrayLayerState.layer === layerState.layer;\n                }), 67);\n                layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.disposeInternal = function () {\n        this.setSource(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution || resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport { equals } from '../array.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { removeChildren, replaceNode } from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport { inView } from '../layer/Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    return Attribution;\n}(Control));\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n */\nexport function render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n}\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    return Rotate;\n}(Control));\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        return;\n    }\n    var rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n        var transform = 'rotate(' + rotation + 'rad)';\n        if (this.autoHide_) {\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\n            if (!contains && rotation === 0) {\n                this.element.classList.add(CLASS_HIDDEN);\n            }\n            else if (contains && rotation !== 0) {\n                this.element.classList.remove(CLASS_HIDDEN);\n            }\n        }\n        this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n}\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n            options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n            options.zoomOutTipLabel : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control\n */\nimport Collection from './Collection.js';\nimport Attribution from './control/Attribution.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ?\n        options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport { easeOut, linear } from '../easing.js';\nimport InteractionProperty from './Property.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} options Options.\n     */\n    function Interaction(options) {\n        var _this = _super.call(this) || this;\n        if (options.handleEvent) {\n            _this.handleEvent = options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center)\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    return DoubleClickZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n        var map = mapBrowserEvent.map;\n        var anchor = mapBrowserEvent.coordinate;\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n        var view = map.getView();\n        zoomByDelta(view, delta, anchor, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n    }\n    return !stopEvent;\n}\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { assert } from '../asserts.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport { WEBKIT, MAC } from '../has.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement() === document.activeElement;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 &&\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return !originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    var tagName = /** @type {Element} */ (originalEvent.target).tagName;\n    return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Returns the current number of pointers involved in the interaction,\n     * e.g. `2` when two fingers are used.\n     * @return {number} The number of pointers.\n     * @api\n     */\n    PointerInteraction.prototype.getPointerCount = function () {\n        return this.targetPointers.length;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @override\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.pointerEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type ==\n                MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP;\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\nimport { easeOut } from '../easing.js';\nimport { noModifierKeys, primaryAction, focus } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * In addition, if there is a `tabindex` attribute on the map element,\n * {@link module:ol/events/condition~focus} will also be applied.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : defaultCondition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent\").default} mapBrowserEvent Event.\n     * @return {boolean} Condition passes.\n     */\n    DragPan.prototype.conditionInternal_ = function (mapBrowserEvent) {\n        var pass = true;\n        if (mapBrowserEvent.map.getTargetElement().hasAttribute('tabindex')) {\n            pass = focus(mapBrowserEvent);\n        }\n        return pass && this.condition_(mapBrowserEvent);\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1]\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n        mapBrowserEvent.originalEvent.preventDefault();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle)\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.conditionInternal_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Browser event.\n * @return {boolean} Combined condition result.\n */\nfunction defaultCondition(mapBrowserEvent) {\n    return noModifierKeys(mapBrowserEvent) && primaryAction(mapBrowserEvent);\n}\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]]\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport { mouseActionButton } from '../events/condition.js';\nimport { VOID } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        /**\n         * Function to execute just before `onboxend` is fired\n         * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n         * @private\n         */\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : mouseActionButton;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition ?\n            options.boxEndCondition : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd_(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n            onBoxEnd: onBoxEnd\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    return DragZoom;\n}(DragBox));\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n        var mapExtent = view.calculateExtentInternal(size);\n        var boxPixelExtent = createOrUpdateFromCoordinates([\n            map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n            map.getPixelFromCoordinateInternal(getTopRight(extent))\n        ]);\n        var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n        scaleFromCenter(mapExtent, 1 / factor);\n        extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animateInternal({\n        resolution: resolution,\n        center: center,\n        duration: this.duration_,\n        easing: easeOut\n    });\n}\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport { rotate as rotateCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport Interaction, { pan } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return noModifierKeys(mapBrowserEvent) &&\n                targetNotEditable(mapBrowserEvent);\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition !== undefined ?\n            options.condition : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\n            options.pixelDelta : 128;\n        return _this;\n    }\n    return KeyboardPan;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var keyCode = keyEvent.keyCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (keyCode == KeyCode.DOWN ||\n                keyCode == KeyCode.LEFT ||\n                keyCode == KeyCode.RIGHT ||\n                keyCode == KeyCode.UP)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n            var deltaX = 0, deltaY = 0;\n            if (keyCode == KeyCode.DOWN) {\n                deltaY = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.LEFT) {\n                deltaX = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.RIGHT) {\n                deltaX = mapUnitsDelta;\n            }\n            else {\n                deltaY = mapUnitsDelta;\n            }\n            var delta = [deltaX, deltaY];\n            rotateCoordinate(delta, view.getRotation());\n            pan(view, delta, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport { targetNotEditable } from '../events/condition.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    return KeyboardZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\n        mapBrowserEvent.type == EventType.KEYPRESS) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var charCode = keyEvent.charCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n            var map = mapBrowserEvent.map;\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, undefined, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport { always, focus } from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * In addition, if there is a `tabindex` attribute on the map element,\n * {@link module:ol/events/condition~focus} will also be applied.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.deltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent\").default} mapBrowserEvent Event.\n     * @return {boolean} Condition passes.\n     */\n    MouseWheelZoom.prototype.conditionInternal_ = function (mapBrowserEvent) {\n        var pass = true;\n        if (mapBrowserEvent.map.getTargetElement().hasAttribute('tabindex')) {\n            pass = focus(mapBrowserEvent);\n        }\n        return pass && this.condition_(mapBrowserEvent);\n    };\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @override\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.conditionInternal_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX &&\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ?\n                Mode.TRACKPAD :\n                Mode.WHEEL;\n        }\n        var view = map.getView();\n        if (this.mode_ === Mode.TRACKPAD && !view.getConstrainResolution()) {\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n            view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n        if (view.getConstrainResolution()) {\n            // view has a zoom constraint, zoom by 1\n            delta = delta ? delta > 0 ? 1 : -1 : 0;\n        }\n        zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ &&\n                Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport { focus } from './events/condition.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n        options.altShiftDragRotate : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\n        options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            condition: options.onFocusOnly ? focus : undefined,\n            kinetic: kinetic\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n        true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n        options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            condition: options.onFocusOnly ? focus : undefined,\n            duration: options.zoomDuration\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\n        options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. Only available\n         * when a Canvas renderer is used, null otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) { // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) { // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) { // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0;\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n        * @type {!Object<string, import(\"./IconImage.js\").default>}\n        * @private\n        */\n        this.cache_ = {};\n        /**\n        * @type {number}\n        * @private\n        */\n        this.cacheSize_ = 0;\n        /**\n        * @type {number}\n        * @private\n        */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @return {import(\"./IconImage.js\").default} Icon image.\n    */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n    */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\n    * your map uses more than 32 different icon images and you are not caching icon\n    * styles on the application level.\n    * @param {number} maxCacheSize Cache max size.\n    * @api\n    */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroups=} opt_declutterGroups Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroups) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas\n */\nimport { getFontParameters } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { toString } from '../transform.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * Declutter groups for support of multi geometries.\n * @typedef {Array<DeclutterGroup>} DeclutterGroups\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + fontFamily + ',' + referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var div;\n    var heights = textHeights;\n    return function (fontSpec) {\n        var height = heights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight)) ? 1.2 : Number(font.lineHeight);\n                textHeights[fontSpec] = lineHeight * (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!div) {\n                    div = document.createElement('div');\n                    div.innerHTML = 'M';\n                    div.style.margin = '0 !important';\n                    div.style.padding = '0 !important';\n                    div.style.position = 'absolute !important';\n                    div.style.left = '-99999px !important';\n                }\n                div.style.font = fontSpec;\n                document.body.appendChild(div);\n                height = div.offsetHeight;\n                heights[fontSpec] = height;\n                document.body.removeChild(div);\n            }\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if (( /** @type {*} */(labelOrImage).contextInstructions)) {\n        // label\n        context.translate(x, y);\n        context.scale(scale, scale);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else {\n        // image\n        context.drawImage(/** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale, h * scale);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nvar createTransformStringCanvas = null;\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return toString(transform);\n    }\n    else {\n        if (!createTransformStringCanvas) {\n            createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n        }\n        createTransformStringCanvas.style.transform = toString(transform);\n        return createTransformStringCanvas.style.transform;\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { equals } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont } from '../canvas.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageScale_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textScale_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 || this.imageScale_ != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, this.imageScale_, this.imageScale_, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n            }\n            context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n        }\n        if (rotation !== 0 || this.imageScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 || this.textScale_ != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, this.textScale_, this.textScale_, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n            }\n            if (this.textStrokeState_) {\n                context.strokeText(this.text_, x, y);\n            }\n            if (this.textFillState_) {\n                context.fillText(this.text_, x, y);\n            }\n        }\n        if (rotation !== 0 || this.textScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign ?\n            textState.textAlign : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ?\n                    fillStyleColor : defaultFillStyle)\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined ?\n                    strokeStyleLineCap : defaultLineCap,\n                lineDash: strokeStyleLineDash ?\n                    strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset ?\n                    strokeStyleLineDashOffset : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined ?\n                    strokeStyleLineJoin : defaultLineJoin,\n                lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n                    strokeStyleWidth : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined ?\n                    strokeStyleMiterLimit : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ?\n                    strokeStyleColor : defaultStrokeStyle)\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageAnchor = imageStyle.getAnchor();\n            // FIXME pixel ratio\n            var imageImage = imageStyle.getImage(1);\n            var imageOrigin = imageStyle.getOrigin();\n            var imageSize = imageStyle.getSize();\n            this.imageAnchorX_ = imageAnchor[0];\n            this.imageAnchorY_ = imageAnchor[1];\n            this.imageHeight_ = imageSize[1];\n            this.image_ = imageImage;\n            this.imageOpacity_ = imageStyle.getOpacity();\n            this.imageOriginX_ = imageOrigin[0];\n            this.imageOriginY_ = imageOrigin[1];\n            this.imageRotateWithView_ = imageStyle.getRotateWithView();\n            this.imageRotation_ = imageStyle.getRotation();\n            this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n            this.imageWidth_ = imageSize[0];\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ?\n                        textFillStyleColor : defaultFillStyle)\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined ?\n                        textStrokeStyleLineCap : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash ?\n                        textStrokeStyleLineDash : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset ?\n                        textStrokeStyleLineDashOffset : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined ?\n                        textStrokeStyleLineJoin : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined ?\n                        textStrokeStyleWidth : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined ?\n                        textStrokeStyleMiterLimit : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ?\n                        textStrokeStyleColor : defaultStrokeStyle)\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScale();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ?\n                    textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ?\n                    textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined ?\n                    textTextBaseline : defaultTextBaseline\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n            this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n                textScale : 1);\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4\n};\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/render\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport { apply as applyTransform, create as createTransform, multiply as multiplyTransform, scale as scaleTransform } from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport { getSquaredTolerance } from './renderer/vector.js';\nimport { getUserProjection, getTransformFromProjections } from './proj.js';\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n    var canvas = context.canvas;\n    var options = opt_options ? opt_options : {};\n    var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n    var size = options.size;\n    if (size) {\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n    }\n    var extent = [0, 0, canvas.width, canvas.height];\n    var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n    return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @returns {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n    var frameState = event.frameState;\n    var transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n    var squaredTolerance = getSquaredTolerance(frameState.viewState.resolution, frameState.pixelRatio);\n    var userTransform;\n    var userProjection = getUserProjection();\n    if (userProjection) {\n        userTransform = getTransformFromProjections(userProjection, frameState.viewState.projection);\n    }\n    return new CanvasImmediateRenderer(event.context, frameState.pixelRatio, frameState.extent, transform, frameState.viewState.rotation, squaredTolerance, userTransform);\n}\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n    var result = pixel.slice(0);\n    applyTransform(event.inversePixelTransform.slice(), result);\n    return result;\n}\n/**\n * @param {import(\"./PluggableMap.js\").FrameState} frameState Frame state.\n * @param {?} declutterTree Declutter tree.\n * @returns {?} Declutter tree.\n */\nexport function renderDeclutterItems(frameState, declutterTree) {\n    if (declutterTree) {\n        declutterTree.clear();\n    }\n    var items = frameState.declutterItems;\n    for (var z = items.length - 1; z >= 0; --z) {\n        var item = items[z];\n        var zIndexItems = item.items;\n        for (var i = 0, ii = zIndexItems.length; i < ii; i += 3) {\n            declutterTree = zIndexItems[i].renderDeclutter(zIndexItems[i + 1], zIndexItems[i + 2], item.opacity, declutterTree);\n        }\n    }\n    items.length = 0;\n    return declutterTree;\n}\n//# sourceMappingURL=render.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport { abstract } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { inView } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { renderDeclutterItems } from '../render.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         */\n        _this.declutterTree_ = null;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            return callback.call(thisArg, feature, managed ? layer : null);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n                if (layer.hasRenderer() && inView(layerState, viewState) && layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX() ? translatedCoordinate : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, declutteredFeatures);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        this.declutterTree_ = renderDeclutterItems(frameState, this.declutterTree_);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { inView } from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport { replaceChildren } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport ObjectEventType from '../ObjectEventType.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY && layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n        }\n        _super.prototype.renderFrame.call(this, frameState);\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() && inView(layerState, viewState) && layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\nimport { assign } from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions();\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n    * Return the level as number to which we will preload tiles up to.\n    * @return {number} The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n    * Set the level as number to which we will preload tiles up to.\n    * @param {number} preload The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n    * Whether we use interim tiles on error.\n    * @return {boolean} Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n    * Set whether we use interim tiles on error.\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY;\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport { abstract } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @private\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }).bind(this);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {Array<import(\"../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform_ = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @protected\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target && target.style.opacity === '' && target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context && context.canvas.style.transform === transform) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport { getUid } from '../../util.js';\nimport { fromUserExtent } from '../../proj.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse } from '../../transform.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createTransformString } from '../../render/canvas.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {?import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedPixelRatio;\n        /**\n         * @protected\n         * @type {import(\"../../proj/Projection.js\").default}\n         */\n        _this.renderedProjection = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * TODO: File a TypeScript issue about inheritDoc not being followed\n     * all the way.  Without this explicit return type, the VectorTileLayer\n     * renderFrame function does not pass.\n     *\n     * @inheritDoc\n     * @returns {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = size;\n            height = size;\n        }\n        var dx = tileResolution * width / 2 / tilePixelRatio;\n        var dy = tileResolution * height / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 && (!this.containerReused || tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform_, [\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n                if (clips && !inTransition) {\n                    context.restore();\n                }\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.renderedPixelRatio = pixelRatio;\n        this.renderedProjection = projection;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     * @param {number} opacity Opacity.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alpha = opacity * tileAlpha;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (tileAlpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([tile, tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport { easeIn } from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {TileState}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Called by the tile cache when the tile is removed from the cache due to expiry\n     */\n    Tile.prototype.release = function () {\n    };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {TileState} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {TileState} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        if (this.state !== TileState.ERROR && this.state > state) {\n            throw new Error('Tile load sequence violation');\n        }\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport { abstract } from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport { getHeight } from './extent.js';\nimport { IMAGE_DECODE } from './has.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {ImageState}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @override\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise.then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        }).catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' && error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler)\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * @type {number}\n         */\n        this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    function TileCache() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().release();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.release();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport { createCanvasContext2D } from './dom.js';\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\nimport { solveLinearSystem } from './math.js';\nimport { getPointResolution, transform } from './proj.js';\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n    var dX = x - centroidX;\n    var dY = y - centroidY;\n    var distance = Math.sqrt(dX * dX + dY * dY);\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0]\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        var centroidX = (u0 + u1 + u2) / 3;\n        var centroidY = (v0 + v1 + v2) / 3;\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n        context.moveTo(p1[0], p1[1]);\n        context.lineTo(p0[0], p0[1]);\n        context.lineTo(p2[0], p2[1]);\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getArea, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { getTransform } from '../proj.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n            !!maxSourceExtent &&\n            !!this.sourceProj_.getExtent() &&\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n            getWidth(this.sourceProj_.getExtent()) : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n            getWidth(this.targetProj_.getExtent()) : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        /*\n         * The maxSubdivision controls how many splittings of the target area can\n         * be done. The idea here is to do a linear mapping of the target areas\n         * but the actual overal reprojection (can be) extremely non-linear. The\n         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n         * tile size. However this function is also called to remap canvas rendered\n         * layers which can be much larger. This calculation increases the maxSubdivision\n         * value by the right factor so that each 256x256 pixel area has\n         * MAX_SUBDIVISION divisions.\n         */\n        var maxSubdivision = MAX_SUBDIVISION + (opt_destinationResolution ?\n            Math.max(0, Math.ceil(Math.log2(getArea(targetExtent) /\n                (opt_destinationResolution * opt_destinationResolution * 256 * 256))))\n            : 0);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]]];\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c]\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_ ?\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                // whole quad outside source projection extent -> ignore\n                return;\n            }\n        }\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    return;\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\n                    dx = centerSrcEstimX -\n                        modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getArea, getCenter, getIntersection } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n            opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage()\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template.replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n            options.attributionsCollapsible : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {SourceState}\n         */\n        _this.state_ = options.state !== undefined ?\n            options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {SourceState} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {SourceState} state State.\n     * @protected\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { toSize } from '../size.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined &&\n            !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ = options.tileSize !== undefined ?\n            options.tileSize :\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { toSize } from './size.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\nimport Corner from './extent/Corner.js';\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize, xyzOptions.maxResolution)\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize, opt_maxResolution) {\n    var maxZoom = opt_maxZoom !== undefined ?\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ?\n        opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = opt_maxResolution > 0 ? opt_maxResolution :\n        Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport { abstract } from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport { equivalent } from '../proj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport Source from './Source.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n            options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        var tileGrid = options.tileGrid;\n        if (tileGrid) {\n            toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n        }\n        var canUseScreen = typeof screen !== 'undefined';\n        var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n        var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n        var minCacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(Math.max(minCacheSize, options.cacheSize || 0));\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = (callback(tile) !== false);\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ?\n            opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror'\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport { getUid } from '../util.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport { getKeyZXY } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n                tileState == TileState.LOADED ?\n                    TileEventType.TILELOADEND : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { getUid } from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction ?\n                options.tileLoadFunction : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass = options.tileClass !== undefined ?\n            options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return (\n            /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord ?\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ?\n            options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n            createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator'\nimport Map from 'ol/Map'\nimport View from 'ol/View'\nimport TileLayer from 'ol/layer/Tile'\nimport XYZ from 'ol/source/XYZ'\n@Component({})\nexport default class Openlayers extends Vue {\n  private mounted() {\n    new Map({ // tslint:disable-line\n      target: 'map',\n      layers: [\n        new TileLayer({\n          source: new XYZ({\n            url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n          })\n        })\n      ],\n      view: new View({\n        center: [0, 0],\n        zoom: 2\n      })\n    })\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OpenLayers.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OpenLayers.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./OpenLayers.vue?vue&type=template&id=25e22efc&scoped=true&\"\nimport script from \"./OpenLayers.vue?vue&type=script&lang=ts&\"\nexport * from \"./OpenLayers.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"25e22efc\",\n  null\n  \n)\n\nexport default component.exports","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v. 2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n// Variable to hold current primary touch event identifier.\n// iOS needs this since it does not attribute\n// identifier 0 to primary touch event.\nvar primaryTouchId = null;\n// Variable to hold mouse pointer captures.\nvar mouseCaptureTarget = null;\nif (!(\"PointerEvent\" in window)) {\n    // Define {set,release}PointerCapture\n    definePointerCapture();\n    // Create Pointer polyfill from mouse events only on non-touch device\n    if (!(\"TouchEvent\" in window)) {\n        addMouseToPointerListener(document, \"mousedown\", \"pointerdown\");\n        addMouseToPointerListener(document, \"mousemove\", \"pointermove\");\n        addMouseToPointerListener(document, \"mouseup\", \"pointerup\");\n    }\n    // Define Pointer polyfill from touch events\n    addTouchToPointerListener(document, \"touchstart\", \"pointerdown\");\n    addTouchToPointerListener(document, \"touchmove\", \"pointermove\");\n    addTouchToPointerListener(document, \"touchend\", \"pointerup\");\n}\n// Function defining {set,release}PointerCapture from {set,releas}Capture\nfunction definePointerCapture() {\n    Element.prototype.setPointerCapture = Element.prototype.setCapture;\n    Element.prototype.releasePointerCapture = Element.prototype.releaseCapture;\n}\n// Function converting a Mouse event to a Pointer event.\nfunction addMouseToPointerListener(target, mouseType, pointerType) {\n    target.addEventListener(mouseType, function (mouseEvent) {\n        var pointerEvent = new MouseEvent(pointerType, mouseEvent);\n        pointerEvent.pointerId = 1;\n        pointerEvent.isPrimary = true;\n        pointerEvent.pointerType = \"mouse\";\n        pointerEvent.width = 1;\n        pointerEvent.height = 1;\n        pointerEvent.tiltX = 0;\n        pointerEvent.tiltY = 0;\n        // pressure is 0.5 if a button is holded\n        \"buttons\" in mouseEvent && mouseEvent.buttons !== 0\n            ? (pointerEvent.pressure = 0.5)\n            : (pointerEvent.pressure = 0);\n        // if already capturing mouse event, transfer target\n        // and don't forget implicit release on mouseup.\n        var target = mouseEvent.target;\n        if (mouseCaptureTarget !== null) {\n            target = mouseCaptureTarget;\n            if (mouseType === \"mouseup\") {\n                mouseCaptureTarget = null;\n            }\n        }\n        target.dispatchEvent(pointerEvent);\n        if (pointerEvent.defaultPrevented) {\n            mouseEvent.preventDefault();\n        }\n    });\n}\n// Function converting a Touch event to a Pointer event.\nfunction addTouchToPointerListener(target, touchType, pointerType) {\n    target.addEventListener(touchType, function (touchEvent) {\n        var changedTouches = touchEvent.changedTouches;\n        var nbTouches = changedTouches.length;\n        for (var t = 0; t < nbTouches; t++) {\n            var pointerEvent = new CustomEvent(pointerType, {\n                bubbles: true,\n                cancelable: true\n            });\n            pointerEvent.ctrlKey = touchEvent.ctrlKey;\n            pointerEvent.shiftKey = touchEvent.shiftKey;\n            pointerEvent.altKey = touchEvent.altKey;\n            pointerEvent.metaKey = touchEvent.metaKey;\n            var touch = changedTouches.item(t);\n            pointerEvent.clientX = touch.clientX;\n            pointerEvent.clientY = touch.clientY;\n            pointerEvent.screenX = touch.screenX;\n            pointerEvent.screenY = touch.screenY;\n            pointerEvent.pageX = touch.pageX;\n            pointerEvent.pageY = touch.pageY;\n            var rect = touch.target.getBoundingClientRect();\n            pointerEvent.offsetX = touch.clientX - rect.left;\n            pointerEvent.offsetY = touch.clientY - rect.top;\n            pointerEvent.pointerId = 1 + touch.identifier;\n            // Default values for standard MouseEvent fields.\n            pointerEvent.button = 0;\n            pointerEvent.buttons = 1;\n            pointerEvent.movementX = 0;\n            pointerEvent.movementY = 0;\n            pointerEvent.region = null;\n            pointerEvent.relatedTarget = null;\n            pointerEvent.x = pointerEvent.clientX;\n            pointerEvent.y = pointerEvent.clientY;\n            // Pointer event details\n            pointerEvent.pointerType = \"touch\";\n            pointerEvent.width = 1;\n            pointerEvent.height = 1;\n            pointerEvent.tiltX = 0;\n            pointerEvent.tiltY = 0;\n            pointerEvent.pressure = 1;\n            // First touch is the primary pointer event.\n            if (touchType === \"touchstart\" && primaryTouchId === null) {\n                primaryTouchId = touch.identifier;\n            }\n            pointerEvent.isPrimary = touch.identifier === primaryTouchId;\n            // If first touch ends, reset primary touch id.\n            if (touchType === \"touchend\" && pointerEvent.isPrimary) {\n                primaryTouchId = null;\n            }\n            touchEvent.target.dispatchEvent(pointerEvent);\n            if (pointerEvent.defaultPrevented) {\n                touchEvent.preventDefault();\n            }\n        }\n    });\n}\n//# sourceMappingURL=elm-pep.js.map"],"sourceRoot":""}