{"version":3,"sources":["webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./src/components/Maps/OpenLayers.vue?c3c6","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/source/common.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./src/components/Maps/OpenLayers.vue?18c3","webpack:///./src/components/Maps/OpenLayers.vue?e16f","webpack:///./src/components/Maps/OpenLayers.vue","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/render/canvas/BuilderType.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/layer/BaseVector.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/canvas/Builder.js","webpack:///./node_modules/ol/render/canvas/ImageBuilder.js","webpack:///./node_modules/ol/render/canvas/LineStringBuilder.js","webpack:///./node_modules/ol/render/canvas/PolygonBuilder.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/render/canvas/TextBuilder.js","webpack:///./node_modules/ol/render/canvas/BuilderGroup.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Executor.js","webpack:///./node_modules/ol/render/canvas/ExecutorGroup.js","webpack:///./node_modules/ol/render/canvas/hitdetect.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/BaseTile.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/render.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/control.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/Image.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/style/IconOrigin.js","webpack:///./node_modules/ol/style/IconImage.js","webpack:///./node_modules/ol/style/Icon.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/style/IconAnchorUnits.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/Circle.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/interaction/Draw.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/rbush/rbush.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/source/Source.js"],"names":["CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","all","var_args","conditions","arguments","event","pass","i","ii","length","altShiftKeysOnly","mapBrowserEvent","originalEvent","altKey","metaKey","ctrlKey","shiftKey","focus","target","getTargetElement","contains","document","activeElement","focusWithTabindex","map","hasAttribute","always","mouseActionButton","button","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerEvent","undefined","pointerType","primaryAction","isPrimary","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","getForProjection","projection","tileGrid","getDefaultTileGrid","createForProjection","setDefaultTileGrid","wrapX","tileCoord","z","center","getTileCoordCenter","projectionExtent","extentFromProjection","worldWidth","worldsAway","Math","ceil","getTileCoordForCoordAndZ","createForExtent","extent","opt_maxZoom","opt_tileSize","opt_corner","corner","TOP_LEFT","resolutions","resolutionsFromExtent","origin","tileSize","createXYZ","opt_options","xyzOptions","getExtent","gridOptions","minZoom","maxZoom","maxResolution","opt_maxResolution","height","width","max","Array","pow","half","DEGREES","getMetersPerUnit","createCanvasContext2D","opt_width","opt_height","opt_canvasPool","canvas","shift","OffscreenCanvas","createElement","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","appendChild","getInteriorPointOfArray","flatCoordinates","offset","ends","stride","flatCenters","flatCentersOffset","opt_dest","x","x1","x2","y1","y2","y","intersections","r","rr","end","push","pointX","NaN","maxSegmentLength","Infinity","sort","segmentLength","abs","isNaN","getInteriorPointsOfMultiArray","endss","interiorPoints","boundingExtent","coordinates","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","opt_extent","minX","min","apply","minY","maxX","maxY","createOrUpdate","buffer","value","clone","slice","closestSquaredDistanceXY","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","extendFlatCoordinates","equals","extend","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","isEmpty","getWidth","getHeight","getCenter","getCorner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_RIGHT","getForViewAndSize","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","opt_stops","l","canWrapX","floor","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","prototype","create","Target","_super","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","type","listener","listeners","listenersForType","indexOf","dispatchEvent","evt","propagate","dispatching","pendingRemovals","handleEvent","propagationStopped","pr","removeEventListener","disposeInternal","getListeners","hasListener","opt_type","keys","index","splice","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","VERSION","LayerRenderer","layer","boundHandleImageChange_","handleImageChange_","bind","layer_","getFeatures","pixel","prepareFrame","frameState","renderFrame","loadedTileCallback","tiles","zoom","tile","toString","createLoadedTileFinder","source","tileRange","forEachLoadedTile","forEachFeatureAtCoordinate","hitTolerance","declutteredFeatures","getDataAtPixel","getLayer","handleFontsChanged","image","getState","ImageState","LOADED","renderIfReadyAndVisible","loadImage","imageState","EventType","IDLE","load","getVisible","getSourceState","READY","changed","Observable","Layer","CanvasLayerRenderer","container","renderedResolution","tempTransform","pixelTransform","inversePixelTransform","context","containerReused","useContainer","transform","opacity","layerClassName","getClassName","style","className","firstElementChild","HTMLCanvasElement","position","left","transformOrigin","clip","pixelRatio","halfWidth","halfHeight","viewState","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","save","beginPath","moveTo","lineTo","clipUnrotated","inverted","round","dispatchRenderEvent_","event_1","preRender","postRender","getRenderTransform","offsetX","dx1","dy1","sx","sy","dx2","dy2","data","renderPixel","newCanvas","newContext","clearRect","drawImage","getImageData","err","name","Uint8Array","ADD","REMOVE","options","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","SOURCE","handleSourcePropertyChange_","setSource","getLayersArray","opt_array","array","getLayerStatesArray","opt_states","states","getLayerState","getSource","get","UNDEFINED","handleSourceChange_","layerRenderer","getRenderer","renderEvent","layerStatesArray","layerState","some","arrayLayerState","set","createRenderer","hasRenderer","inView","visible","minResolution","douglasPeucker","squaredTolerance","simplifiedFlatCoordinates","simplifiedOffset","n","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance_1","douglasPeuckerArray","simplifiedEnds","snap","tolerance","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","listen","opt_this","opt_once","originalListener_1","eventsKey","listenOnce","unlistenByKey","key","Projection","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","PI","EXTENT","WORLD_EXTENT","EPSG3857Projection","units","Units","METERS","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","output","halfSize","log","tan","toEPSG4326","atan","exp","METERS_PER_UNIT","EPSG4326Projection","opt_axisOrientation","cache","add","transforms","destination","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","addProjections","projections","forEach","projectionLike","opt_units","pointResolution","getter","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","getTransform","transformExtent","userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","_vm","_h","$createElement","_c","_self","staticClass","attrs","items","on","typeChange","model","$$v","drawType","expression","staticRenderFns","Tile","state","interimTile","hifi","transition_","transition","transitionStarts_","release","getKey","getInterimTile","TileState","refreshInterimChain","prev","LOADING","getTileCoord","setState","getAlpha","id","time","delta","inTransition","endTransition","ImageTile","src","crossOrigin","tileLoadFunction","crossOrigin_","src_","image_","Image","unlisten_","tileLoadFunction_","getImage","handleImageError_","unlistenImage_","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","EMPTY","ctx","fillStyle","fillRect","brokenDiagonalRendering_","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","sourceProj","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","c","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","arr","newTriangle","addTriangle_","a","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","isFinite","isNotFinite","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","IMAGE_SMOOTHING_DISABLED","imageSmoothingEnabled","msImageSmoothingEnabled","drawTestTriangle","u1","v1","u2","v2","closePath","restore","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","globalCompositeOperation","calculateSourceResolution","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","triangulation","sources","gutter","opt_renderEdges","opt_contextOptions","pixelRound","scale","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","step","translate","strokeStyle","lineWidth","stroke","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","pixelRatio_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","getResolution","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","e","unlistenSources_","setTimeout","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","clear","containsKey","f","entry","value_","key_","newer","older","remove","getKeys","getValues","values","peekLast","peekLastKey","peekFirstKey","replace","setSize","TileCache","expireCache","usedTiles","pruneExceptNewestZ","TILELOADSTART","TILELOADEND","TILELOADERROR","TileSource","attributions","attributionsCollapsible","opaque_","opaque","tilePixelRatio_","tilePixelRatio","getMinZoom","tileCache","cacheSize","tmpSize","tileOptions","zDirection","getTileCacheForProjection","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getResolutions","getTile","getTileGrid","getTileGridForProjection","thisProj","getProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","getWrapX","refresh","updateCacheSize","tileCount","useTile","Source","TileSourceEvent","Event","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","getFullTileRange","createFromTemplates","templates","len","tileUrlFunctions","createFromTileUrlFunctions","h","expandUrl","url","urls","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop_1","parseInt","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","handleTileChange","uid","tileState","TileEventType","setTileLoadFunction","setTileUrlFunction","join","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","usedTileCache","getContextOptions","getGutter","JSON","stringify","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","XYZ","ATTRIBUTION","OSM","draw","vector","sourceVector","raster","Vector","Map","layers","view","View","Draw","freehand","addInteraction","console","info","removeInteraction","component","opt_tileCoord","getKeyZXY","fromKey","split","Number","hash","withinExtentAndZ","getMaxZoom","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","geometry","feature","getFill","getStroke","circleReplay","getBuilder","getZIndex","CIRCLE","setFillStrokeStyle","drawCircle","textStyle","getText","textReplay","TEXT","setTextStyle","addDeclutter","drawText","renderFeature","replayGroup","opt_transform","loading","imageStyle","getImageState","unlistenImageChange","listenImageChange","renderFeatureInternal","getGeometryFunction","simplifiedGeometry","simplifyTransformed","renderer","renderGeometry","geometryRenderer","getType","GEOMETRY_COLLECTION","replay","DEFAULT","drawCustom","geometries","getGeometries","getGeometriesArray","lineStringReplay","LINE_STRING","drawLineString","drawMultiLineString","polygonReplay","POLYGON","drawMultiPolygon","imageReplay","IMAGE","setImageStyle","drawPoint","drawMultiPoint","drawPolygon","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","hasArea","ratio","opt_size","toSize","isArray","revision_","getRevision","once","ol_key","un","unByKey","assign","var_sources","TypeError","object","property","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","color","maxCacheSize","colorString","shared","Property","RENDER_ORDER","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","opt_style","BaseVector","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","beginPathInstruction","closePathInstruction","CanvasBuilder","maxExtent","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","Relationship","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","getStride","builderBegin","GeometryType","MULTI_POLYGON","getOrientedFlatCoordinates","getEndss","myEnds","inflate","MULTI_LINE_STRING","getFlatCoordinates","getEnds","MULTI_POINT","POINT","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","begin","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","lineCap","strokeStyleLineDash","getLineDash","lineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","strokeStyleLineJoin","getLineJoin","lineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","VectorContext","CanvasImageBuilder","declutterGroups_","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","rotation_","scale_","width_","drawCoordinates_","pointGeometry","myBegin","multiPointGeometry","declutterGroups","anchor","getAnchor","getSize","hitDetectionImage","getHitDetectionImage","getOrigin","getPixelRatio","getOpacity","getRotateWithView","getRotation","getScaleArray","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lineStringGeometry","multiLineStringGeometry","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","fill","numEnds","circleGeometry","setFillStrokeStyles_","circleInstruction","polygonGeometry","multiPolygonGeometry","LINE","matchingChunk","maxAngle","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","m","sqrt","TEXT_ALIGN","CanvasTextBuilder","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","placement","TextPlacement","textAlign","flatOffset","flatEnd","o","oo","declutterGroup","concat","drawChars_","geometryWidths","overflow","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoint","getFlatInteriorPoints","saveTextStates_","backgroundFill","backgroundStroke","padding","p0","p1","p2","p3","pixelRatio_1","strokeKey","textKey","font","textBaseline","fillKey","baseline","offsetY","text","strokeWidth","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","group","builderInstructions","zKey","builders","builderKey","builderInstruction","zIndex","builderType","zIndexKey","replays","Constructor","drawTextOnPath","startM","measureAndCacheTextWidth","result","rotatedCoordinates","numChars","previousAngle","segmentM","angleChanged","char","charLength","charM","segmentPos","angle","atan2","interpolate","tmpExtent","tmpTransform","p4","Executor","overlaps","alignFill_","declutterItems","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","align","lines","numLines","widths","lineHeight","renderWidth","contextInstructions","w","label","Context","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","setLineDash","leftRight","replayTextBackground_","strokeInstruction","fill_","setStrokeStyle_","replayImageOrLabel_","contextScale","imageOrLabel","anchorX","anchorY","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","centerX","centerY","strokePadding","declutterArgs","origin_1","repeatSize","rotate","renderDeclutter","declutterTree","boxes","declutterData","box","collides","j","jj","currentAlpha","globalAlpha","drawLabelWithPointPlacement_","execute_","featureCallback","opt_hitExtent","pixelCoordinates","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","getGeometry","arc","fn","coords","rotateWithView","labelWithAnchor","widthIndex","declutterGroupIndex","rendered","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","cc","chars","part","execute","executeHitDetection","opt_featureCallback","ORDER","BuilderType","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","contextSize","hitExtent","mask","getCircleArray","imageData","i_1","j_1","result_1","executor","zs","opt_builderTypes","opt_declutterReplays","builderTypes","circleArrayCache","0","fillCircleArrayRowToMiddle","radius","arraySize","error","replayDeclutter","declutterReplays","zz","executorData","currentExecutor","createHitDetectionImageData","features","styleFunction","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","setColor","setText","imgSize","getImageSize","canvas_1","imgContext","alpha","img","width_1","height_1","iconContext","setImage","Icon","anchorXUnits","IconAnchorUnits","PIXELS","anchorYUnits","getScale","byGeometryType","zIndexKeys","geomAndStyle","k","kk","setTransform","drawGeometry","hitDetect","resultFeatures","g","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","layerIndex","canvasTransform","vectorSource","clipped","layerExtent","viewHints","ViewHint","ANIMATING","INTERACTING","world","transform_1","transform_2","viewHints_1","parseFloat","Promise","resolve","reject","layer_1","features_1","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","loadExtent","userTransform","loadFeatures","dirty","userExtent","getFeaturesInExtent","replayGroupInstructions","executorGroup","getOverlaps","VectorLayer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","getPointerCount","stopEvent","updateTrackedPointers_","preventDefault","handledUp","handled","isPointerDraggingEvent","pointerId","centroid","pointerEvents","clientX","clientY","Interaction","map_","setActive","getActive","ACTIVE","getMap","active","pan","opt_duration","currentCenter","getCenterInternal","animateInternal","duration","easing","getConstrainedCenter","zoomByDelta","opt_anchor","currentZoom","getZoom","newZoom","getConstrainedZoom","newResolution","getResolutionForZoom","getAnimating","cancelAnimations","animate","PRELOAD","USE_INTERIM_TILES_ON_ERROR","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","BaseTile","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpTileRange_","TileRange","isDrawableTile","tileSource","viewResolution","viewCenter","sourceRevision","tileResolution","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","getTileCoordChildTileRange","forEachTileCoordParentTileRange","canvasScale","clips","clipZs","currentClip","currentZ","currentTilePixelSize","currentResolution","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","tileGutter","tilesToDraw","floatX","nextX","floatY","nextY","drawTileImage","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alphaChanged","postRenderFunction","tileSourceKey","postRenderFunctions","opt_tileCallback","wantedTiles","tileQueue","isKeyQueued","enqueue","TileLayer","tmp","linearRingIsClockwise","firstVertexRepeated","iMinVertex","findCornerVertex","iPreviousVertex","iNextVertex","aX","aY","bX","bY","cX","cY","determinant","minXAtMinY","linearRingsAreOriented","opt_right","right","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","MapBrowserEvent","opt_dragging","pixel_","coordinate_","dragging","defineProperty","getEventPixel","enumerable","configurable","getCoordinateFromPixel","stopPropagation","XY","XYM","XYZM","BaseLayer","properties","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","setProperties","state_","opt_managed","managed","sourceState","getMaxResolution","getMinResolution","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","TRUE","FALSE","VOID","memoizeOne","lastResult","lastArgs","lastThis","called","nextArgs","RBush","opt_maxEntries","rbush_","items_","insert","item","extents","update","bbox","getAll","getInExtent","search","forEach_","forEachInExtent","toJSON","rbush","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","ARRAY_BUFFER","XML","withCredentials","loadFeaturesXhr","format","success","failure","xhr","XMLHttpRequest","open","FormatType","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","sourceOrTile","addFeatures","VectorSourceEvent","opt_feature","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","getArray","Collection","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","ObjectEventType","PROPERTYCHANGE","valid","getId","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","CollectionEventType","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","intersectsCoordinate","forEachFeatureIntersectingExtent","intersectsExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","closestPoint","minSquaredDistance","filter","previousMinSquaredDistance","closestPointXY","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","alreadyLoaded","this_1","removeLoadedExtent","removed","setLoader","lineStringLength","LinearRing","opt_layout","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","layout","getCoordinates","getSimplifiedGeometryInternal","GeometryLayout","LINEAR_RING","setLayout","deflate","SimpleGeometry","Polygon","opt_ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","orient","flatCenter","getInteriorPoint","Point","getLinearRingCount","getLinearRing","getLinearRings","linearRings","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","getLayout","arrayLength","polygon","makeRegular","getRadius","startAngle","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","fromNamed","el","body","rgb","getComputedStyle","fromString","MAX_CACHE_SIZE","s","fromStringInternal_","asArray","hasAlpha","substr","normalize","renderDeclutterItems","zIndexItems","MapRenderer","declutterTree_","dispatchRenderEvent","calculateMatrices2D","pixelToCoordinateTransform","checkWrapped","thisArg","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","tmpCoord","callback_1","forEachLayerAtPixel","hasFeatureAtCoordinate","scheduleExpireIconCache","expireIconCache","Disposable","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","getViewport","firstChild","children_","renderedVisible_","previousElement","element","display","Composite","LAYERS","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","unique","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","Base","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","passive","emulateClick_","newEvent","MapBrowserEventType","clearTimeout","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","getRootNode","isMoving_","defaultPrevented","MOVESTART","MOVEEND","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileCenter","PluggableMap","optionsInternal","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","Date","now","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","controls","interactions","overlays_","overlays","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","overlay","addControl","getControls","getInteractions","addLayer","getLayerGroup","addOverlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getElementById","getView","getOverlayById","getLoading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","getOverlayContainerStopEvent","browserEvent","handleMapBrowserEvent","eventType","rootNode","elementFromPoint","documentElement","interactionsArray","cont","handlePostRender","hints","lowOnFrameBudget","resolveConstraints","targetElement","dispose","updateSize","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","layerGroup","isRendered","renderSync","requestAnimationFrame","removeControl","removeLayer","removeOverlay","previousFrameState","isDef","getHints","moveStart","MapEvent","MapEventType","idle","setLayerGroup","setView","computedStyle","offsetWidth","offsetHeight","setViewportSize","Control","target_","listenerKeys","mapEvent","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","setRotation","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","setZoom","defaults","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attribution","attributionOptions","DoubleClickZoom","delta_","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","adjustCenterInternal","distance","getDistance","getAngle","centerpx","dest","endInteraction","Pointer","DragRotate","lastAngle_","getConstraints","theta","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","pixels","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom","out_","out","mapExtent","calculateExtentInternal","boxPixelExtent","factor","getResolutionForExtentInternal","getConstrainedResolution","UP","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","mapUnitsDelta","KeyboardZoom","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","Mode","TRACKPAD","MouseWheelZoom","totalDelta_","lastDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","getConstrainResolution","adjustZoom","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","self","IMAGE_DECODE","decode","PASSIVE_EVENT_LISTENERS","ImageBase","ImageWrapper","imageLoadFunction","imageLoadFunction_","listenImage","loadHandler","errorHandler","promise","listening_1","unlisten","then","catch","message","Style","geometryFunction_","defaultGeometryFunction","setGeometry","stroke_","zIndex_","setRenderer","setFill","setStroke","toFunction","styles_1","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","taintedTestContext","IconImage","color_","imageState_","size_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","displacement","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","FRACTION","anchorYUnits_","iconImage_","offset_","offsetOrigin_","offsetOrigin","origin_","setAnchor","getHitDetectionImageSize","getDisplacement","iconImageSize","tmpTileCoord","TileGrid","zoomFactor","resolutions_","origins","zoomFactor_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","opt_direction","fullTileRanges","DEFAULT_RADIUS","c1","c2","opt_radius","lat1","lat2","deltaLatBy2","deltaLonBy2","bearing","lon1","dByR","lat","asin","lon","clamp","cosh","log2","LOG2E","squaredSegmentDistance","t","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","AssertionError","path","Fill","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","disable","none","createSnapToN","opt_isMoving","createSnapToZero","opt_tolerance","assert","assertion","errorCode","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","getSimplifiedGeometry","coord","getClosestPoint","opt_closestPoint","computeExtent","opt_sy","simplify","TILE_PIXELS","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getFirstCoordinate","getLastCoordinate","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","linearFindNearest","reverseSubArray","extension","arr1","arr2","len1","isSorted","opt_func","opt_strict","compare","every","currentVal","res","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","viewWidth","viewHeight","getViewportClampedResolution","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createSnapToResolutions","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","capped","createSnapToPower","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","createMinMaxResolution","DEFAULT_MIN_ZOOM","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setCenterInternal","setResolution","options_","getUpdatedOptions_","newOptions","args","animationCount","animationCallback","series","animation","complete","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","Boolean","opt_rotation","ViewProperty","opt_hints","calculateExtent","getZoomForResolution","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","logPower","nearest","baseLevel","fit","geometryOrExtent","fitInternal","cosAngle","sinAngle","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","centerOn","centerOnInternal","adjustCenter","deltaCoordinates","setCenter","adjustResolution","isMoving","adjustRotation","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_resolutionDirection","endInteractionInternal","opt_targetResolution","targetZoom","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","coordinate1","coordinate2","coord1","coord2","getWorldsAway","opt_sourceExtentWidth","sourceExtentWidth","tmp_","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","setFromArray","makeScale","compose","makeInverse","det","ImageStyle","scaleArray_","displacement_","setRotateWithView","setScale","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","opt_endss","Circle","setCenterAndRadius","getRadiusSquared_","circleExtent","setRadius","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","hasProperties","getProperties","setGeometryName","getGeometryName","handleGeometryChange_","createStyleFunction","setId","interpolatePoint","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getLength","MultiLineString","lineStrings","lineString","appendLineString","opt_interpolate","getLineString","getLineStrings","midpoints","midpoint","MultiPoint","appendPoint","multiPoint","getPoint","getPoints","points","linearRingss","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","DrawEventType","DRAWSTART","DRAWEND","DRAWABORT","DrawEvent","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","source_","features_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","Constructor_1","mode_1","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","getDefaultStyleFunction","geometryName","freehandCondition_","freehandCondition","updateState_","getOverlay","move","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","sketchPointGeom","updateSketchFeatures_","sketchLineGeom","ring","done","removeLastPoint","sketchFeature","abortDrawing_","appendCoordinates","mode","ending","sketchFeatures","overlaySource","factory","module","exports","quickselect","quickselectStep","defaultCompare","sd","newLeft","newRight","swap","maxEntries","_maxEntries","_minEntries","findItem","equalsFn","calcBBox","toBBox","distBBox","destNode","createNode","child","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","multiSelect","_all","nodesToSearch","childBBox","_build","_splitRoot","tmpNode","_insert","goingUp","indexes","_condense","compareMinX","compareMinY","fromJSON","N","M","N2","N1","right2","right3","_chooseSubtree","level","minEnlargement","targetNode","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","bbox2","overlap","xMargin","_allDistMargin","yMargin","leftBBox","rightBBox","margin","i$1","child$1","siblings","twiceArea","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","transform2D","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","drawGeometryCollection","drawFeature","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","easeIn","easeOut","inAndOut","linear","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","weight","variant","families","family","RegularShape","hitDetectionCanvas_","radius_","radius1","radius2_","radius2","imageSize_","hitDetectionImageSize_","getRadius2","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","angle0","radiusC","drawHitDetectionCanvas_","CircleStyle","BaseEvent","disposed","containsTileRange","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","labelCache","warn","measureFont","measureContext","textHeights","registerFont","interval","referenceWidth","retries","referenceFonts","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","fonts","clearInterval","setInterval","measureTextHeight","div","heights","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","measureTextWidths","currentWidth","rotateAtOffset","drawImageOrLabel","labelOrImage","executeLabelInstructions","createTransformStringCanvas","createTransformString","ObjectEvent","oldValue","BaseObject","opt_values","values_","notify","getChangeEventType","opt_silent","unset","changeEventTypeCache","LENGTH","CollectionEvent","opt_element","opt_index","unique_","array_","assertUnique_","updateLength_","insertAt","elem","removeAt","setAt","opt_except","asColorLike","geometryCollectionGeometry","opt_declutterGroup","opt_declutterGroups","FEET","USFEET","ret","attributions_","adaptAttributions","attributionsCollapsible_","wrapX_","setAttributions","attributionLike"],"mappings":"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","file":"js/chunk-15d89dae.b61c481b.js","sourcesContent":["/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16,\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { MAC, WEBKIT } from '../has.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n    var conditions = arguments;\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} All conditions passed.\n     */\n    return function (event) {\n        var pass = true;\n        for (var i = 0, ii = conditions.length; i < ii; ++i) {\n            pass = pass && conditions[i](event);\n            if (!pass) {\n                break;\n            }\n        }\n        return pass;\n    };\n}\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement().contains(document.activeElement);\n};\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport var focusWithTabindex = function (event) {\n    return event.map.getTargetElement().hasAttribute('tabindex')\n        ? focus(event)\n        : true;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    var tagName = /** @type {Element} */ (originalEvent.target).tagName;\n    return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, get as getProjection } from './proj.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth, } from './extent.js';\nimport { toSize } from './size.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize,\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize, xyzOptions.maxResolution),\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize, opt_maxResolution) {\n    var maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = opt_maxResolution > 0\n        ? opt_maxResolution\n        : Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n    var canvas = opt_canvasPool && opt_canvasPool.length\n        ? opt_canvasPool.shift()\n        : WORKER_OFFSCREEN_CANVAS\n            ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n            : document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { linearRingsContainsXY } from './contains.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport { assert } from './asserts.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value,\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return (extent1[0] <= extent2[0] &&\n        extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] &&\n        extent2[3] <= extent1[3]);\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return (extent1[0] == extent2[0] &&\n        extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] &&\n        extent1[3] == extent2[3]);\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return (Math.abs(extent1[0] - extent2[0]) < tolerance &&\n        Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance &&\n        Math.abs(extent1[3] - extent2[3]) < tolerance);\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = (resolution * size[0]) / 2;\n    var dy = (resolution * size[1]) / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return (extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1]);\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - (endY - maxY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - (endX - maxX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - (endY - minY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - (endX - minX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + (width * i) / opt_stops, extent[1], extent[2], extent[1] + (height * i) / opt_stops, extent[2] - (width * i) / opt_stops, extent[3], extent[0], extent[3] - (height * i) / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0],\n            extent[1],\n            extent[2],\n            extent[1],\n            extent[2],\n            extent[3],\n            extent[0],\n            extent[3],\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() &&\n        (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = worldsAway * worldWidth;\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.pendingRemovals_ = null;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.dispatching_ = null;\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = null;\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_ || (this.listeners_ = {});\n        var listenersForType = listeners[type] || (listeners[type] = []);\n        if (listenersForType.indexOf(listener) === -1) {\n            listenersForType.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_ && this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            var dispatching = this.dispatching_ || (this.dispatching_ = {});\n            var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n            if (!(type in dispatching)) {\n                dispatching[type] = 0;\n                pendingRemovals[type] = 0;\n            }\n            ++dispatching[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --dispatching[type];\n            if (dispatching[type] === 0) {\n                var pr = pendingRemovals[type];\n                delete pendingRemovals[type];\n                while (pr--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete dispatching[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * Clean up.\n     */\n    Target.prototype.disposeInternal = function () {\n        this.listeners_ && clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return (this.listeners_ && this.listeners_[type]) || undefined;\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        if (!this.listeners_) {\n            return false;\n        }\n        return opt_type\n            ? opt_type in this.listeners_\n            : Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_ && this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.4.1';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {Array<import(\"../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../../extent.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target &&\n            target.style.opacity === '' &&\n            target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context &&\n            (context.canvas.width === 0 ||\n                context.canvas.style.transform === transform)) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            var x = Math.round(renderPixel[0]);\n            var y = Math.round(renderPixel[1]);\n            var newCanvas = document.createElement('canvas');\n            var newContext = newCanvas.getContext('2d');\n            newCanvas.width = 1;\n            newCanvas.height = 1;\n            newContext.clearRect(0, 0, 1, 1);\n            newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n            data = newContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove',\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source\n            ? /** @type {SourceType} */ (options.source)\n            : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    Layer.prototype.getFeatures = function (pixel) {\n        return this.renderer_.getFeatures(pixel);\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                var layerState = this.getLayerState(false);\n                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                assert(!layerStatesArray.some(function (arrayLayerState) {\n                    return arrayLayerState.layer === layerState.layer;\n                }), 67);\n                layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    /**\n     * Clean up.\n     */\n    Layer.prototype.disposeInternal = function () {\n        this.setSource(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution ||\n        resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredDistance, squaredSegmentDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined\n        ? opt_simplifiedFlatCoordinates\n        : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if (dx1 * dy2 == dy1 * dx2 &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener,\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ =\n            options.worldExtent !== undefined ? options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ =\n            options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { cosh } from '../math.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            },\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (halfSize * input[i]) / 180;\n        var y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (180 * input[i]) / HALF_SIZE;\n        output[i + 1] =\n            (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT,\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu'),\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { PROJECTIONS as EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326, } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport { add as addProj, clear as clearProj, get as getProj, } from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc, } from './proj/transforms.js';\nimport { applyTransform, getWidth } from './extent.js';\nimport { clamp, modulo } from './math.js';\nimport { getDistance } from './sphere.js';\nimport { getWorldsAway } from './coordinate.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string'\n        ? getProj(/** @type {string} */ (projectionLike))\n        : /** @type {Projection} */ (projectionLike) || null;\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution =\n                    (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2,\n                point[1],\n                point[0] + resolution / 2,\n                point[1],\n                point[0],\n                point[1] - resolution / 2,\n                point[0],\n                point[1] + resolution / 2,\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units\n                ? METERS_PER_UNIT[opt_units]\n                : projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return /** @type {Projection} */ (projection);\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {?Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n    return function (coord) {\n        var sourceX = coord[0];\n        var sourceY = coord[1];\n        var transformed, worldsAway;\n        if (sourceProj.canWrapX()) {\n            var sourceExtent = sourceProj.getExtent();\n            var sourceExtentWidth = getWidth(sourceExtent);\n            worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n            if (worldsAway) {\n                // Move x to the real world\n                sourceX = sourceX - worldsAway * sourceExtentWidth;\n            }\n            sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n            sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n            transformed = transform([sourceX, sourceY]);\n        }\n        else {\n            transformed = transform(coord);\n        }\n        if (worldsAway && destProj.canWrapX()) {\n            // Move transformed coordinate back to the offset world\n            transformed[0] += worldsAway * getWidth(destProj.getExtent());\n        }\n        return transformed;\n    };\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"map\",attrs:{\"id\":\"map\"}}),_c('v-select',{staticClass:\"mt-4\",attrs:{\"dense\":\"\",\"items\":_vm.items,\"label\":\"Draw-Type\",\"outlined\":\"\"},on:{\"change\":_vm.typeChange},model:{value:(_vm.drawType),callback:function ($$v) {_vm.drawType=$$v},expression:\"drawType\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport { abstract } from './util.js';\nimport { easeIn } from './easing.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {import(\"./TileState.js\").default}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ =\n            options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Called by the tile cache when the tile is removed from the cache due to expiry\n     */\n    Tile.prototype.release = function () { };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {import(\"./TileState.js\").default} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        if (this.state !== TileState.ERROR && this.state > state) {\n            throw new Error('Tile load sequence violation');\n        }\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + 1000 / 60; // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @return {string} Key.\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/reproj\n */\nimport { IMAGE_SMOOTHING_DISABLED } from './source/common.js';\nimport { assign } from './obj.js';\nimport { containsCoordinate, createEmpty, extend, forEachCorner, getCenter, getHeight, getTopLeft, getWidth, } from './extent.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { getPointResolution, transform } from './proj.js';\nimport { solveLinearSystem } from './math.js';\nvar brokenDiagonalRendering_;\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(u1, v1);\n    ctx.lineTo(u2, v2);\n    ctx.closePath();\n    ctx.save();\n    ctx.clip();\n    ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n    ctx.restore();\n}\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n    // the values ought to be close to the rgba(210, 0, 0, 0.75)\n    return (Math.abs(data[offset * 4] - 210) > 2 ||\n        Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2);\n}\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n    if (brokenDiagonalRendering_ === undefined) {\n        var ctx = document.createElement('canvas').getContext('2d');\n        ctx.globalCompositeOperation = 'lighter';\n        ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n        drawTestTriangle(ctx, 4, 5, 4, 0);\n        drawTestTriangle(ctx, 4, 5, 0, 5);\n        var data = ctx.getImageData(0, 0, 3, 3).data;\n        brokenDiagonalRendering_ =\n            verifyBrokenDiagonalRendering(data, 0) ||\n                verifyBrokenDiagonalRendering(data, 4) ||\n                verifyBrokenDiagonalRendering(data, 8);\n    }\n    return brokenDiagonalRendering_;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(sourceProj, targetProj, targetExtent, targetResolution) {\n    var targetCenter = getCenter(targetExtent);\n    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n        forEachCorner(targetExtent, function (corner) {\n            sourceResolution = calculateSourceResolution(sourceProj, targetProj, corner, targetResolution);\n            return isFinite(sourceResolution) && sourceResolution > 0;\n        });\n    }\n    return sourceResolution;\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @param {object=} opt_contextOptions Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges, opt_contextOptions) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    assign(context, opt_contextOptions);\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    function pixelRound(value) {\n        return Math.round(value * pixelRatio) / pixelRatio;\n    }\n    context.globalCompositeOperation = 'lighter';\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution), Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution));\n    assign(stitchContext, opt_contextOptions);\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        // This test should never fail -- but it does. Need to find a fix the upstream condition\n        if (src.image.width > 0 && src.image.height > 0) {\n            stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n        }\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        // Make sure that everything is on pixel boundaries\n        var u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n        var v0 = pixelRound(-(target[0][1] - targetTopLeft[1]) / targetResolution);\n        var u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n        var v1 = pixelRound(-(target[1][1] - targetTopLeft[1]) / targetResolution);\n        var u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n        var v2 = pixelRound(-(target[2][1] - targetTopLeft[1]) / targetResolution);\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0],\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        if (isBrokenDiagonalRendering() ||\n            opt_contextOptions === IMAGE_SMOOTHING_DISABLED) {\n            // Make sure that all lines are horizontal or vertical\n            context.moveTo(u1, v1);\n            // This is the diagonal line. Do it in 4 steps\n            var steps = 4;\n            var ud = u0 - u1;\n            var vd = v0 - v1;\n            for (var step = 0; step < steps; step++) {\n                // Go horizontally\n                context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound((step * vd) / (steps - 1)));\n                // Go vertically\n                if (step != steps - 1) {\n                    context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound(((step + 1) * vd) / (steps - 1)));\n                }\n            }\n            // We are almost at u0r, v0r\n            context.lineTo(u2, v2);\n        }\n        else {\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n        }\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.globalCompositeOperation = 'source-over';\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getArea, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects, } from '../extent.js';\nimport { getTransform } from '../proj.js';\nimport { log2, modulo } from '../math.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ =\n            this.sourceProj_.canWrapX() &&\n                !!maxSourceExtent &&\n                !!this.sourceProj_.getExtent() &&\n                getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n            ? getWidth(this.sourceProj_.getExtent())\n            : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent()\n            ? getWidth(this.targetProj_.getExtent())\n            : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        /*\n         * The maxSubdivision controls how many splittings of the target area can\n         * be done. The idea here is to do a linear mapping of the target areas\n         * but the actual overal reprojection (can be) extremely non-linear. The\n         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n         * tile size. However this function is also called to remap canvas rendered\n         * layers which can be much larger. This calculation increases the maxSubdivision\n         * value by the right factor so that each 256x256 pixel area has\n         * MAX_SUBDIVISION divisions.\n         */\n        var maxSubdivision = MAX_SUBDIVISION +\n            (opt_destinationResolution\n                ? Math.max(0, Math.ceil(log2(getArea(targetExtent) /\n                    (opt_destinationResolution *\n                        opt_destinationResolution *\n                        256 *\n                        256))))\n                : 0);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) -\n                    leftBound_1 >\n                    this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [\n                        [triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]],\n                    ];\n                    if (newTriangle[0][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[1][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[2][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if (maxX - minX < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c],\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_\n            ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n            : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 &&\n            sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision =\n                    targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision =\n                    sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (isFinite(sourceQuadExtent[0]) &&\n                isFinite(sourceQuadExtent[1]) &&\n                isFinite(sourceQuadExtent[2]) &&\n                isFinite(sourceQuadExtent[3])) {\n                if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                    // whole quad outside source projection extent -> ignore\n                    return;\n                }\n            }\n        }\n        var isNotFinite = 0;\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) ||\n                !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) ||\n                !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) ||\n                !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) ||\n                !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    // It might be the case that only 1 of the points is infinite. In this case\n                    // we can draw a single triangle with the other three points\n                    isNotFinite =\n                        (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n                            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n                            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n                            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n                    if (isNotFinite != 1 &&\n                        isNotFinite != 2 &&\n                        isNotFinite != 4 &&\n                        isNotFinite != 8) {\n                        return;\n                    }\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) /\n                        2;\n                    dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        // Exactly zero or one of *Src is not finite\n        // The triangles must have the diagonal line as the first side\n        // This is to allow easy code in reproj.s to make it straight for broken\n        // browsers that can't handle diagonal clipping\n        if ((isNotFinite & 0xb) == 0) {\n            this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        }\n        if ((isNotFinite & 0xe) == 0) {\n            this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n        }\n        if (isNotFinite) {\n            // Try the other two triangles\n            if ((isNotFinite & 0xd) == 0) {\n                this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n            }\n            if ((isNotFinite & 0x7) == 0) {\n                this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n            }\n        }\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_DISABLED = {\n    imageSmoothingEnabled: false,\n    msImageSmoothingEnabled: false,\n};\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceExtentResolution, render as renderReprojected, } from '../reproj.js';\nimport { clamp } from '../math.js';\nimport { getArea, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     * @param {object=} opt_contextOptions Properties to set on the canvas context.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges, opt_contextOptions) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var sourceResolution = calculateSourceExtentResolution(sourceProj, targetProj, limitedTargetExtent, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage(),\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_, this.contextOptions_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * Desired max cache size after expireCache(). If set to 0, no cache entries\n         * will be pruned at all.\n         * @type {number}\n         */\n        this.highWaterMark =\n            opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value,\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    function TileCache() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().release();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.release();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror',\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { abstract } from '../util.js';\nimport { equivalent } from '../proj.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection, wrapX, } from '../tilegrid.js';\nimport { scale as scaleSize, toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ =\n            options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        var tileGrid = options.tileGrid;\n        if (tileGrid) {\n            toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(options.cacheSize || 0);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = callback(tile) !== false;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ? opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Increases the cache size if needed\n     * @param {number} tileCount Minimum number of tiles needed.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.updateCacheSize = function (tileCount, projection) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCount > tileCache.highWaterMark) {\n            tileCache.highWaterMark = tileCount;\n        }\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template\n                .replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, expandUrl } from '../tileurlfunction.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ =\n            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        if (options.tileUrlFunction) {\n            _this.tileUrlFunction = options.tileUrlFunction.bind(_this);\n        }\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        return undefined;\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass =\n            options.tileClass !== undefined ? options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    TileImage.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileImage.prototype.getKey = function () {\n        return (_super.prototype.getKey.call(this) +\n            (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : ''));\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return this.tileGridForProjection[projKey];\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord\n            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n            : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = cache.get(tileCoordKey);\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.contextOptions_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined\n            ? options.url\n            : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            url: url,\n            wrapX: options.wrapX,\n            attributionsCollapsible: false,\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator'\n\nimport 'ol/ol.css'\nimport Map from 'ol/Map'\nimport View from 'ol/View'\nimport Draw from 'ol/interaction/Draw'\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer'\nimport { OSM, Vector as VectorSource } from 'ol/source'\n\n@Component({})\nexport default class Openlayers extends Vue {\n  private drawType: any = ''\n  private items: string[] = ['LineString', 'Polygon', 'Circle', 'None']\n  private draw: any = null\n  private map: any = null\n  private vector: any = null\n  private sourceVector: any = null\n\n  private mounted() {\n    const raster = new TileLayer({\n      source: new OSM()\n    })\n\n    this.sourceVector = new VectorSource({ wrapX: false })\n\n    this.vector = new VectorLayer({\n      source: this.sourceVector\n    })\n\n    this.map = new Map({\n      layers: [raster, this.vector],\n      target: 'map',\n      view: new View({\n        center: [-11000000, 4600000],\n        zoom: 4\n      })\n    })\n  }\n\n  private addInteraction() {\n    const value: any = this.drawType\n    if (value !== 'None') {\n      this.draw = new Draw({\n        source: this.sourceVector,\n        type: this.drawType,\n        freehand: true\n      })\n      this.map.addInteraction(this.draw)\n    }\n  }\n\n  private typeChange() {\n    console.info(this.drawType)\n    this.map.removeInteraction(this.draw)\n    this.addInteraction()\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OpenLayers.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OpenLayers.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./OpenLayers.vue?vue&type=template&id=eb05b46c&scoped=true&\"\nimport script from \"./OpenLayers.vue?vue&type=script&lang=ts&\"\nexport * from \"./OpenLayers.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"eb05b46c\",\n  null\n  \n)\n\nexport default component.exports","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry,\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. Only available\n         * when a Canvas renderer is used, null otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        var key;\n        if (Array.isArray(type)) {\n            var len = type.length;\n            key = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                key[i] = listenOnce(this, type[i], listener);\n            }\n        }\n        else {\n            key = listenOnce(this, /** @type {string} */ (type), listener);\n        }\n        /** @type {Object} */ (listener).ol_key = key;\n        return key;\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        var key = /** @type {Object} */ (listener).ol_key;\n        if (key) {\n            unByKey(key);\n        }\n        else if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text',\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        var values = [];\n        for (var property in object) {\n            values.push(object[property]);\n        }\n        return values;\n    };\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction, } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder',\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ =\n            options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ =\n            options.renderBuffer !== undefined ? options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ =\n            options.updateWhileAnimating !== undefined\n                ? options.updateWhileAnimating\n                : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ =\n            options.updateWhileInteracting !== undefined\n                ? options.updateWhileInteracting\n                : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n     * that resolves with an array of features. The array will either contain the topmost feature\n     * when a hit was detected, or it will be empty.\n     *\n     * The hit detection algorithm used for this method is optimized for performance, but is less\n     * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n     * is not considered, and icons are only represented by their bounding box instead of the exact\n     * image.\n     *\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n     * @api\n     */\n    BaseVectorLayer.prototype.getFeatures = function (pixel) {\n        return _super.prototype.getFeatures.call(this, pixel);\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If set to `null`, the layer has no style (a `null` style),\n     * so only features that have their own styles will be rendered in the layer. Call\n     * `setStyle()` without arguments to reset to the default style. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {(import(\"../style/Style.js\").StyleLike|null)=} opt_style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n        this.styleFunction_ =\n            opt_style === null ? undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12,\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../canvas.js';\nimport { equals, reverseSubArray } from '../../array.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray, } from '../../geom/flat/inflate.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1\n            ? dashArray\n            : dashArray.map(function (dash) {\n                return dash * pixelRatio;\n            });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var myEnd = this.coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    this.coordinates[myEnd++] = lastXCoord;\n                    this.coordinates[myEnd++] = lastYCoord;\n                }\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            this.coordinates[myEnd++] = lastXCoord;\n            this.coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(geometry, feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEndss,\n                geometry,\n                renderer,\n                inflateMultiCoordinatesArray,\n            ]);\n        }\n        else if (type == GeometryType.POLYGON ||\n            type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates =\n                type == GeometryType.POLYGON\n                    ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n                    : geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnds,\n                geometry,\n                renderer,\n                inflateCoordinatesArray,\n            ]);\n        }\n        else if (type == GeometryType.LINE_STRING ||\n            type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnd,\n                geometry,\n                renderer,\n                inflateCoordinates,\n            ]);\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnd,\n                geometry,\n                renderer,\n            ]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n        var extent = geometry.getExtent();\n        this.beginGeometryInstruction1_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            extent,\n        ];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            extent,\n        ];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates,\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap =\n                strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash.slice()\n                : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset\n                ? strokeStyleLineDashOffset\n                : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin =\n                strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth =\n                strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit =\n                strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth * this.pixelRatio,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            this.applyPixelRatio(state.lineDash),\n            state.lineDashOffset * this.pixelRatio,\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash &&\n                !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         */\n        _this.declutterGroups_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.imagePixelRatio_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} My end.\n     */\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    };\n    /**\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(pointGeometry, feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            this.declutterGroups_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.declutterGroups_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(multiPointGeometry, feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            this.declutterGroups_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.declutterGroups_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"./Builder.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.imagePixelRatio_ = undefined;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroups Declutter.\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroups) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage();\n        var image = imageStyle.getImage(this.pixelRatio);\n        var origin = imageStyle.getOrigin();\n        this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.declutterGroups_ = declutterGroups;\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScaleArray();\n        this.width_ = size[0];\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction, } from './Instruction.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [\n            CanvasInstruction.MOVE_TO_LINE_TO,\n            myBegin,\n            myEnd,\n        ];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, \n            /** @type {number} */ (ends[i]), stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"./Builder.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, closePathInstruction, fillInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport { snap } from '../../geom/flat/simplify.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle !== undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [\n                CanvasInstruction.MOVE_TO_LINE_TO,\n                myBegin,\n                myEnd,\n            ];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(circleGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(polygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, \n        /** @type {Array<number>} */ (ends), stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(multiPolygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"./Builder.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line',\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont, } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1,\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         */\n        _this.declutterGroups_;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        return _this;\n    }\n    /**\n     * @return {import(\"./Builder.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var begin = this.coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var end = 2;\n        var stride = geometry.getStride();\n        var i, ii;\n        if (textState.placement === TextPlacement.LINE) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n                    .getEnds()\n                    .slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                ends = [];\n                for (i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (i = flatOffset; i < flatEnd; i += stride) {\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                end = this.coordinates.length;\n                flatOffset = ends[o];\n                var declutterGroup = this.declutterGroups_\n                    ? o === 0\n                        ? this.declutterGroups_[0]\n                        : [].concat(this.declutterGroups_[0])\n                    : null;\n                this.drawChars_(begin, end, declutterGroup);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = null;\n            if (!textState.overflow) {\n                geometryWidths = [];\n            }\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    stride = 2;\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    stride = 2;\n                    end = flatCoordinates.length;\n                    if (end == 0) {\n                        return;\n                    }\n                    break;\n                default:\n            }\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // adjust padding for negative scale\n            var padding = textState.padding;\n            if (padding != defaultPadding &&\n                (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n                var p0 = textState.padding[0];\n                var p1 = textState.padding[1];\n                var p2 = textState.padding[2];\n                var p3 = textState.padding[3];\n                if (textState.scale[0] < 0) {\n                    p1 = -p1;\n                    p3 = -p3;\n                }\n                if (textState.scale[1] < 0) {\n                    p0 = -p0;\n                    p2 = -p2;\n                }\n                padding = [p0, p1, p2, p3];\n            }\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                this.declutterGroups_,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [1, 1],\n                NaN,\n                padding == defaultPadding\n                    ? defaultPadding\n                    : padding.map(function (p) {\n                        return p * pixelRatio_1;\n                    }),\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            var scale = 1 / pixelRatio_1;\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                this.declutterGroups_,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [scale, scale],\n                NaN,\n                padding,\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash,\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale,\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle,\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var strokeWidth = strokeState\n            ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n            : 0;\n        this.instructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            declutterGroup,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            pixelRatio,\n            offsetY,\n            strokeKey,\n            strokeWidth * pixelRatio,\n            text,\n            textKey,\n            1,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            declutterGroup,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            1,\n            offsetY,\n            strokeKey,\n            strokeWidth,\n            text,\n            textKey,\n            1 / pixelRatio,\n        ]);\n    };\n    /**\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"../canvas.js\").DeclutterGroups} declutterGroups Declutter.\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroups) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            this.declutterGroups_ = declutterGroups;\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = null;\n                this.textFillState_ = fillState;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                    this.textFillState_ = fillState;\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = null;\n                this.textStrokeState_ = strokeState;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                    this.textStrokeState_ = strokeState;\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            registerFont(font);\n            var textScale = textStyle.getScaleArray();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline =\n                textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? [1, 1] : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ =\n                textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState\n                ? (typeof strokeState.strokeStyle == 'string'\n                    ? strokeState.strokeStyle\n                    : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap +\n                    strokeState.lineDashOffset +\n                    '|' +\n                    strokeState.lineWidth +\n                    strokeState.lineJoin +\n                    strokeState.miterLimit +\n                    '[' +\n                    strokeState.lineDash.join() +\n                    ']'\n                : '';\n            this.textKey_ =\n                textState.font +\n                    textState.scale +\n                    (textState.textAlign || '?') +\n                    (textState.textBaseline || '?');\n            this.fillKey_ = fillState\n                ? typeof fillState.fillStyle == 'string'\n                    ? fillState.fillStyle\n                    : '|' + getUid(fillState.fillStyle)\n                : '';\n        }\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder,\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} declutter Decluttering enabled.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.declutter_ = declutter;\n        /**\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         * @private\n         */\n        this.declutterGroups_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @param {boolean} group Group with previous builder.\n     * @return {import(\"../canvas\").DeclutterGroups} The resulting instruction groups.\n     */\n    BuilderGroup.prototype.addDeclutter = function (group) {\n        /** @type {Array<*>} */\n        var declutter = null;\n        if (this.declutter_) {\n            if (group) {\n                declutter = this.declutterGroups_;\n                /** @type {number} */ (declutter[0][0])++;\n            }\n            else {\n                declutter = [[1]];\n                this.declutterGroups_ = declutter;\n            }\n        }\n        return declutter;\n    };\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\nimport { rotate } from './transform.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache, rotation) {\n    var result = [];\n    // Keep text upright\n    var reverse;\n    if (rotation) {\n        var rotatedCoordinates = rotate(flatCoordinates, offset, end, stride, rotation, [flatCoordinates[offset], flatCoordinates[offset + 1]]);\n        reverse =\n            rotatedCoordinates[0] >\n                rotatedCoordinates[rotatedCoordinates.length - stride];\n    }\n    else {\n        reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n    }\n    var numChars = text.length;\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    offset += stride;\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var segmentM = 0;\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    var angleChanged = false;\n    var index, previousAngle;\n    for (var i = 0; i < numChars; ++i) {\n        index = reverse ? numChars - i - 1 : i;\n        var char = text[index];\n        var charLength = scale * measureAndCacheTextWidth(font, char, cache);\n        var charM = startM + charLength / 2;\n        while (offset < end - stride && segmentM + segmentLength < charM) {\n            x1 = x2;\n            y1 = y2;\n            offset += stride;\n            x2 = flatCoordinates[offset];\n            y2 = flatCoordinates[offset + 1];\n            segmentM += segmentLength;\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        }\n        var segmentPos = charM - segmentM;\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -Math.PI : Math.PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            angleChanged = angleChanged || delta !== 0;\n            delta +=\n                delta > Math.PI ? -2 * Math.PI : delta < -Math.PI ? 2 * Math.PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        previousAngle = angle;\n        var interpolate = segmentPos / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        result[index] = [x, y, charLength / 2, angle, char];\n        startM += charLength;\n    }\n    return angleChanged\n        ? result\n        : [[result[0][0], result[0][1], result[0][2], result[0][3], text]];\n}\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport RBush from 'rbush/rbush.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../../has.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, setFromArray as transformSetFromArray, } from '../../transform.js';\nimport { createEmpty, createOrUpdate, getHeight, getWidth, intersects, } from '../../extent.js';\nimport { defaultPadding, defaultTextBaseline, drawImageOrLabel, } from '../canvas.js';\nimport { defaultTextAlign, measureAndCacheTextWidth, measureTextHeight, measureTextWidths, } from '../canvas.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { equals } from '../../array.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\nvar Executor = /** @class */ (function () {\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {SerializableInstructions} instructions The serializable instructions\n     * @param {import(\"../../size.js\").Size} renderBuffer Render buffer (width/height) in pixels.\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions, renderBuffer) {\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.alignFill_;\n        /**\n         * @type {Array<*>}\n         */\n        this.declutterItems = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        this.renderBuffer_ = renderBuffer;\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        this.widths_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../canvas.js\").Label>}\n         */\n        this.labels_ = {};\n    }\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {import(\"../canvas.js\").Label} Label.\n     */\n    Executor.prototype.createLabel = function (text, textKey, fillKey, strokeKey) {\n        var key = text + textKey + fillKey + strokeKey;\n        if (this.labels_[key]) {\n            return this.labels_[key];\n        }\n        var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n        var fillState = fillKey ? this.fillStates[fillKey] : null;\n        var textState = this.textStates[textKey];\n        var pixelRatio = this.pixelRatio;\n        var scale = [\n            textState.scale[0] * pixelRatio,\n            textState.scale[1] * pixelRatio,\n        ];\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var lines = text.split('\\n');\n        var numLines = lines.length;\n        var widths = [];\n        var width = measureTextWidths(textState.font, lines, widths);\n        var lineHeight = measureTextHeight(textState.font);\n        var height = lineHeight * numLines;\n        var renderWidth = width + strokeWidth;\n        var contextInstructions = [];\n        // make canvas 2 pixels wider to account for italic text width measurement errors\n        var w = (renderWidth + 2) * scale[0];\n        var h = (height + strokeWidth) * scale[1];\n        /** @type {import(\"../canvas.js\").Label} */\n        var label = {\n            width: w < 0 ? Math.floor(w) : Math.ceil(w),\n            height: h < 0 ? Math.floor(h) : Math.ceil(h),\n            contextInstructions: contextInstructions,\n        };\n        if (scale[0] != 1 || scale[1] != 1) {\n            contextInstructions.push('scale', scale);\n        }\n        contextInstructions.push('font', textState.font);\n        if (strokeKey) {\n            contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n            contextInstructions.push('lineWidth', strokeWidth);\n            contextInstructions.push('lineCap', strokeState.lineCap);\n            contextInstructions.push('lineJoin', strokeState.lineJoin);\n            contextInstructions.push('miterLimit', strokeState.miterLimit);\n            // eslint-disable-next-line\n            var Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n            if (Context.prototype.setLineDash) {\n                contextInstructions.push('setLineDash', [strokeState.lineDash]);\n                contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n            }\n        }\n        if (fillKey) {\n            contextInstructions.push('fillStyle', fillState.fillStyle);\n        }\n        contextInstructions.push('textBaseline', 'middle');\n        contextInstructions.push('textAlign', 'center');\n        var leftRight = 0.5 - align;\n        var x = align * renderWidth + leftRight * strokeWidth;\n        var i;\n        if (strokeKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('strokeText', [\n                    lines[i],\n                    x + leftRight * widths[i],\n                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n                ]);\n            }\n        }\n        if (fillKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('fillText', [\n                    lines[i],\n                    x + leftRight * widths[i],\n                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n                ]);\n            }\n        }\n        this.labels_[key] = label;\n        return label;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     * @param {boolean} declutter Declutter.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction, declutter) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            if (declutter) {\n                context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (fillInstruction[1]);\n            }\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, \n            /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {number} height Height.\n     * @param {number} opacity Opacity.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {import(\"../../size.js\").Size} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {number} width Width.\n     * @param {Array<number>} padding Padding.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     * @return {boolean} The image or label was rendered.\n     */\n    Executor.prototype.replayImageOrLabel_ = function (context, contextScale, x, y, imageOrLabel, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n        var fillStroke = fillInstruction || strokeInstruction;\n        anchorX *= scale[0];\n        anchorY *= scale[1];\n        x -= anchorX;\n        y -= anchorY;\n        var w = width + originX > imageOrLabel.width\n            ? imageOrLabel.width - originX\n            : width;\n        var h = height + originY > imageOrLabel.height\n            ? imageOrLabel.height - originY\n            : height;\n        var boxW = padding[3] + w * scale[0] + padding[1];\n        var boxH = padding[0] + h * scale[1] + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = boxX;\n            p4[0] = boxX;\n            p1[1] = boxY;\n            p2[1] = boxY;\n            p2[0] = boxX + boxW;\n            p3[0] = p2[0];\n            p3[1] = boxY + boxH;\n            p4[1] = p3[1];\n        }\n        var transform = null;\n        if (rotation !== 0) {\n            var centerX = x + anchorX;\n            var centerY = y + anchorY;\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(tmpTransform, p1);\n            applyTransform(tmpTransform, p2);\n            applyTransform(tmpTransform, p3);\n            applyTransform(tmpTransform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n        }\n        this.renderBuffer_[0] = Math.max(this.renderBuffer_[0], getWidth(tmpExtent));\n        this.renderBuffer_[1] = Math.max(this.renderBuffer_[1], getHeight(tmpExtent));\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction\n            ? (strokeInstruction[2] * scale[0]) / 2\n            : 0;\n        var renderBuffer = this.renderBuffer_;\n        var intersects = tmpExtent[0] - strokePadding <=\n            (canvas.width + renderBuffer[0]) / contextScale &&\n            tmpExtent[2] + strokePadding >= -renderBuffer[0] / contextScale &&\n            tmpExtent[1] - strokePadding <=\n                (canvas.height + renderBuffer[1]) / contextScale &&\n            tmpExtent[3] + strokePadding >= -renderBuffer[1] / contextScale;\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        if (declutterGroup) {\n            if (!intersects && declutterGroup[0] == 1) {\n                return false;\n            }\n            var declutterArgs = intersects\n                ? [\n                    context,\n                    transform ? transform.slice(0) : null,\n                    opacity,\n                    imageOrLabel,\n                    originX,\n                    originY,\n                    w,\n                    h,\n                    x,\n                    y,\n                    scale,\n                    tmpExtent.slice(),\n                ]\n                : null;\n            if (declutterArgs) {\n                if (fillStroke) {\n                    declutterArgs.push(fillInstruction, strokeInstruction, p1.slice(0), p2.slice(0), p3.slice(0), p4.slice(0));\n                }\n                declutterGroup.push(declutterArgs);\n            }\n        }\n        else if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction), false);\n            }\n            drawImageOrLabel(context, transform, opacity, imageOrLabel, originX, originY, w, h, x, y, scale);\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {number} opacity Layer opacity.\n     * @param {?} declutterTree Declutter tree.\n     * @return {?} Declutter tree.\n     */\n    Executor.prototype.renderDeclutter = function (declutterGroup, feature, opacity, declutterTree) {\n        /** @type {Array<import(\"../../structs/RBush.js\").Entry>} */\n        var boxes = [];\n        for (var i = 1, ii = declutterGroup.length; i < ii; ++i) {\n            var declutterData = declutterGroup[i];\n            var box = declutterData[11];\n            boxes.push({\n                minX: box[0],\n                minY: box[1],\n                maxX: box[2],\n                maxY: box[3],\n                value: feature,\n            });\n        }\n        if (!declutterTree) {\n            declutterTree = new RBush(9);\n        }\n        var collides = false;\n        for (var i = 0, ii = boxes.length; i < ii; ++i) {\n            if (declutterTree.collides(boxes[i])) {\n                collides = true;\n                break;\n            }\n        }\n        if (!collides) {\n            declutterTree.load(boxes);\n            for (var j = 1, jj = declutterGroup.length; j < jj; ++j) {\n                var declutterData = /** @type {Array} */ (declutterGroup[j]);\n                var context = declutterData[0];\n                var currentAlpha = context.globalAlpha;\n                if (currentAlpha !== opacity) {\n                    context.globalAlpha = opacity;\n                }\n                if (declutterData.length > 12) {\n                    this.replayTextBackground_(declutterData[0], declutterData[14], declutterData[15], declutterData[16], declutterData[17], declutterData[12], declutterData[13], true);\n                }\n                drawImageOrLabel.apply(undefined, declutterData);\n                if (currentAlpha !== opacity) {\n                    context.globalAlpha = currentAlpha;\n                }\n            }\n        }\n        declutterGroup.length = 1;\n        return declutterTree;\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawLabelWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.createLabel(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in createLabel() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale[0];\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = (baseline * label.height) / pixelRatio +\n            2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, contextScale, transform, instructions, snapToPixel, featureCallback, opt_hitExtent) {\n        this.declutterItems.length = 0;\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, declutterGroups, image, text, textKey;\n        var strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation,\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    if (!feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined &&\n                        !intersects(opt_hitExtent, instruction[3])) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = NaN;\n                        prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    declutterGroups = featureCallback ? null : instruction[6];\n                    var height = /** @type {number} */ (instruction[7]);\n                    var opacity = /** @type {number} */ (instruction[8]);\n                    var originX = /** @type {number} */ (instruction[9]);\n                    var originY = /** @type {number} */ (instruction[10]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\n                    var rotation = /** @type {number} */ (instruction[12]);\n                    var scale = /** @type {import(\"../../size.js\").Size} */ (instruction[13]);\n                    var width = /** @type {number} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = labelWithAnchor.label;\n                        instruction[3] = image;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        instruction[4] = anchorX;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        instruction[5] = anchorY;\n                        height = image.height;\n                        instruction[7] = height;\n                        width = image.width;\n                        instruction[14] = width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = false;\n                        backgroundStroke = false;\n                    }\n                    if (rotateWithView && viewRotationFromTransform) {\n                        // Canvas is expected to be rotated to reverse view rotation.\n                        rotation += viewRotation;\n                    }\n                    else if (!rotateWithView && !viewRotationFromTransform) {\n                        // Canvas is not rotated, images need to be rotated back to be north-up.\n                        rotation -= viewRotation;\n                    }\n                    var widthIndex = 0;\n                    var declutterGroupIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths &&\n                            geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        if (declutterGroups) {\n                            var index = Math.floor(declutterGroupIndex);\n                            declutterGroup =\n                                declutterGroups.length < index + 1\n                                    ? [declutterGroups[0][0]]\n                                    : declutterGroups[index];\n                        }\n                        var rendered = this.replayImageOrLabel_(context, contextScale, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill\n                            ? /** @type {Array<*>} */ (lastFillInstruction)\n                            : null, backgroundStroke\n                            ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                            : null);\n                        if (rendered &&\n                            declutterGroup &&\n                            declutterGroups[declutterGroups.length - 1] !== declutterGroup) {\n                            declutterGroups.push(declutterGroup);\n                        }\n                        if (declutterGroup) {\n                            if (declutterGroup.length - 1 === declutterGroup[0]) {\n                                this.declutterItems.push(this, declutterGroup, feature);\n                            }\n                            declutterGroupIndex += 1 / declutterGroup[0];\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    declutterGroup = featureCallback ? null : instruction[4];\n                    var overflow = /** @type {number} */ (instruction[5]);\n                    fillKey = /** @type {string} */ (instruction[6]);\n                    var maxAngle = /** @type {number} */ (instruction[7]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\n                    var offsetY = /** @type {number} */ (instruction[9]);\n                    strokeKey = /** @type {string} */ (instruction[10]);\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\n                    text = /** @type {string} */ (instruction[12]);\n                    textKey = /** @type {string} */ (instruction[13]);\n                    var pixelRatioScale = [\n                        /** @type {number} */ (instruction[14]),\n                        /** @type {number} */ (instruction[14]),\n                    ];\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = [\n                        textState.scale[0] * measurePixelRatio,\n                        textState.scale[1] * measurePixelRatio,\n                    ];\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = {};\n                        this.widths_[font] = cachedWidths;\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = Math.abs(textScale[0]) *\n                        measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, Math.abs(textScale[0]), measureAndCacheTextWidth, font, cachedWidths, viewRotationFromTransform ? 0 : this.viewRotation_);\n                        if (parts) {\n                            var rendered = false;\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, '', strokeKey);\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                                    anchorY =\n                                        baseline * label.height +\n                                            ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                                                textScale[0] -\n                                            offsetY;\n                                    rendered =\n                                        this.replayImageOrLabel_(context, contextScale, \n                                        /** @type {number} */ (part[0]), \n                                        /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                        /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null) || rendered;\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    rendered =\n                                        this.replayImageOrLabel_(context, contextScale, \n                                        /** @type {number} */ (part[0]), \n                                        /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                        /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null) || rendered;\n                                }\n                            }\n                            if (rendered) {\n                                this.declutterItems.push(this, declutterGroup, feature);\n                            }\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = featureCallback(feature);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     */\n    Executor.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, contextScale, transform, this.instructions, snapToPixel, undefined, undefined);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n     *     Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, 1, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}());\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { isEmpty } from '../../obj.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT,\n];\nvar ExecutorGroup = /** @class */ (function () {\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n         */\n        this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        this.hitDetectionTransform_ = createTransform();\n        this.createExecutors_(allInstructions);\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                executors = {};\n                this.executorsByZIndex_[zIndex] = executors;\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            var renderBuffer = [this.renderBuffer_ || 0, this.renderBuffer_ || 0];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions, renderBuffer);\n            }\n        }\n    };\n    /**\n     * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        if (!this.hitDetectionContext_) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize ||\n            context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var mask = getCircleArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function featureCallback(feature) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize)\n                .data;\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\n                    if (mask[i_1][j_1]) {\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\n                            var result_1 = void 0;\n                            if (!(declutteredFeatures &&\n                                (builderType == BuilderType.IMAGE ||\n                                    builderType == BuilderType.TEXT)) ||\n                                declutteredFeatures.indexOf(feature) !== -1) {\n                                result_1 = callback(feature);\n                            }\n                            if (result_1) {\n                                return result_1;\n                            }\n                            else {\n                                context.clearRect(0, 0, contextSize, contextSize);\n                                return undefined;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<import(\"./BuilderType.js\").default>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n     */\n    ExecutorGroup.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    if (opt_declutterReplays &&\n                        (builderType == BuilderType.IMAGE ||\n                            builderType == BuilderType.TEXT)) {\n                        var declutter = opt_declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(replay, transform.slice(0));\n                        }\n                    }\n                    else {\n                        replay.execute(context, contextScale, transform, viewRotation, snapToPixel);\n                    }\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}());\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n    0: [[true]],\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n    var i;\n    var radius = Math.floor(array.length / 2);\n    if (x >= radius) {\n        for (i = radius; i < x; i++) {\n            array[i][y] = true;\n        }\n    }\n    else if (x < radius) {\n        for (i = x + 1; i < radius; i++) {\n            array[i][y] = true;\n        }\n    }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n    if (circleArrayCache[radius] !== undefined) {\n        return circleArrayCache[radius];\n    }\n    var arraySize = radius * 2 + 1;\n    var arr = new Array(arraySize);\n    for (var i = 0; i < arraySize; i++) {\n        arr[i] = new Array(arraySize);\n    }\n    var x = radius;\n    var y = 0;\n    var error = 0;\n    while (x >= y) {\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n        y++;\n        error += 1 + 2 * y;\n        if (2 * (error - x) + 1 > 0) {\n            x -= 1;\n            error += 1 - 2 * x;\n        }\n    }\n    circleArrayCache[radius] = arr;\n    return arr;\n}\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} opacity Opacity.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n * @param {Array<import(\"../../PluggableMap.js\").DeclutterItems>} declutterItems Declutter items.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, opacity, snapToPixel, declutterItems) {\n    var zs = Object.keys(declutterReplays)\n        .map(Number)\n        .sort(numberSafeCompareFunction);\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\n        var executorData = declutterReplays[zs[z].toString()];\n        var currentExecutor = void 0;\n        for (var i = 0, ii = executorData.length; i < ii;) {\n            var executor = executorData[i++];\n            var transform = executorData[i++];\n            executor.execute(context, 1, transform, rotation, snapToPixel);\n            if (executor !== currentExecutor && executor.declutterItems.length > 0) {\n                currentExecutor = executor;\n                declutterItems.push({\n                    items: executor.declutterItems,\n                    opacity: opacity,\n                });\n            }\n        }\n    }\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/render/canvas/hitdetet\n */\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport { Icon } from '../../style.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { intersects } from '../../extent.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n    var width = size[0] / 2;\n    var height = size[1] / 2;\n    var context = createCanvasContext2D(width, height);\n    context.imageSmoothingEnabled = false;\n    var canvas = context.canvas;\n    var renderer = new CanvasImmediateRenderer(context, 0.5, extent, null, rotation);\n    var featureCount = features.length;\n    // Stretch hit detection index to use the whole available color range\n    var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n    var featuresByZIndex = {};\n    for (var i = 1; i <= featureCount; ++i) {\n        var feature = features[i - 1];\n        var featureStyleFunction = feature.getStyleFunction() || styleFunction;\n        if (!styleFunction) {\n            continue;\n        }\n        var styles = featureStyleFunction(feature, resolution);\n        if (!styles) {\n            continue;\n        }\n        if (!Array.isArray(styles)) {\n            styles = [styles];\n        }\n        var index = i * indexFactor;\n        var color = '#' + ('000000' + index.toString(16)).slice(-6);\n        for (var j = 0, jj = styles.length; j < jj; ++j) {\n            var originalStyle = styles[j];\n            var style = originalStyle.clone();\n            var fill = style.getFill();\n            if (fill) {\n                fill.setColor(color);\n            }\n            var stroke = style.getStroke();\n            if (stroke) {\n                stroke.setColor(color);\n            }\n            style.setText(undefined);\n            var image = originalStyle.getImage();\n            if (image) {\n                var imgSize = image.getImageSize();\n                if (!imgSize) {\n                    continue;\n                }\n                var canvas_1 = document.createElement('canvas');\n                canvas_1.width = imgSize[0];\n                canvas_1.height = imgSize[1];\n                var imgContext = canvas_1.getContext('2d', { alpha: false });\n                imgContext.fillStyle = color;\n                var img = imgContext.canvas;\n                imgContext.fillRect(0, 0, img.width, img.height);\n                var width_1 = imgSize ? imgSize[0] : img.width;\n                var height_1 = imgSize ? imgSize[1] : img.height;\n                var iconContext = createCanvasContext2D(width_1, height_1);\n                iconContext.drawImage(img, 0, 0);\n                style.setImage(new Icon({\n                    img: img,\n                    imgSize: imgSize,\n                    anchor: image.getAnchor(),\n                    anchorXUnits: IconAnchorUnits.PIXELS,\n                    anchorYUnits: IconAnchorUnits.PIXELS,\n                    offset: image.getOrigin(),\n                    size: image.getSize(),\n                    opacity: image.getOpacity(),\n                    scale: image.getScale(),\n                    rotation: image.getRotation(),\n                    rotateWithView: image.getRotateWithView(),\n                }));\n            }\n            var zIndex = Number(style.getZIndex());\n            var byGeometryType = featuresByZIndex[zIndex];\n            if (!byGeometryType) {\n                byGeometryType = {};\n                featuresByZIndex[zIndex] = byGeometryType;\n                byGeometryType[GeometryType.POLYGON] = [];\n                byGeometryType[GeometryType.CIRCLE] = [];\n                byGeometryType[GeometryType.LINE_STRING] = [];\n                byGeometryType[GeometryType.POINT] = [];\n            }\n            var geometry = style.getGeometryFunction()(feature);\n            if (geometry && intersects(extent, geometry.getExtent())) {\n                byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n            }\n        }\n    }\n    var zIndexKeys = Object.keys(featuresByZIndex)\n        .map(Number)\n        .sort(numberSafeCompareFunction);\n    for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n        var byGeometryType = featuresByZIndex[zIndexKeys[i]];\n        for (var type in byGeometryType) {\n            var geomAndStyle = byGeometryType[type];\n            for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n                renderer.setStyle(geomAndStyle[j + 1]);\n                for (var k = 0, kk = transforms.length; k < kk; ++k) {\n                    renderer.setTransform(transforms[k]);\n                    renderer.drawGeometry(geomAndStyle[j]);\n                }\n            }\n        }\n    }\n    return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n    var resultFeatures = [];\n    if (imageData) {\n        var index = (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) *\n            4;\n        var r = imageData.data[index];\n        var g = imageData.data[index + 1];\n        var b = imageData.data[index + 2];\n        var i = b + 256 * (g + 256 * r);\n        var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n        if (i && i % indexFactor === 0) {\n            resultFeatures.push(features[i / indexFactor - 1]);\n        }\n    }\n    return resultFeatures;\n}\n//# sourceMappingURL=hitdetect.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup, { replayDeclutter, } from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport { apply, makeInverse, makeScale, toString as transformToString, } from '../../transform.js';\nimport { buffer, containsExtent, createEmpty, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX, } from '../../extent.js';\nimport { createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { fromUserExtent, getTransformFromProjections, getUserProjection, toUserExtent, } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { wrapX as wrapCoordinateX } from '../../coordinate.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @type {boolean}\n         */\n        _this.animatingOrInteracting_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @type {ImageData}\n         */\n        _this.hitDetectionImageData_ = null;\n        /**\n         * @type {Array<import(\"../../Feature.js\").default>}\n         */\n        _this.renderedFeatures_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {import(\"../../coordinate\").Coordinate}\n         */\n        _this.renderedCenter_ = null;\n        /**\n         * @private\n         * @type {import(\"../../proj/Projection\").default}\n         */\n        _this.renderedProjection_ = null;\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasVectorLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        if (opacity < 1) {\n            target = null;\n        }\n        _super.prototype.useContainer.call(this, target, transform, opacity);\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = transformToString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        if (!replayGroup || replayGroup.isEmpty()) {\n            if (!this.containerReused && canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return this.container;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            clipped =\n                !containsExtent(layerExtent, frameState.extent) &&\n                    intersectsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, 0);\n        var declutterReplays = this.getLayer().getDeclutter() ? {} : null;\n        replayGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, declutterReplays);\n        if (vectorSource.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)) {\n            var startX = extent[0];\n            var worldWidth = getWidth(projectionExtent);\n            var world = 0;\n            var offsetX = void 0;\n            while (startX < projectionExtent[0]) {\n                --world;\n                offsetX = worldWidth * world;\n                var transform_1 = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, offsetX);\n                replayGroup.execute(context, 1, transform_1, rotation, snapToPixel, undefined, declutterReplays);\n                startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n                ++world;\n                offsetX = worldWidth * world;\n                var transform_2 = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, offsetX);\n                replayGroup.execute(context, 1, transform_2, rotation, snapToPixel, undefined, declutterReplays);\n                startX -= worldWidth;\n            }\n        }\n        if (declutterReplays) {\n            var viewHints_1 = frameState.viewHints;\n            var hifi = !(viewHints_1[ViewHint.ANIMATING] || viewHints_1[ViewHint.INTERACTING]);\n            replayDeclutter(declutterReplays, context, rotation, 1, hifi, frameState.declutterItems);\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        var container = this.container;\n        if (opacity !== parseFloat(container.style.opacity)) {\n            container.style.opacity = opacity === 1 ? '' : String(opacity);\n        }\n        if (this.renderedRotation_ !== viewState.rotation) {\n            this.renderedRotation_ = viewState.rotation;\n            this.hitDetectionImageData_ = null;\n        }\n        return this.container;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(function (resolve, reject) {\n            if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n                var size = [this.context.canvas.width, this.context.canvas.height];\n                apply(this.pixelTransform, size);\n                var center = this.renderedCenter_;\n                var resolution = this.renderedResolution_;\n                var rotation = this.renderedRotation_;\n                var projection = this.renderedProjection_;\n                var extent = this.renderedExtent_;\n                var layer = this.getLayer();\n                var transforms = [];\n                var width = size[0] / 2;\n                var height = size[1] / 2;\n                transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, 0).slice());\n                var source = layer.getSource();\n                var projectionExtent = projection.getExtent();\n                if (source.getWrapX() &&\n                    projection.canWrapX() &&\n                    !containsExtent(projectionExtent, extent)) {\n                    var startX = extent[0];\n                    var worldWidth = getWidth(projectionExtent);\n                    var world = 0;\n                    var offsetX = void 0;\n                    while (startX < projectionExtent[0]) {\n                        --world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n                        startX += worldWidth;\n                    }\n                    world = 0;\n                    startX = extent[2];\n                    while (startX > projectionExtent[2]) {\n                        ++world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n                        startX -= worldWidth;\n                    }\n                }\n                this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n            }\n            resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n        }.bind(this));\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        else {\n            var resolution = frameState.viewState.resolution;\n            var rotation = frameState.viewState.rotation;\n            var layer_1 = this.getLayer();\n            /** @type {!Object<string, boolean>} */\n            var features_1 = {};\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, \n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @return {?} Callback result.\n             */\n            function (feature) {\n                var key = getUid(feature);\n                if (!(key in features_1)) {\n                    features_1[key] = true;\n                    return callback(feature, layer_1);\n                }\n            }, layer_1.getDeclutter() ? declutteredFeatures : null);\n            return result;\n        }\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        if (!vectorSource) {\n            return false;\n        }\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if ((!this.dirty_ && !updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            this.animatingOrInteracting_ = true;\n            return true;\n        }\n        this.animatingOrInteracting_ = false;\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var center = viewState.center.slice();\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var loadExtents = [extent.slice()];\n        var projectionExtent = projection.getExtent();\n        if (vectorSource.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n            wrapCoordinateX(center, projection);\n            var loadExtent = wrapExtentX(loadExtents[0], projection);\n            // If the extent crosses the date line, we load data for both edges of the worlds\n            if (loadExtent[0] < projectionExtent[0] &&\n                loadExtent[2] < projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] + worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] + worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n            else if (loadExtent[0] > projectionExtent[0] &&\n                loadExtent[2] > projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] - worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] - worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, vectorLayer.getDeclutter());\n        var userProjection = getUserProjection();\n        var userTransform;\n        if (userProjection) {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(toUserExtent(loadExtents[i], projection), resolution, userProjection);\n            }\n            userTransform = getTransformFromProjections(userProjection, projection);\n        }\n        else {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n            }\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        var render = function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        /** @type {Array<import(\"../../Feature.js\").default>} */\n        var features = vectorSource.getFeaturesInExtent(userExtent);\n        if (vectorLayerRenderOrder) {\n            features.sort(vectorLayerRenderOrder);\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            render(features[i]);\n        }\n        this.renderedFeatures_ = features;\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.renderedCenter_ = center;\n        this.renderedProjection_ = projection;\n        this.replayGroup_ = executorGroup;\n        this.hitDetectionImageData_ = null;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_transform Transform from user to view projection.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Returns the current number of pointers involved in the interaction,\n     * e.g. `2` when two fingers are used.\n     * @return {number} The number of pointers.\n     * @api\n     */\n    PointerInteraction.prototype.getPointerCount = function () {\n        return this.targetPointers.length;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n                // prevent page scrolling during dragging\n                mapBrowserEvent.preventDefault();\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence =\n                    handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.originalEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return (type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP);\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport { easeOut, linear } from '../easing.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions=} opt_options Options.\n     */\n    function Interaction(opt_options) {\n        var _this = _super.call(this) || this;\n        if (opt_options && opt_options.handleEvent) {\n            _this.handleEvent = opt_options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center),\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut,\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined\n            ? options.useInterimTilesOnError\n            : true);\n        return _this;\n    }\n    /**\n     * Return the level as number to which we will preload tiles up to.\n     * @return {number} The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n     * Set the level as number to which we will preload tiles up to.\n     * @param {number} preload The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n     * Whether we use interim tiles on error.\n     * @return {boolean} Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n     * Set whether we use interim tiles on error.\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { createEmpty, equals, getIntersection, getTopLeft, } from '../../extent.js';\nimport { createTransformString } from '../../render/canvas.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {?import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedPixelRatio;\n        /**\n         * @protected\n         * @type {import(\"../../proj/Projection.js\").default}\n         */\n        _this.renderedProjection = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return (tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            (tileState == TileState.ERROR && !useInterimTilesOnError));\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = size;\n            height = size;\n        }\n        var dx = (tileResolution * width) / 2 / tilePixelRatio;\n        var dy = (tileResolution * height) / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy,\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ &&\n                            (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        assign(context, tileSource.getContextOptions());\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 &&\n            (!this.containerReused ||\n                tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform, [\n                (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n                    tileResolution,\n                (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n                    tileResolution,\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1;\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1;\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n                if (clips && !inTransition) {\n                    context.restore();\n                }\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged =\n            !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.renderedPixelRatio = pixelRatio;\n        this.renderedProjection = projection;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     * @param {number} opacity Opacity.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alpha = opacity * tileAlpha;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (tileAlpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Image\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tileCount = 0;\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        ++tileCount;\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([\n                                    tile,\n                                    tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord),\n                                    tileResolution,\n                                ]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n        tileSource.updateCacheSize(tileCount, projection);\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1,\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // https://stackoverflow.com/a/1180256/2389327\n    // https://en.wikipedia.org/wiki/Curve_orientation#Orientation_of_a_simple_polygon\n    var firstVertexRepeated = true;\n    for (var i = 0; i < stride; ++i) {\n        if (flatCoordinates[offset + i] !== flatCoordinates[end - stride + i]) {\n            firstVertexRepeated = false;\n            break;\n        }\n    }\n    if (firstVertexRepeated) {\n        end -= stride;\n    }\n    var iMinVertex = findCornerVertex(flatCoordinates, offset, end, stride);\n    // Orientation matrix:\n    //     [ 1  xa  ya ]\n    // O = | 1  xb  yb |\n    //     [ 1  xc  yc ]\n    var iPreviousVertex = iMinVertex - stride;\n    if (iPreviousVertex < offset) {\n        iPreviousVertex = end - stride;\n    }\n    var iNextVertex = iMinVertex + stride;\n    if (iNextVertex >= end) {\n        iNextVertex = offset;\n    }\n    var aX = flatCoordinates[iPreviousVertex];\n    var aY = flatCoordinates[iPreviousVertex + 1];\n    var bX = flatCoordinates[iMinVertex];\n    var bY = flatCoordinates[iMinVertex + 1];\n    var cX = flatCoordinates[iNextVertex];\n    var cY = flatCoordinates[iNextVertex + 1];\n    var determinant = bX * cY + aX * bY + aY * cX - (aY * bX + bY * cX + aX * cY);\n    return determinant < 0;\n}\n// Find vertex along one edge of bounding box.\n// In this case, we find smallest y; in case of tie also smallest x.\nfunction findCornerVertex(flatCoordinates, offset, end, stride) {\n    var iMinVertex = -1;\n    var minY = Infinity;\n    var minXAtMinY = Infinity;\n    for (var i = offset; i < end; i += stride) {\n        var x = flatCoordinates[i];\n        var y = flatCoordinates[i + 1];\n        if (y > minY) {\n            continue;\n        }\n        if (y == minY) {\n            if (x >= minXAtMinY) {\n                continue;\n            }\n        }\n        // Minimum so far.\n        iMinVertex = i;\n        minY = y;\n        minXAtMinY = x;\n    }\n    return iMinVertex;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0\n            ? (right && isClockwise) || (!right && !isClockwise)\n            : (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {EVENT} originalEvent Original event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {EVENT}\n         * @api\n         */\n        _this.originalEvent = originalEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM',\n};\n//# sourceMappingURL=GeometryLayout.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ =\n            properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ ||\n            /** @type {?} */ ({\n                layer: this,\n                managed: opt_managed === undefined ? true : opt_managed,\n            });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex =\n            zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * Clean up.\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush/rbush.js';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value,\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value,\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature',\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml',\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport { VOID } from './functions.js';\n/**\n *\n * @type {boolean}\n * @private\n */\nvar withCredentials = false;\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        xhr.withCredentials = withCredentials;\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success.call(this, format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection,\n                    }), format.readProjection(source));\n                }\n                else {\n                    failure.call(this);\n                }\n            }\n            else {\n                failure.call(this);\n            }\n        }.bind(this);\n        /**\n         * @private\n         */\n        xhr.onerror = function () {\n            failure.call(this);\n        }.bind(this);\n        xhr.send();\n    });\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    return loadFeaturesXhr(url, format, \n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n        var sourceOrTile = /** @type {?} */ (this);\n        if (typeof sourceOrTile.addFeatures === 'function') {\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n        }\n    }, \n    /* FIXME handle error */ VOID);\n}\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n    withCredentials = xhrWithCredentials;\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { getValues, isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n     */\n    function VectorSourceEvent(type, opt_feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being added or removed.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, \n            /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ =\n            options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this),\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.getInExtent(extent);\n        }\n        else if (this.featuresCollection_) {\n            return this.featuresCollection_.getArray();\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LinearRing} Simplified LinearRing.\n     * @protected\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { modulo } from '../math.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { offset as sphereOffset } from '../sphere.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Polygon} Simplified Polygon.\n     * @protected\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [\n        minX,\n        minY,\n        minX,\n        maxY,\n        maxX,\n        maxY,\n        maxX,\n        minY,\n        minX,\n        minY,\n    ];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n        flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n        flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) {\n        // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) {\n        // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) {\n        // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return (HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0);\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport { apply as applyTransform, create as createTransform, multiply as multiplyTransform, scale as scaleTransform, } from './transform.js';\nimport { getSquaredTolerance } from './renderer/vector.js';\nimport { getTransformFromProjections, getUserProjection } from './proj.js';\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n    var canvas = context.canvas;\n    var options = opt_options ? opt_options : {};\n    var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n    var size = options.size;\n    if (size) {\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n    }\n    var extent = [0, 0, canvas.width, canvas.height];\n    var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n    return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @returns {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n    var frameState = event.frameState;\n    var transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n    var squaredTolerance = getSquaredTolerance(frameState.viewState.resolution, frameState.pixelRatio);\n    var userTransform;\n    var userProjection = getUserProjection();\n    if (userProjection) {\n        userTransform = getTransformFromProjections(userProjection, frameState.viewState.projection);\n    }\n    return new CanvasImmediateRenderer(event.context, frameState.pixelRatio, frameState.extent, transform, frameState.viewState.rotation, squaredTolerance, userTransform);\n}\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n    var result = pixel.slice(0);\n    applyTransform(event.inversePixelTransform.slice(), result);\n    return result;\n}\n/**\n * @param {import(\"./PluggableMap.js\").FrameState} frameState Frame state.\n * @param {?} declutterTree Declutter tree.\n * @returns {?} Declutter tree.\n */\nexport function renderDeclutterItems(frameState, declutterTree) {\n    if (declutterTree) {\n        declutterTree.clear();\n    }\n    var items = frameState.declutterItems;\n    for (var z = items.length - 1; z >= 0; --z) {\n        var item = items[z];\n        var zIndexItems = item.items;\n        for (var i = 0, ii = zIndexItems.length; i < ii; i += 3) {\n            declutterTree = zIndexItems[i].renderDeclutter(zIndexItems[i + 1], zIndexItems[i + 2], item.opacity, declutterTree);\n        }\n    }\n    items.length = 0;\n    return declutterTree;\n}\n//# sourceMappingURL=render.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { renderDeclutterItems } from '../render.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         */\n        _this.declutterTree_ = null;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            return callback.call(thisArg, feature, managed ? layer : null);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n                if (layer.hasRenderer() &&\n                    inView(layerState, viewState) &&\n                    layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX()\n                            ? translatedCoordinate\n                            : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, declutteredFeatures);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        this.declutterTree_ = renderDeclutterItems(frameState, this.declutterTree_);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY &&\n                    layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n        }\n        _super.prototype.renderFrame.call(this, frameState);\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() &&\n                inView(layerState, viewState) &&\n                layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign, clear } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers',\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof ( /** @type {?} */(layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { listen, unlistenByKey } from './events.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance\n            ? moveTolerance * DEVICE_PIXEL_RATIO\n            : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped &&\n            !this.dragging_ &&\n            this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            this.dragListenerKeys_.push(listen(document, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(document, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n            if (this.element_.getRootNode &&\n                this.element_.getRootNode() !== document) {\n                this.dragListenerKeys_.push(listen(this.element_.getRootNode(), MapBrowserEventType.POINTERUP, this.handlePointerUp_, this));\n            }\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        if (!this.originalPointerMoveEvent_ ||\n            this.originalPointerMoveEvent_.defaultPrevented) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return (this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) >\n                this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_);\n    };\n    /**\n     * Clean up.\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view',\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @param {Array} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if ((tile.hifi && state === TileState.LOADED) ||\n            state === TileState.ERROR ||\n            state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading &&\n            newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return (65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution);\n}\n//# sourceMappingURL=TileQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE, PASSIVE_EVENT_LISTENERS, } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform, } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty, } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {Array<DeclutterItems>} declutterItems\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {Object} DeclutterItems\n * @property {Array<*>} items Declutter items of an executor.\n * @property {number} opacity Layer opacity.\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ =\n            options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ =\n            options.pixelRatio !== undefined\n                ? options.pixelRatio\n                : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className =\n            'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.style.pointerEvents = 'none';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.moveTolerance_ = options.moveTolerance;\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {undefined|function(Event): void}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(\n            /** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * Clean up.\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined\n            ? opt_options.hitTolerance * this.frameState_.pixelRatio\n            : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined\n            ? options.hitTolerance * this.frameState_.pixelRatio\n            : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined\n            ? opt_options.hitTolerance * this.frameState_.pixelRatio\n            : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {UIEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = \n        //FIXME Are we really calling this with a TouchEvent anywhere?\n        'changedTouches' in event\n            ? /** @type {TouchEvent} */ (event).changedTouches[0]\n            : /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top,\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string'\n                ? document.getElementById(target)\n                : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return /** @type {View} */ (this.get(MapProperty.VIEW));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {UIEvent} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n        var eventType = originalEvent.type;\n        if (eventType === PointerEventType.POINTERDOWN ||\n            eventType === EventType.WHEEL ||\n            eventType === EventType.KEYDOWN) {\n            var rootNode = this.viewport_.getRootNode\n                ? this.viewport_.getRootNode()\n                : document;\n            var target = rootNode === document\n                ? /** @type {Node} */ (originalEvent.target)\n                : /** @type {ShadowRoot} */ (rootNode).elementFromPoint(originalEvent.clientX, originalEvent.clientY);\n            if (\n            // Abort if the target is a child of the container for elements whose events are not meant\n            // to be handled by map interactions.\n            this.overlayContainerStopEvent_.contains(target) ||\n                // Abort if the event target is a child of the container that is no longer in the page.\n                // It's possible for the target to no longer be in the page if it has been removed in an\n                // event listener, this might happen in a Control that recreates it's content based on\n                // user interaction either manually or via a render in something like https://reactjs.org/\n                !(rootNode === document ? document.documentElement : rootNode).contains(target)) {\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState &&\n            this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n            !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() &&\n            !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView() && !this.getView().getAnimating()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.mapBrowserEventHandler_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n            this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n            this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n            this.mapBrowserEventHandler_.dispose();\n            this.mapBrowserEventHandler_ = null;\n            removeNode(this.viewport_);\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n            for (var key in MapBrowserEventType) {\n                this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n            }\n            this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n            this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n            var keyboardEventTarget = !this.keyboardEventTarget_\n                ? targetElement\n                : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this),\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this),\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterItems: previousFrameState\n                    ? previousFrameState.declutterItems\n                    : [],\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {},\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        this.postRenderTimeoutHandle_ = setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth']),\n            ]);\n        }\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10),\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget =\n            typeof options.keyboardEventTarget === 'string'\n                ? document.getElementById(options.keyboardEventTarget)\n                : options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers &&\n        typeof ( /** @type {?} */(options.layers).getLayers) === 'function'\n        ? /** @type {LayerGroup} */ (options.layers)\n        : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] =\n        options.view !== undefined ? options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.controls).getArray) === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.interactions).getArray) ===\n                'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.overlays).getArray) === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values,\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport { VOID } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { removeNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        var element = options.element;\n        if (element && !options.target && !element.style.pointerEvents) {\n            element.style.pointerEvents = 'auto';\n        }\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = element ? element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_\n                ? this.target_\n                : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * Renders the control.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @api\n     */\n    Control.prototype.render = function (mapEvent) { };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ =\n            typeof target === 'string' ? document.getElementById(target) : target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ =\n            options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ =\n            options.collapsible !== undefined ? options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className +\n            ' ' +\n            CLASS_UNSELECTABLE +\n            ' ' +\n            CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ &&\n                source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Update the attribution element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Attribution.prototype.render = function (mapEvent) {\n        this.updateElement_(mapEvent.frameState);\n    };\n    return Attribution;\n}(Control));\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    /**\n     * Update the rotate control element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Rotate.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            return;\n        }\n        var rotation = frameState.viewState.rotation;\n        if (rotation != this.rotation_) {\n            var transform = 'rotate(' + rotation + 'rad)';\n            if (this.autoHide_) {\n                var contains = this.element.classList.contains(CLASS_HIDDEN);\n                if (!contains && rotation === 0) {\n                    this.element.classList.add(CLASS_HIDDEN);\n                }\n                else if (contains && rotation !== 0) {\n                    this.element.classList.remove(CLASS_HIDDEN);\n                }\n            }\n            this.label_.style.transform = transform;\n        }\n        this.rotation_ = rotation;\n    };\n    return Rotate;\n}(Control));\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined\n            ? options.zoomOutTipLabel\n            : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string'\n            ? document.createTextNode(zoomInLabel)\n            : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string'\n            ? document.createTextNode(zoomOutLabel)\n            : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ? options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n     * doubleclick) and eventually zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    DoubleClickZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n            var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n            var map = mapBrowserEvent.map;\n            var anchor = mapBrowserEvent.coordinate;\n            var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, anchor, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n        return !stopEvent;\n    };\n    return DoubleClickZoom;\n}(Interaction));\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { all, focusWithTabindex, noModifierKeys, primaryAction, } from '../events/condition.js';\nimport { easeOut } from '../easing.js';\nimport { rotate as rotateCoordinate, scale as scaleCoordinate, } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        var condition = options.condition\n            ? options.condition\n            : all(noModifierKeys, primaryAction);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1],\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n        mapBrowserEvent.originalEvent.preventDefault();\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle),\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut,\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { altShiftKeysOnly, mouseActionButton, mouseOnly, } from '../events/condition.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.style.pointerEvents = 'auto';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]],\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport { mouseActionButton } from '../events/condition.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        if (options.onBoxEnd) {\n            _this.onBoxEnd = options.onBoxEnd;\n        }\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : mouseActionButton;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition\n            ? options.boxEndCondition\n            : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragBox.prototype.onBoxEnd = function (event) { };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter, } from '../extent.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragZoom.prototype.onBoxEnd = function (event) {\n        var map = this.getMap();\n        var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n        var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n        var extent = this.getGeometry().getExtent();\n        if (this.out_) {\n            var mapExtent = view.calculateExtentInternal(size);\n            var boxPixelExtent = createOrUpdateFromCoordinates([\n                map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n                map.getPixelFromCoordinateInternal(getTopRight(extent)),\n            ]);\n            var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n            scaleFromCenter(mapExtent, 1 / factor);\n            extent = mapExtent;\n        }\n        var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n        var center = view.getConstrainedCenter(getCenter(extent), resolution);\n        view.animateInternal({\n            resolution: resolution,\n            center: center,\n            duration: this.duration_,\n            easing: easeOut,\n        });\n    };\n    return DragZoom;\n}(DragBox));\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { pan } from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport { rotate as rotateCoordinate } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return (noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent));\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ =\n            options.condition !== undefined\n                ? options.condition\n                : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ =\n            options.pixelDelta !== undefined ? options.pixelDelta : 128;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n     * pressed).\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardPan}\n     */\n    KeyboardPan.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var keyCode = keyEvent.keyCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (keyCode == KeyCode.DOWN ||\n                    keyCode == KeyCode.LEFT ||\n                    keyCode == KeyCode.RIGHT ||\n                    keyCode == KeyCode.UP)) {\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n                var deltaX = 0, deltaY = 0;\n                if (keyCode == KeyCode.DOWN) {\n                    deltaY = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.LEFT) {\n                    deltaX = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.RIGHT) {\n                    deltaX = mapUnitsDelta;\n                }\n                else {\n                    deltaY = mapUnitsDelta;\n                }\n                var delta = [deltaX, deltaY];\n                rotateCoordinate(delta, view.getRotation());\n                pan(view, delta, this.duration_);\n                mapBrowserEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardPan;\n}(Interaction));\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { targetNotEditable } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n     * key pressed was '+' or '-').\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardZoom}\n     */\n    KeyboardZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN ||\n            mapBrowserEvent.type == EventType.KEYPRESS) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var charCode = keyEvent.charCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n                var map = mapBrowserEvent.map;\n                var delta = charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n                var view = map.getView();\n                zoomByDelta(view, delta, undefined, this.duration_);\n                mapBrowserEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardZoom;\n}(Interaction));\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport { all, always, focusWithTabindex } from '../events/condition.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel',\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ =\n            options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.constrainResolution_ =\n            options.constrainResolution !== undefined\n                ? options.constrainResolution\n                : false;\n        var condition = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.deltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n        }\n        var view = map.getView();\n        if (this.mode_ === Mode.TRACKPAD &&\n            !(view.getConstrainResolution() || this.constrainResolution_)) {\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n            view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n        if (view.getConstrainResolution() || this.constrainResolution_) {\n            // view has a zoom constraint, zoom by 1\n            delta = delta ? (delta > 0 ? 1 : -1) : 0;\n        }\n        zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined\n        ? options.altShiftDragRotate\n        : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            onFocusOnly: options.onFocusOnly,\n            kinetic: kinetic,\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            onFocusOnly: options.onFocusOnly,\n            duration: options.zoomDuration,\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions({\n                onFocusOnly: true,\n            });\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n    typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            },\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise\n            .then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' &&\n                    error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler),\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/Style\n */\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {import(\"./Image.js\").default}\n         */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex(),\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)',\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25,\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5,\n                }),\n                fill: fill,\n                stroke: stroke,\n            }),\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5],\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2,\n            }),\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width,\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue,\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2,\n                }),\n            }),\n            zIndex: Infinity,\n        }),\n    ];\n    styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Origin is at bottom left\n     * @api\n     */\n    BOTTOM_LEFT: 'bottom-left',\n    /**\n     * Origin is at bottom right\n     * @api\n     */\n    BOTTOM_RIGHT: 'bottom-right',\n    /**\n     * Origin is at top left\n     * @api\n     */\n    TOP_LEFT: 'top-left',\n    /**\n     * Origin is at top right\n     * @api\n     */\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar taintedTestContext = null;\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            if (!taintedTestContext) {\n                taintedTestContext = createCanvasContext2D(1, 1);\n            }\n            taintedTestContext.drawImage(this.image_, 0, 0);\n            try {\n                taintedTestContext.getImageData(0, 0, 1, 1);\n                this.tainted_ = false;\n            }\n            catch (e) {\n                taintedTestContext = null;\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        else {\n            this.size_ = [this.image_.width, this.image_.height];\n        }\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Image or Canvas element.\n     */\n    IconImage.prototype.getPixelRatio = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? pixelRatio : 1;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function (pixelRatio) {\n        if (!this.color_ || this.canvas_[pixelRatio]) {\n            return;\n        }\n        var canvas = document.createElement('canvas');\n        this.canvas_[pixelRatio] = canvas;\n        canvas.width = Math.ceil(this.image_.width * pixelRatio);\n        canvas.height = Math.ceil(this.image_.height * pixelRatio);\n        var ctx = canvas.getContext('2d');\n        ctx.scale(pixelRatio, pixelRatio);\n        ctx.drawImage(this.image_, 0, 0);\n        if (this.isTainted_()) {\n            // If reading from the canvas throws a SecurityError the same effect can be\n            // achieved with globalCompositeOperation.\n            // This could be used as the default, but it is not fully supported by all\n            // browsers. E. g. Internet Explorer 11 does not support the multiply\n            // operation and the resulting image shape will be completelly filled with\n            // the provided color.\n            // So this is only used as a fallback. It is still better than having no icon\n            // at all.\n            var c = this.color_;\n            ctx.globalCompositeOperation = 'multiply';\n            ctx.fillStyle = 'rgb(' + c[0] + ',' + c[1] + ',' + c[2] + ')';\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.drawImage(this.image_, 0, 0);\n            return;\n        }\n        var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        var data = imgData.data;\n        var r = this.color_[0] / 255.0;\n        var g = this.color_[1] / 255.0;\n        var b = this.color_[2] / 255.0;\n        for (var i = 0, ii = data.length; i < ii; i += 4) {\n            data[i] *= r;\n            data[i + 1] *= g;\n            data[i + 2] *= b;\n        }\n        ctx.putImageData(imgData, 0, 0);\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            rotateWithView: rotateWithView,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ =\n            options.anchorOrigin !== undefined\n                ? options.anchorOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ =\n            options.anchorXUnits !== undefined\n                ? options.anchorXUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ =\n            options.anchorYUnits !== undefined\n                ? options.anchorYUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, \n        /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ =\n            options.offsetOrigin !== undefined\n                ? options.offsetOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: this.color_ && this.color_.slice\n                ? this.color_.slice()\n                : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n        });\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * Get the pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} The pixel ration of the image.\n     * @api\n     */\n    Icon.prototype.getPixelRatio = function (pixelRatio) {\n        return this.iconImage_.getPixelRatio(pixelRatio);\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    Icon.prototype.getHitDetectionImageSize = function () {\n        return this.getImageSize();\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    Icon.prototype.getHitDetectionImage = function () {\n        return this.iconImage_.getHitDetectionImage();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        var displacement = this.getDisplacement();\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        offset[0] += displacement[0];\n        offset[1] += displacement[1];\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error',\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, { createOrUpdate as createOrUpdateTileRange, } from '../TileRange.js';\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport { clamp } from '../math.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { toSize } from '../size.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined && !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ =\n            options.tileSize !== undefined\n                ? options.tileSize\n                : !this.tileSizes_\n                    ? DEFAULT_TILE_SIZE\n                    : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = (scale * xFromOrigin) / tileSize[0];\n        var tileCoordY = (scale * yFromOrigin) / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport { toDegrees, toRadians } from './math.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) *\n            Math.sin(deltaLonBy2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area +=\n            toRadians(x2 - x1) *\n                (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return (area * radius * radius) / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 +\n        Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange',\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n})();\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport var log2 = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var log2;\n    if ('log2' in Math) {\n        // The environment supports the native Math.log2 function, use it…\n        log2 = Math.log2;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        log2 = function (x) {\n            return Math.log(x) * Math.LOG2E;\n        };\n    }\n    return log2;\n})();\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return (angleInRadians * 180) / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return (angleInDegrees * Math.PI) / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Anchor is a fraction\n     * @api\n     */\n    FRACTION: 'fraction',\n    /**\n     * Anchor is in pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' +\n            path +\n            '/doc/errors/#' +\n            code +\n            ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {CanvasLineCap|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {CanvasLineJoin|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth(),\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {CanvasLineCap|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {CanvasLineJoin|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {CanvasLineCap|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {CanvasLineJoin|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = (2 * Math.PI) / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index +=\n                stride *\n                    Math.max(((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n                        maxDelta) |\n                        0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, create as createTransform, } from '../transform.js';\nimport { createEmpty, createOrUpdateEmpty, getHeight, returnOrUpdate, } from '../extent.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport { memoizeOne } from '../functions.js';\nimport { transform2D } from './flat/transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            var extent = this.computeExtent(this.extent_);\n            if (isNaN(extent[0]) || isNaN(extent[1])) {\n                createOrUpdateEmpty(extent);\n            }\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS\n            ? function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            }\n            : getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport { rotate, scale, transform2D, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./GeometryLayout.js\").default}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {import(\"./GeometryLayout.js\").default} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + ((high - low) >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) {\n            /* Too low. */\n            low = mid + 1;\n        }\n        else {\n            /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || (opt_strict && res === 0));\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation',\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = (maxX + minX) / 2;\n                maxX = minX;\n            }\n            if (minY > maxY) {\n                minY = (maxY + minY) / 2;\n                maxY = minY;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x +=\n                    -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y +=\n                    -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { clamp } from './math.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { linearFindNearest } from './array.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    if (showFullExtent) {\n        return Math.min(resolution, Math.max(xResolution, yResolution));\n    }\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *=\n        Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n            1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /=\n            Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n                ratio +\n                1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var tolerance = 1e-9;\n            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n            var offset = -direction * (0.5 - tolerance) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, createProjection, fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from './proj.js';\nimport { VOID } from './functions.js';\nimport { add as addCoordinate, equals as coordinatesEqual, rotate as rotateCoordinate, } from './coordinate.js';\nimport { assert } from './asserts.js';\nimport { assign } from './obj.js';\nimport { none as centerNone, createExtent } from './centerconstraint.js';\nimport { clamp, modulo } from './math.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\nimport { createSnapToN, createSnapToZero, disable, none as rotationNone, } from './rotationconstraint.js';\nimport { createSnapToPower, createSnapToResolutions, } from './resolutionconstraint.js';\nimport { easeOut } from './easing.js';\nimport { equals } from './coordinate.js';\nimport { getCenter, getForViewAndSize, getHeight, getWidth, isEmpty, } from './extent.js';\nimport { inAndOut } from './easing.js';\nimport { linearFindNearest } from './array.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./size.js\").Size}\n         */\n        _this.viewportSize_ = [100, 100];\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.cancelAnchor_ = undefined;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint,\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 &&\n            typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback,\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        var anchor;\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n            if (!anchor) {\n                for (var j = 0, jj = series.length; j < jj; ++j) {\n                    var animation = series[j];\n                    if (!animation.complete) {\n                        anchor = animation.anchor;\n                        break;\n                    }\n                }\n            }\n        }\n        this.animations_.length = 0;\n        this.cancelAnchor_ = anchor;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1\n                        ? animation.targetResolution\n                        : animation.sourceResolution +\n                            progress *\n                                (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getViewportSize_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined &&\n                    animation.targetRotation !== undefined) {\n                    var rotation = progress === 1\n                        ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                            Math.PI\n                        : animation.sourceRotation +\n                            progress *\n                                (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] -\n                (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n            var y = anchor[1] -\n                (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * Returns the current viewport size.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getViewportSize_ = function (opt_rotation) {\n        var size = this.viewportSize_;\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            return [\n                Math.abs(w * Math.cos(opt_rotation)) +\n                    Math.abs(h * Math.sin(opt_rotation)),\n                Math.abs(w * Math.sin(opt_rotation)) +\n                    Math.abs(h * Math.cos(opt_rotation)),\n            ];\n        }\n        else {\n            return size;\n        }\n    };\n    /**\n     * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n     * to avoid performance hit and layout reflow.\n     * This should be done on map size change.\n     * Note: the constraints are not resolved during an animation to avoid stopping it\n     * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n     */\n    View.prototype.setViewportSize = function (opt_size) {\n        this.viewportSize_ = Array.isArray(opt_size)\n            ? opt_size.slice()\n            : [100, 100];\n        if (!this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @return {boolean} Resolution constraint is set\n     */\n    View.prototype.getConstrainResolution = function () {\n        return this.options_.constrainResolution;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n     * of the map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var logPower = Math.log(opt_power || 2);\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / logPower;\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = Math.log(maxResolution / resolution) / logPower / max;\n            return value;\n        });\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom(),\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return (this.resolutions_[baseLevel] /\n                Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1)));\n        }\n        else {\n            return (this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_));\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = assign({ size: this.getViewportSize_() }, opt_options || {});\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) ||\n            typeof ( /** @type {?} */(geometryOrExtent).getSimplifiedGeometry) ===\n                'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n                    .clone()\n                    .transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getViewportSize_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution)\n            ? minResolution\n            : Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n        centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing,\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenterInternal([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getViewportSize_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {import(\"./ViewHint.js\").default} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) ||\n            !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n        this.cancelAnchor_ = undefined;\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0 && !this.cancelAnchor_) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n        this.cancelAnchor_ = undefined;\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: anchor,\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined\n            ? options.smoothExtentConstraint\n            : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ? options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined\n        ? options.smoothResolutionConstraint\n        : true;\n    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution =\n            resolutions[maxZoom] !== undefined\n                ? resolutions[maxZoom]\n                : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent\n            ? // use an extent that can fit the whole world if need be\n                (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n            : Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution /\n            Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom =\n            minZoom +\n                Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    return {\n        constraint: resolutionConstraint,\n        maxResolution: maxResolution,\n        minResolution: minResolution,\n        minZoom: minZoom,\n        zoomFactor: zoomFactor,\n    };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/coordinate\n */\nimport { getWidth } from './extent.js';\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + (r * dx) / d;\n    var y = y0 + (r * dy) / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = dx === 0 && dy === 0\n        ? 0\n        : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - deg * 3600 - min * 60;\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return (deg +\n        '\\u00b0 ' +\n        padNumber(min, 2) +\n        '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) +\n        '\\u2033' +\n        (normalizedDegrees == 0\n            ? ''\n            : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return (degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n            ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    var worldWidth = getWidth(projection.getExtent());\n    var worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n        coordinate[0] -= worldsAway * worldWidth;\n    }\n    return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number=} opt_sourceExtentWidth Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n    var projectionExtent = projection.getExtent();\n    var worldsAway = 0;\n    if (projection.canWrapX() &&\n        (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])) {\n        var sourceExtentWidth = opt_sourceExtentWidth || getWidth(projectionExtent);\n        worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / sourceExtentWidth);\n    }\n    return worldsAway;\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number|import(\"../size.js\").Size} scale\n * @property {Array<number>} displacement\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.displacement_ = options.displacement;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number|import(\"../size.js\").Size} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    ImageStyle.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the displacement of the shape\n     * @return {Array<number>} Shape's center displacement\n     * @api\n     */\n    ImageStyle.prototype.getDisplacement = function () {\n        return this.displacement_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function () {\n        return abstract();\n    };\n    /*\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * */\n    ImageStyle.prototype.getPixelRatio = function (pixelRatio) {\n        return 1;\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale);\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Circle\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { createOrUpdate, forEachCorner, intersects } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { rotate, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    /**\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     *     For internal use, flat coordinates in combination with `opt_layout` and no\n     *     `opt_radius` are also accepted.\n     * @param {number=} opt_radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Circle(center, opt_radius, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout !== undefined && opt_radius === undefined) {\n            _this.setFlatCoordinates(opt_layout, center);\n        }\n        else {\n            var radius = opt_radius ? opt_radius : 0;\n            _this.setCenterAndRadius(center, radius, opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Circle} Clone.\n     * @api\n     */\n    Circle.prototype.clone = function () {\n        return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Circle.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        var squaredDistance = dx * dx + dy * dy;\n        if (squaredDistance < minSquaredDistance) {\n            if (squaredDistance === 0) {\n                for (var i = 0; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            else {\n                var delta = this.getRadius() / Math.sqrt(squaredDistance);\n                closestPoint[0] = flatCoordinates[0] + delta * dx;\n                closestPoint[1] = flatCoordinates[1] + delta * dy;\n                for (var i = 2; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            closestPoint.length = this.stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Circle.prototype.containsXY = function (x, y) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        return dx * dx + dy * dy <= this.getRadiusSquared_();\n    };\n    /**\n     * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @return {import(\"../coordinate.js\").Coordinate} Center.\n     * @api\n     */\n    Circle.prototype.getCenter = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Circle.prototype.computeExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n        return createOrUpdate(flatCoordinates[0] - radius, flatCoordinates[1] - radius, flatCoordinates[0] + radius, flatCoordinates[1] + radius, extent);\n    };\n    /**\n     * Return the radius of the circle.\n     * @return {number} Radius.\n     * @api\n     */\n    Circle.prototype.getRadius = function () {\n        return Math.sqrt(this.getRadiusSquared_());\n    };\n    /**\n     * @private\n     * @return {number} Radius squared.\n     */\n    Circle.prototype.getRadiusSquared_ = function () {\n        var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n        var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n        return dx * dx + dy * dy;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Circle.prototype.getType = function () {\n        return GeometryType.CIRCLE;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Circle.prototype.intersectsExtent = function (extent) {\n        var circleExtent = this.getExtent();\n        if (intersects(extent, circleExtent)) {\n            var center = this.getCenter();\n            if (extent[0] <= center[0] && extent[2] >= center[0]) {\n                return true;\n            }\n            if (extent[1] <= center[1] && extent[3] >= center[1]) {\n                return true;\n            }\n            return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n        }\n        return false;\n    };\n    /**\n     * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\n     * @api\n     */\n    Circle.prototype.setCenter = function (center) {\n        var stride = this.stride;\n        var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n        var flatCoordinates = center.slice();\n        flatCoordinates[stride] = flatCoordinates[0] + radius;\n        for (var i = 1; i < stride; ++i) {\n            flatCoordinates[stride + i] = center[i];\n        }\n        this.setFlatCoordinates(this.layout, flatCoordinates);\n        this.changed();\n    };\n    /**\n     * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n     * number) of the circle.\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     * @param {number} radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Circle.prototype.setCenterAndRadius = function (center, radius, opt_layout) {\n        this.setLayout(opt_layout, center, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        /** @type {Array<number>} */\n        var flatCoordinates = this.flatCoordinates;\n        var offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n        flatCoordinates[offset++] = flatCoordinates[0] + radius;\n        for (var i = 1, ii = this.stride; i < ii; ++i) {\n            flatCoordinates[offset++] = flatCoordinates[i];\n        }\n        flatCoordinates.length = offset;\n        this.changed();\n    };\n    Circle.prototype.getCoordinates = function () {\n        return null;\n    };\n    Circle.prototype.setCoordinates = function (coordinates, opt_layout) { };\n    /**\n     * Set the radius of the circle. The radius is in the units of the projection.\n     * @param {number} radius Radius.\n     * @api\n     */\n    Circle.prototype.setRadius = function (radius) {\n        this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n        this.changed();\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Circle.prototype.rotate = function (angle, anchor) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(rotate(center, 0, center.length, stride, angle, anchor, center));\n        this.changed();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Circle.prototype.translate = function (deltaX, deltaY) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(translate(center, 0, center.length, stride, deltaX, deltaY, center));\n        this.changed();\n    };\n    return Circle;\n}(SimpleGeometry));\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n//# sourceMappingURL=Circle.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport EventType from './events/EventType.js';\nimport { assert } from './asserts.js';\nimport { listen, unlistenByKey } from './events.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        _this.addEventListener(getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_);\n        if (opt_geometryOrProperties) {\n            if (typeof (\n            /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry) === 'function') {\n                var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.hasProperties() ? this.getProperties() : null);\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {Geometry|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {Geometry|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature to override the layer style.  This can be a\n     * single style object, an array of styles, or a function that takes a\n     * resolution and returns an array of styles. To unset the feature style, call\n     * `setStyle()` without arguments or a falsey value.\n     * @param {import(\"./style/Style.js\").StyleLike=} opt_style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style;\n        this.styleFunction_ = !opt_style\n            ? undefined\n            : createStyleFunction(opt_style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        this.removeEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.geometryName_ = name;\n        this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_dimension Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest, opt_dimension) {\n    var o, t;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        o = offset;\n    }\n    else if (n === 2) {\n        o = offset;\n        t = fraction;\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            t =\n                (target - cumulativeLengths[-index - 2]) /\n                    (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            o = offset + (-index - 2) * stride;\n        }\n        else {\n            o = offset + index * stride;\n        }\n    }\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var dest = opt_dest ? opt_dest : new Array(dimension);\n    for (var i = 0; i < dimension; ++i) {\n        dest[i] =\n            o === undefined\n                ? NaN\n                : t === undefined\n                    ? flatCoordinates[o + i]\n                    : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        return new LineString(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest, this.stride);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} Simplified LineString.\n     * @protected\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM, } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiLineString} Simplified MultiLineString.\n     * @protected\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        return multiPoint;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates\n            ? 0\n            : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta, } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray, } from './flat/orient.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        return new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiPolygon} Simplified MultiPolygon.\n     * @protected\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length =\n                lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, { fromCircle, makeRegular } from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { always, noModifierKeys, shiftKeyOnly } from '../events/condition.js';\nimport { boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../extent.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { fromUserCoordinate, getUserProjection } from '../proj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/GeometryType.js\").default} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=,\n *     import(\"../proj/Projection.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    CIRCLE: 'Circle',\n};\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n    /**\n     * Triggered upon feature draw start\n     * @event DrawEvent#drawstart\n     * @api\n     */\n    DRAWSTART: 'drawstart',\n    /**\n     * Triggered upon feature draw end\n     * @event DrawEvent#drawend\n     * @api\n     */\n    DRAWEND: 'drawend',\n    /**\n     * Triggered upon feature draw abortion\n     * @event DrawEvent#drawabort\n     * @api\n     */\n    DRAWABORT: 'drawabort',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /** @class */ (function (_super) {\n    __extends(DrawEvent, _super);\n    /**\n     * @param {DrawEventType} type Type.\n     * @param {Feature} feature The feature drawn.\n     */\n    function DrawEvent(type, feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being drawn.\n         * @type {Feature}\n         * @api\n         */\n        _this.feature = feature;\n        return _this;\n    }\n    return DrawEvent;\n}(Event));\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /** @class */ (function (_super) {\n    __extends(Draw, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Draw(options) {\n        var _this = this;\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.shouldHandle_ = false;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.downPx_ = null;\n        /**\n         * @type {?}\n         * @private\n         */\n        _this.downTimeout_;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.lastDragTime_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.freehand_ = false;\n        /**\n         * Target source for drawn features.\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * Target collection for drawn features.\n         * @type {import(\"../Collection.js\").default<Feature>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * Pixel distance for snapping.\n         * @type {number}\n         * @private\n         */\n        _this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n        /**\n         * Geometry type.\n         * @type {import(\"../geom/GeometryType.js\").default}\n         * @private\n         */\n        _this.type_ = /** @type {import(\"../geom/GeometryType.js\").default} */ (options.type);\n        /**\n         * Drawing mode (derived from geometry type.\n         * @type {Mode}\n         * @private\n         */\n        _this.mode_ = getMode(_this.type_);\n        /**\n         * Stop click, singleclick, and doubleclick events from firing during drawing.\n         * Default is `false`.\n         * @type {boolean}\n         * @private\n         */\n        _this.stopClick_ = !!options.stopClick;\n        /**\n         * The number of points that must be drawn before a polygon ring or line\n         * string can be finished.  The default is 3 for polygon rings and 2 for\n         * line strings.\n         * @type {number}\n         * @private\n         */\n        _this.minPoints_ = options.minPoints\n            ? options.minPoints\n            : _this.mode_ === Mode.POLYGON\n                ? 3\n                : 2;\n        /**\n         * The number of points that can be drawn before a polygon ring or line string\n         * is finished. The default is no restriction.\n         * @type {number}\n         * @private\n         */\n        _this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n        /**\n         * A function to decide if a potential finish coordinate is permissible\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.finishCondition_ = options.finishCondition\n            ? options.finishCondition\n            : TRUE;\n        var geometryFunction = options.geometryFunction;\n        if (!geometryFunction) {\n            if (_this.type_ === GeometryType.CIRCLE) {\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n                 * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, opt_geometry, projection) {\n                    var circle = opt_geometry\n                        ? /** @type {Circle} */ (opt_geometry)\n                        : new Circle([NaN, NaN]);\n                    var center = fromUserCoordinate(coordinates[0], projection);\n                    var squaredLength = squaredCoordinateDistance(center, fromUserCoordinate(coordinates[1], projection));\n                    circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\n                    var userProjection = getUserProjection();\n                    if (userProjection) {\n                        circle.transform(projection, userProjection);\n                    }\n                    return circle;\n                };\n            }\n            else {\n                var Constructor_1;\n                var mode_1 = _this.mode_;\n                if (mode_1 === Mode.POINT) {\n                    Constructor_1 = Point;\n                }\n                else if (mode_1 === Mode.LINE_STRING) {\n                    Constructor_1 = LineString;\n                }\n                else if (mode_1 === Mode.POLYGON) {\n                    Constructor_1 = Polygon;\n                }\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n                 * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, opt_geometry, projection) {\n                    var geometry = opt_geometry;\n                    if (geometry) {\n                        if (mode_1 === Mode.POLYGON) {\n                            if (coordinates[0].length) {\n                                // Add a closing coordinate to match the first\n                                geometry.setCoordinates([\n                                    coordinates[0].concat([coordinates[0][0]]),\n                                ]);\n                            }\n                            else {\n                                geometry.setCoordinates([]);\n                            }\n                        }\n                        else {\n                            geometry.setCoordinates(coordinates);\n                        }\n                    }\n                    else {\n                        geometry = new Constructor_1(coordinates);\n                    }\n                    return geometry;\n                };\n            }\n        }\n        /**\n         * @type {GeometryFunction}\n         * @private\n         */\n        _this.geometryFunction_ = geometryFunction;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.dragVertexDelay_ =\n            options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n        /**\n         * Finish coordinate for the feature (first point for polygons, last point for\n         * linestrings).\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.finishCoordinate_ = null;\n        /**\n         * Sketch feature.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchFeature_ = null;\n        /**\n         * Sketch point.\n         * @type {Feature<Point>}\n         * @private\n         */\n        _this.sketchPoint_ = null;\n        /**\n         * Sketch coordinates. Used when drawing a line or polygon.\n         * @type {SketchCoordType}\n         * @private\n         */\n        _this.sketchCoords_ = null;\n        /**\n         * Sketch line. Used when drawing polygon.\n         * @type {Feature<LineString>}\n         * @private\n         */\n        _this.sketchLine_ = null;\n        /**\n         * Sketch line coordinates. Used when drawing a polygon or circle.\n         * @type {LineCoordType}\n         * @private\n         */\n        _this.sketchLineCoords_ = null;\n        /**\n         * Squared tolerance for handling up events.  If the squared distance\n         * between a down and up event is greater than this tolerance, up events\n         * will not be handled.\n         * @type {number}\n         * @private\n         */\n        _this.squaredClickTolerance_ = options.clickTolerance\n            ? options.clickTolerance * options.clickTolerance\n            : 36;\n        /**\n         * Draw overlay where our sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: options.wrapX ? options.wrapX : false,\n            }),\n            style: options.style ? options.style : getDefaultStyleFunction(),\n            updateWhileInteracting: true,\n        });\n        /**\n         * Name of the geometry attribute for newly created features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.freehandCondition_;\n        if (options.freehand) {\n            _this.freehandCondition_ = always;\n        }\n        else {\n            _this.freehandCondition_ = options.freehandCondition\n                ? options.freehandCondition\n                : shiftKeyOnly;\n        }\n        _this.addEventListener(getChangeEventType(InteractionProperty.ACTIVE), _this.updateState_);\n        return _this;\n    }\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Draw.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        this.updateState_();\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Draw.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Draw.prototype.handleEvent = function (event) {\n        if (event.originalEvent.type === EventType.CONTEXTMENU) {\n            // Avoid context menu for long taps when drawing on mobile\n            event.preventDefault();\n        }\n        this.freehand_ =\n            this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n        var move = event.type === MapBrowserEventType.POINTERMOVE;\n        var pass = true;\n        if (!this.freehand_ &&\n            this.lastDragTime_ &&\n            event.type === MapBrowserEventType.POINTERDRAG) {\n            var now = Date.now();\n            if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n                this.downPx_ = event.pixel;\n                this.shouldHandle_ = !this.freehand_;\n                move = true;\n            }\n            else {\n                this.lastDragTime_ = undefined;\n            }\n            if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n                clearTimeout(this.downTimeout_);\n                this.downTimeout_ = undefined;\n            }\n        }\n        if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDRAG &&\n            this.sketchFeature_ !== null) {\n            this.addToDrawing_(event.coordinate);\n            pass = false;\n        }\n        else if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDOWN) {\n            pass = false;\n        }\n        else if (move) {\n            pass = event.type === MapBrowserEventType.POINTERMOVE;\n            if (pass && this.freehand_) {\n                this.handlePointerMove_(event);\n                if (this.shouldHandle_) {\n                    // Avoid page scrolling when freehand drawing on mobile\n                    event.preventDefault();\n                }\n            }\n            else if (event.originalEvent.pointerType == 'mouse' ||\n                (event.type === MapBrowserEventType.POINTERDRAG &&\n                    this.downTimeout_ === undefined)) {\n                this.handlePointerMove_(event);\n            }\n        }\n        else if (event.type === MapBrowserEventType.DBLCLICK) {\n            pass = false;\n        }\n        return _super.prototype.handleEvent.call(this, event) && pass;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Draw.prototype.handleDownEvent = function (event) {\n        this.shouldHandle_ = !this.freehand_;\n        if (this.freehand_) {\n            this.downPx_ = event.pixel;\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event);\n            }\n            return true;\n        }\n        else if (this.condition_(event)) {\n            this.lastDragTime_ = Date.now();\n            this.downTimeout_ = setTimeout(function () {\n                this.handlePointerMove_(new MapBrowserEvent(MapBrowserEventType.POINTERMOVE, event.map, event.originalEvent, false, event.frameState));\n            }.bind(this), this.dragVertexDelay_);\n            this.downPx_ = event.pixel;\n            return true;\n        }\n        else {\n            this.lastDragTime_ = undefined;\n            return false;\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Draw.prototype.handleUpEvent = function (event) {\n        var pass = true;\n        if (this.downTimeout_) {\n            clearTimeout(this.downTimeout_);\n            this.downTimeout_ = undefined;\n        }\n        this.handlePointerMove_(event);\n        var circleMode = this.mode_ === Mode.CIRCLE;\n        if (this.shouldHandle_) {\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event);\n                if (this.mode_ === Mode.POINT) {\n                    this.finishDrawing();\n                }\n            }\n            else if (this.freehand_ || circleMode) {\n                this.finishDrawing();\n            }\n            else if (this.atFinish_(event)) {\n                if (this.finishCondition_(event)) {\n                    this.finishDrawing();\n                }\n            }\n            else {\n                this.addToDrawing_(event.coordinate);\n            }\n            pass = false;\n        }\n        else if (this.freehand_) {\n            this.abortDrawing();\n        }\n        if (!pass && this.stopClick_) {\n            event.stopPropagation();\n        }\n        return pass;\n    };\n    /**\n     * Handle move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n     * @private\n     */\n    Draw.prototype.handlePointerMove_ = function (event) {\n        if (this.downPx_ &&\n            ((!this.freehand_ && this.shouldHandle_) ||\n                (this.freehand_ && !this.shouldHandle_))) {\n            var downPx = this.downPx_;\n            var clickPx = event.pixel;\n            var dx = downPx[0] - clickPx[0];\n            var dy = downPx[1] - clickPx[1];\n            var squaredDistance = dx * dx + dy * dy;\n            this.shouldHandle_ = this.freehand_\n                ? squaredDistance > this.squaredClickTolerance_\n                : squaredDistance <= this.squaredClickTolerance_;\n            if (!this.shouldHandle_) {\n                return;\n            }\n        }\n        if (this.finishCoordinate_) {\n            this.modifyDrawing_(event);\n        }\n        else {\n            this.createOrUpdateSketchPoint_(event);\n        }\n    };\n    /**\n     * Determine if an event is within the snapping tolerance of the start coord.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} The event is within the snapping tolerance of the start.\n     * @private\n     */\n    Draw.prototype.atFinish_ = function (event) {\n        var at = false;\n        if (this.sketchFeature_) {\n            var potentiallyDone = false;\n            var potentiallyFinishCoordinates = [this.finishCoordinate_];\n            if (this.mode_ === Mode.LINE_STRING) {\n                potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n            }\n            else if (this.mode_ === Mode.POLYGON) {\n                var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n                potentiallyDone = sketchCoords[0].length > this.minPoints_;\n                potentiallyFinishCoordinates = [\n                    sketchCoords[0][0],\n                    sketchCoords[0][sketchCoords[0].length - 2],\n                ];\n            }\n            if (potentiallyDone) {\n                var map = event.map;\n                for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n                    var finishCoordinate = potentiallyFinishCoordinates[i];\n                    var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n                    var pixel = event.pixel;\n                    var dx = pixel[0] - finishPixel[0];\n                    var dy = pixel[1] - finishPixel[1];\n                    var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n                    at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n                    if (at) {\n                        this.finishCoordinate_ = finishCoordinate;\n                        break;\n                    }\n                }\n            }\n        }\n        return at;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.createOrUpdateSketchPoint_ = function (event) {\n        var coordinates = event.coordinate.slice();\n        if (!this.sketchPoint_) {\n            this.sketchPoint_ = new Feature(new Point(coordinates));\n            this.updateSketchFeatures_();\n        }\n        else {\n            var sketchPointGeom = this.sketchPoint_.getGeometry();\n            sketchPointGeom.setCoordinates(coordinates);\n        }\n    };\n    /**\n     * Start the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.startDrawing_ = function (event) {\n        var start = event.coordinate;\n        var projection = event.map.getView().getProjection();\n        this.finishCoordinate_ = start;\n        if (this.mode_ === Mode.POINT) {\n            this.sketchCoords_ = start.slice();\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            this.sketchCoords_ = [[start.slice(), start.slice()]];\n            this.sketchLineCoords_ = this.sketchCoords_[0];\n        }\n        else {\n            this.sketchCoords_ = [start.slice(), start.slice()];\n        }\n        if (this.sketchLineCoords_) {\n            this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n        }\n        var geometry = this.geometryFunction_(this.sketchCoords_, undefined, projection);\n        this.sketchFeature_ = new Feature();\n        if (this.geometryName_) {\n            this.sketchFeature_.setGeometryName(this.geometryName_);\n        }\n        this.sketchFeature_.setGeometry(geometry);\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Modify the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.modifyDrawing_ = function (event) {\n        var coordinate = event.coordinate;\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = event.map.getView().getProjection();\n        var coordinates, last;\n        if (this.mode_ === Mode.POINT) {\n            last = this.sketchCoords_;\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            last = coordinates[coordinates.length - 1];\n            if (this.atFinish_(event)) {\n                // snap to finish\n                coordinate = this.finishCoordinate_.slice();\n            }\n        }\n        else {\n            coordinates = this.sketchCoords_;\n            last = coordinates[coordinates.length - 1];\n        }\n        last[0] = coordinate[0];\n        last[1] = coordinate[1];\n        this.geometryFunction_(\n        /** @type {!LineCoordType} */ (this.sketchCoords_), geometry, projection);\n        if (this.sketchPoint_) {\n            var sketchPointGeom = this.sketchPoint_.getGeometry();\n            sketchPointGeom.setCoordinates(coordinate);\n        }\n        /** @type {LineString} */\n        var sketchLineGeom;\n        if (geometry.getType() == GeometryType.POLYGON &&\n            this.mode_ !== Mode.POLYGON) {\n            if (!this.sketchLine_) {\n                this.sketchLine_ = new Feature();\n            }\n            var ring = geometry.getLinearRing(0);\n            sketchLineGeom = this.sketchLine_.getGeometry();\n            if (!sketchLineGeom) {\n                sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n                this.sketchLine_.setGeometry(sketchLineGeom);\n            }\n            else {\n                sketchLineGeom.setFlatCoordinates(ring.getLayout(), ring.getFlatCoordinates());\n                sketchLineGeom.changed();\n            }\n        }\n        else if (this.sketchLineCoords_) {\n            sketchLineGeom = this.sketchLine_.getGeometry();\n            sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Add a new coordinate to the drawing.\n     * @param {!PointCoordType} coordinate Coordinate\n     * @private\n     */\n    Draw.prototype.addToDrawing_ = function (coordinate) {\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        var done;\n        var coordinates;\n        if (this.mode_ === Mode.LINE_STRING) {\n            this.finishCoordinate_ = coordinate.slice();\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            this.geometryFunction_(coordinates, geometry, projection);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            if (done) {\n                this.finishCoordinate_ = coordinates[0];\n            }\n            this.geometryFunction_(this.sketchCoords_, geometry, projection);\n        }\n        this.updateSketchFeatures_();\n        if (done) {\n            this.finishDrawing();\n        }\n    };\n    /**\n     * Remove last point of the feature currently being drawn.\n     * @api\n     */\n    Draw.prototype.removeLastPoint = function () {\n        if (!this.sketchFeature_) {\n            return;\n        }\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        var coordinates;\n        /** @type {LineString} */\n        var sketchLineGeom;\n        if (this.mode_ === Mode.LINE_STRING) {\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            coordinates.splice(-2, 1);\n            this.geometryFunction_(coordinates, geometry, projection);\n            if (coordinates.length >= 2) {\n                this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n            }\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            coordinates.splice(-2, 1);\n            sketchLineGeom = this.sketchLine_.getGeometry();\n            sketchLineGeom.setCoordinates(coordinates);\n            this.geometryFunction_(this.sketchCoords_, geometry, projection);\n        }\n        if (coordinates.length === 0) {\n            this.abortDrawing();\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Stop drawing and add the sketch feature to the target layer.\n     * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n     * dispatched before inserting the feature.\n     * @api\n     */\n    Draw.prototype.finishDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (!sketchFeature) {\n            return;\n        }\n        var coordinates = this.sketchCoords_;\n        var geometry = sketchFeature.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        if (this.mode_ === Mode.LINE_STRING) {\n            // remove the redundant last point\n            coordinates.pop();\n            this.geometryFunction_(coordinates, geometry, projection);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            // remove the redundant last point in ring\n            /** @type {PolyCoordType} */ (coordinates)[0].pop();\n            this.geometryFunction_(coordinates, geometry, projection);\n            coordinates = geometry.getCoordinates();\n        }\n        // cast multi-part geometries\n        if (this.type_ === GeometryType.MULTI_POINT) {\n            sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n            sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_POLYGON) {\n            sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]));\n        }\n        // First dispatch event to allow full set up of feature\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n        // Then insert feature\n        if (this.features_) {\n            this.features_.push(sketchFeature);\n        }\n        if (this.source_) {\n            this.source_.addFeature(sketchFeature);\n        }\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @return {Feature} The sketch feature (or null if none).\n     * @private\n     */\n    Draw.prototype.abortDrawing_ = function () {\n        this.finishCoordinate_ = null;\n        var sketchFeature = this.sketchFeature_;\n        this.sketchFeature_ = null;\n        this.sketchPoint_ = null;\n        this.sketchLine_ = null;\n        this.overlay_.getSource().clear(true);\n        return sketchFeature;\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @api\n     */\n    Draw.prototype.abortDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (sketchFeature) {\n            this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n        }\n    };\n    /**\n     * Append coordinates to the end of the geometry that is currently being drawn.\n     * This can be used when drawing LineStrings or Polygons. Coordinates will\n     * either be appended to the current LineString or the outer ring of the current\n     * Polygon.\n     * @param {!LineCoordType} coordinates Linear coordinates to be appended into\n     * the coordinate array.\n     * @api\n     */\n    Draw.prototype.appendCoordinates = function (coordinates) {\n        var mode = this.mode_;\n        var sketchCoords = [];\n        if (mode === Mode.LINE_STRING) {\n            sketchCoords = /** @type {LineCoordType} */ this.sketchCoords_;\n        }\n        else if (mode === Mode.POLYGON) {\n            sketchCoords =\n                this.sketchCoords_ && this.sketchCoords_.length\n                    ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n                    : [];\n        }\n        // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n        var ending = sketchCoords.pop();\n        // Append coordinate list\n        for (var i = 0; i < coordinates.length; i++) {\n            this.addToDrawing_(coordinates[i]);\n        }\n        // Duplicate last coordinate for sketch drawing\n        this.addToDrawing_(ending);\n    };\n    /**\n     * Initiate draw mode by starting from an existing geometry which will\n     * receive new additional points. This only works on features with\n     * `LineString` geometries, where the interaction will extend lines by adding\n     * points to the end of the coordinates array.\n     * This will change the original feature, instead of drawing a copy.\n     *\n     * The function will dispatch a `drawstart` event.\n     *\n     * @param {!Feature<LineString>} feature Feature to be extended.\n     * @api\n     */\n    Draw.prototype.extend = function (feature) {\n        var geometry = feature.getGeometry();\n        var lineString = geometry;\n        this.sketchFeature_ = feature;\n        this.sketchCoords_ = lineString.getCoordinates();\n        var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n        this.finishCoordinate_ = last.slice();\n        this.sketchCoords_.push(last.slice());\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Redraw the sketch features.\n     * @private\n     */\n    Draw.prototype.updateSketchFeatures_ = function () {\n        var sketchFeatures = [];\n        if (this.sketchFeature_) {\n            sketchFeatures.push(this.sketchFeature_);\n        }\n        if (this.sketchLine_) {\n            sketchFeatures.push(this.sketchLine_);\n        }\n        if (this.sketchPoint_) {\n            sketchFeatures.push(this.sketchPoint_);\n        }\n        var overlaySource = this.overlay_.getSource();\n        overlaySource.clear(true);\n        overlaySource.addFeatures(sketchFeatures);\n    };\n    /**\n     * @private\n     */\n    Draw.prototype.updateState_ = function () {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            this.abortDrawing();\n        }\n        this.overlay_.setMap(active ? map : null);\n    };\n    return Draw;\n}(PointerInteraction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    return function (feature, resolution) {\n        return styles[feature.getGeometry().getType()];\n    };\n}\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n    return function (coordinates, opt_geometry, projection) {\n        var center = fromUserCoordinate(\n        /** @type {LineCoordType} */ (coordinates)[0], projection);\n        var end = fromUserCoordinate(\n        /** @type {LineCoordType} */ (coordinates)[1], projection);\n        var radius = Math.sqrt(squaredCoordinateDistance(center, end));\n        var geometry = opt_geometry\n            ? /** @type {Polygon} */ (opt_geometry)\n            : fromCircle(new Circle(center), opt_sides);\n        var angle = opt_angle;\n        if (!opt_angle) {\n            var x = end[0] - center[0];\n            var y = end[1] - center[1];\n            angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n        }\n        makeRegular(geometry, center, radius, angle);\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            geometry.transform(projection, userProjection);\n        }\n        return geometry;\n    };\n}\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n    return function (coordinates, opt_geometry, projection) {\n        var extent = boundingExtent(\n        /** @type {LineCoordType} */ (coordinates).map(function (coordinate) {\n            return fromUserCoordinate(coordinate, projection);\n        }));\n        var boxCoordinates = [\n            [\n                getBottomLeft(extent),\n                getBottomRight(extent),\n                getTopRight(extent),\n                getTopLeft(extent),\n                getBottomLeft(extent),\n            ],\n        ];\n        var geometry = opt_geometry;\n        if (geometry) {\n            geometry.setCoordinates(boxCoordinates);\n        }\n        else {\n            geometry = new Polygon(boxCoordinates);\n        }\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            geometry.transform(projection, userProjection);\n        }\n        return geometry;\n    };\n}\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n    var mode;\n    if (type === GeometryType.POINT || type === GeometryType.MULTI_POINT) {\n        mode = Mode.POINT;\n    }\n    else if (type === GeometryType.LINE_STRING ||\n        type === GeometryType.MULTI_LINE_STRING) {\n        mode = Mode.LINE_STRING;\n    }\n    else if (type === GeometryType.POLYGON ||\n        type === GeometryType.MULTI_POLYGON) {\n        mode = Mode.POLYGON;\n    }\n    else if (type === GeometryType.CIRCLE) {\n        mode = Mode.CIRCLE;\n    }\n    return /** @type {!Mode} */ (mode);\n}\nexport default Draw;\n//# sourceMappingURL=Draw.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=TileState.js.map","(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = global || self, global.RBush = factory());\n}(this, function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) { swap(arr, left, right); }\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) { i++; }\n            while (compare(arr[j], t) > 0) { j--; }\n        }\n\n        if (compare(arr[left], t) === 0) { swap(arr, left, j); }\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) { left = j + 1; }\n        if (k <= j) { right = j - 1; }\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nvar RBush = function RBush(maxEntries) {\n    if ( maxEntries === void 0 ) maxEntries = 9;\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n    this.clear();\n};\n\nRBush.prototype.all = function all () {\n    return this._all(this.data, []);\n};\n\nRBush.prototype.search = function search (bbox) {\n    var node = this.data;\n    var result = [];\n\n    if (!intersects(bbox, node)) { return result; }\n\n    var toBBox = this.toBBox;\n    var nodesToSearch = [];\n\n    while (node) {\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n            var childBBox = node.leaf ? toBBox(child) : child;\n\n            if (intersects(bbox, childBBox)) {\n                if (node.leaf) { result.push(child); }\n                else if (contains(bbox, childBBox)) { this._all(child, result); }\n                else { nodesToSearch.push(child); }\n            }\n        }\n        node = nodesToSearch.pop();\n    }\n\n    return result;\n};\n\nRBush.prototype.collides = function collides (bbox) {\n    var node = this.data;\n\n    if (!intersects(bbox, node)) { return false; }\n\n    var nodesToSearch = [];\n    while (node) {\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n            var childBBox = node.leaf ? this.toBBox(child) : child;\n\n            if (intersects(bbox, childBBox)) {\n                if (node.leaf || contains(bbox, childBBox)) { return true; }\n                nodesToSearch.push(child);\n            }\n        }\n        node = nodesToSearch.pop();\n    }\n\n    return false;\n};\n\nRBush.prototype.load = function load (data) {\n    if (!(data && data.length)) { return this; }\n\n    if (data.length < this._minEntries) {\n        for (var i = 0; i < data.length; i++) {\n            this.insert(data[i]);\n        }\n        return this;\n    }\n\n    // recursively build the tree with the given data from scratch using OMT algorithm\n    var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n    if (!this.data.children.length) {\n        // save as is if tree is empty\n        this.data = node;\n\n    } else if (this.data.height === node.height) {\n        // split root if trees have the same height\n        this._splitRoot(this.data, node);\n\n    } else {\n        if (this.data.height < node.height) {\n            // swap trees if inserted one is bigger\n            var tmpNode = this.data;\n            this.data = node;\n            node = tmpNode;\n        }\n\n        // insert the small tree into the large tree at appropriate level\n        this._insert(node, this.data.height - node.height - 1, true);\n    }\n\n    return this;\n};\n\nRBush.prototype.insert = function insert (item) {\n    if (item) { this._insert(item, this.data.height - 1); }\n    return this;\n};\n\nRBush.prototype.clear = function clear () {\n    this.data = createNode([]);\n    return this;\n};\n\nRBush.prototype.remove = function remove (item, equalsFn) {\n    if (!item) { return this; }\n\n    var node = this.data;\n    var bbox = this.toBBox(item);\n    var path = [];\n    var indexes = [];\n    var i, parent, goingUp;\n\n    // depth-first iterative tree traversal\n    while (node || path.length) {\n\n        if (!node) { // go up\n            node = path.pop();\n            parent = path[path.length - 1];\n            i = indexes.pop();\n            goingUp = true;\n        }\n\n        if (node.leaf) { // check current node\n            var index = findItem(item, node.children, equalsFn);\n\n            if (index !== -1) {\n                // item found, remove the item and condense tree upwards\n                node.children.splice(index, 1);\n                path.push(node);\n                this._condense(path);\n                return this;\n            }\n        }\n\n        if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n            path.push(node);\n            indexes.push(i);\n            i = 0;\n            parent = node;\n            node = node.children[0];\n\n        } else if (parent) { // go right\n            i++;\n            node = parent.children[i];\n            goingUp = false;\n\n        } else { node = null; } // nothing found\n    }\n\n    return this;\n};\n\nRBush.prototype.toBBox = function toBBox (item) { return item; };\n\nRBush.prototype.compareMinX = function compareMinX (a, b) { return a.minX - b.minX; };\nRBush.prototype.compareMinY = function compareMinY (a, b) { return a.minY - b.minY; };\n\nRBush.prototype.toJSON = function toJSON () { return this.data; };\n\nRBush.prototype.fromJSON = function fromJSON (data) {\n    this.data = data;\n    return this;\n};\n\nRBush.prototype._all = function _all (node, result) {\n    var nodesToSearch = [];\n    while (node) {\n        if (node.leaf) { result.push.apply(result, node.children); }\n        else { nodesToSearch.push.apply(nodesToSearch, node.children); }\n\n        node = nodesToSearch.pop();\n    }\n    return result;\n};\n\nRBush.prototype._build = function _build (items, left, right, height) {\n\n    var N = right - left + 1;\n    var M = this._maxEntries;\n    var node;\n\n    if (N <= M) {\n        // reached leaf level; return leaf\n        node = createNode(items.slice(left, right + 1));\n        calcBBox(node, this.toBBox);\n        return node;\n    }\n\n    if (!height) {\n        // target height of the bulk-loaded tree\n        height = Math.ceil(Math.log(N) / Math.log(M));\n\n        // target number of root entries to maximize storage utilization\n        M = Math.ceil(N / Math.pow(M, height - 1));\n    }\n\n    node = createNode([]);\n    node.leaf = false;\n    node.height = height;\n\n    // split the items into M mostly square tiles\n\n    var N2 = Math.ceil(N / M);\n    var N1 = N2 * Math.ceil(Math.sqrt(M));\n\n    multiSelect(items, left, right, N1, this.compareMinX);\n\n    for (var i = left; i <= right; i += N1) {\n\n        var right2 = Math.min(i + N1 - 1, right);\n\n        multiSelect(items, i, right2, N2, this.compareMinY);\n\n        for (var j = i; j <= right2; j += N2) {\n\n            var right3 = Math.min(j + N2 - 1, right2);\n\n            // pack each entry recursively\n            node.children.push(this._build(items, j, right3, height - 1));\n        }\n    }\n\n    calcBBox(node, this.toBBox);\n\n    return node;\n};\n\nRBush.prototype._chooseSubtree = function _chooseSubtree (bbox, node, level, path) {\n    while (true) {\n        path.push(node);\n\n        if (node.leaf || path.length - 1 === level) { break; }\n\n        var minArea = Infinity;\n        var minEnlargement = Infinity;\n        var targetNode = (void 0);\n\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n            var area = bboxArea(child);\n            var enlargement = enlargedArea(bbox, child) - area;\n\n            // choose entry with the least area enlargement\n            if (enlargement < minEnlargement) {\n                minEnlargement = enlargement;\n                minArea = area < minArea ? area : minArea;\n                targetNode = child;\n\n            } else if (enlargement === minEnlargement) {\n                // otherwise choose one with the smallest area\n                if (area < minArea) {\n                    minArea = area;\n                    targetNode = child;\n                }\n            }\n        }\n\n        node = targetNode || node.children[0];\n    }\n\n    return node;\n};\n\nRBush.prototype._insert = function _insert (item, level, isNode) {\n    var bbox = isNode ? item : this.toBBox(item);\n    var insertPath = [];\n\n    // find the best node for accommodating the item, saving all nodes along the path too\n    var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n    // put the item into the node\n    node.children.push(item);\n    extend(node, bbox);\n\n    // split on node overflow; propagate upwards if necessary\n    while (level >= 0) {\n        if (insertPath[level].children.length > this._maxEntries) {\n            this._split(insertPath, level);\n            level--;\n        } else { break; }\n    }\n\n    // adjust bboxes along the insertion path\n    this._adjustParentBBoxes(bbox, insertPath, level);\n};\n\n// split overflowed node into two\nRBush.prototype._split = function _split (insertPath, level) {\n    var node = insertPath[level];\n    var M = node.children.length;\n    var m = this._minEntries;\n\n    this._chooseSplitAxis(node, m, M);\n\n    var splitIndex = this._chooseSplitIndex(node, m, M);\n\n    var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n    newNode.height = node.height;\n    newNode.leaf = node.leaf;\n\n    calcBBox(node, this.toBBox);\n    calcBBox(newNode, this.toBBox);\n\n    if (level) { insertPath[level - 1].children.push(newNode); }\n    else { this._splitRoot(node, newNode); }\n};\n\nRBush.prototype._splitRoot = function _splitRoot (node, newNode) {\n    // split root node\n    this.data = createNode([node, newNode]);\n    this.data.height = node.height + 1;\n    this.data.leaf = false;\n    calcBBox(this.data, this.toBBox);\n};\n\nRBush.prototype._chooseSplitIndex = function _chooseSplitIndex (node, m, M) {\n    var index;\n    var minOverlap = Infinity;\n    var minArea = Infinity;\n\n    for (var i = m; i <= M - m; i++) {\n        var bbox1 = distBBox(node, 0, i, this.toBBox);\n        var bbox2 = distBBox(node, i, M, this.toBBox);\n\n        var overlap = intersectionArea(bbox1, bbox2);\n        var area = bboxArea(bbox1) + bboxArea(bbox2);\n\n        // choose distribution with minimum overlap\n        if (overlap < minOverlap) {\n            minOverlap = overlap;\n            index = i;\n\n            minArea = area < minArea ? area : minArea;\n\n        } else if (overlap === minOverlap) {\n            // otherwise choose distribution with minimum area\n            if (area < minArea) {\n                minArea = area;\n                index = i;\n            }\n        }\n    }\n\n    return index || M - m;\n};\n\n// sorts node children by the best axis for split\nRBush.prototype._chooseSplitAxis = function _chooseSplitAxis (node, m, M) {\n    var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n    var compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n    var xMargin = this._allDistMargin(node, m, M, compareMinX);\n    var yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n    // if total distributions margin value is minimal for x, sort by minX,\n    // otherwise it's already sorted by minY\n    if (xMargin < yMargin) { node.children.sort(compareMinX); }\n};\n\n// total margin of all possible split distributions where each node is at least m full\nRBush.prototype._allDistMargin = function _allDistMargin (node, m, M, compare) {\n    node.children.sort(compare);\n\n    var toBBox = this.toBBox;\n    var leftBBox = distBBox(node, 0, m, toBBox);\n    var rightBBox = distBBox(node, M - m, M, toBBox);\n    var margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n    for (var i = m; i < M - m; i++) {\n        var child = node.children[i];\n        extend(leftBBox, node.leaf ? toBBox(child) : child);\n        margin += bboxMargin(leftBBox);\n    }\n\n    for (var i$1 = M - m - 1; i$1 >= m; i$1--) {\n        var child$1 = node.children[i$1];\n        extend(rightBBox, node.leaf ? toBBox(child$1) : child$1);\n        margin += bboxMargin(rightBBox);\n    }\n\n    return margin;\n};\n\nRBush.prototype._adjustParentBBoxes = function _adjustParentBBoxes (bbox, path, level) {\n    // adjust bboxes along the given tree path\n    for (var i = level; i >= 0; i--) {\n        extend(path[i], bbox);\n    }\n};\n\nRBush.prototype._condense = function _condense (path) {\n    // go through the path, removing empty nodes and updating bboxes\n    for (var i = path.length - 1, siblings = (void 0); i >= 0; i--) {\n        if (path[i].children.length === 0) {\n            if (i > 0) {\n                siblings = path[i - 1].children;\n                siblings.splice(siblings.indexOf(path[i]), 1);\n\n            } else { this.clear(); }\n\n        } else { calcBBox(path[i], this.toBBox); }\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) { return items.indexOf(item); }\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) { return i; }\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) { destNode = createNode(null); }\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k; i < p; i++) {\n        var child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX);\n    var minY = Math.max(a.minY, b.minY);\n    var maxX = Math.min(a.maxX, b.maxX);\n    var maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) { continue; }\n\n        var mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\nreturn RBush;\n\n}));\n","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active',\n};\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment, } from '../../extent.js';\nimport { forEach as forEachSegment } from './segments.js';\nimport { linearRingContainsExtent, linearRingContainsXY } from './contains.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.imageScale_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.textScale_ = [0, 0];\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 ||\n                this.imageScale_[0] != 1 ||\n                this.imageScale_[1] != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n                context.translate(centerX, centerY);\n                context.scale(this.imageScale_[0], this.imageScale_[1]);\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n            }\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 ||\n                this.textScale_[0] != 1 ||\n                this.textScale_[1] != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n                context.translate(x, y);\n                context.scale(this.textScale_[0], this.textScale_[1]);\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, 0, 0);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, 0, 0);\n                }\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, x, y);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, x, y);\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(\n                /** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(\n                /** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(\n                /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(\n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(\n                /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(\n                /** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, \n            /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle,\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle,\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign\n            ? textState.textAlign\n            : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline,\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle),\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined\n                    ? strokeStyleLineCap\n                    : defaultLineCap,\n                lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset\n                    ? strokeStyleLineDashOffset\n                    : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin,\n                lineWidth: this.pixelRatio_ *\n                    (strokeStyleWidth !== undefined\n                        ? strokeStyleWidth\n                        : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle),\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageSize = imageStyle.getSize();\n            if (!imageSize) {\n                this.image_ = null;\n            }\n            else {\n                var imageAnchor = imageStyle.getAnchor();\n                // FIXME pixel ratio\n                var imageImage = imageStyle.getImage(1);\n                var imageOrigin = imageStyle.getOrigin();\n                var imageScale = imageStyle.getScaleArray();\n                this.imageAnchorX_ = imageAnchor[0];\n                this.imageAnchorY_ = imageAnchor[1];\n                this.imageHeight_ = imageSize[1];\n                this.image_ = imageImage;\n                this.imageOpacity_ = imageStyle.getOpacity();\n                this.imageOriginX_ = imageOrigin[0];\n                this.imageOriginY_ = imageOrigin[1];\n                this.imageRotateWithView_ = imageStyle.getRotateWithView();\n                this.imageRotation_ = imageStyle.getRotation();\n                this.imageScale_ = [\n                    this.pixelRatio_ * imageScale[0],\n                    this.pixelRatio_ * imageScale[1],\n                ];\n                this.imageWidth_ = imageSize[0];\n            }\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle),\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined\n                        ? textStrokeStyleLineCap\n                        : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash\n                        ? textStrokeStyleLineDash\n                        : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset\n                        ? textStrokeStyleLineDashOffset\n                        : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined\n                        ? textStrokeStyleLineJoin\n                        : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined\n                        ? textStrokeStyleWidth\n                        : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined\n                        ? textStrokeStyleMiterLimit\n                        : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle),\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScaleArray();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ? textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined\n                    ? textTextBaseline\n                    : defaultTextBaseline,\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n            this.textRotateWithView_ =\n                textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = [\n                this.pixelRatio_ * textScale[0],\n                this.pixelRatio_ * textScale[1],\n            ];\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family',\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal',\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n//# sourceMappingURL=css.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../render/canvas.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: 1,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ =\n            options.radius !== undefined ? options.radius : options.radius1;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @return {HTMLCanvasElement} Image element.\n     */\n    RegularShape.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionCanvas_) {\n            var renderOptions = this.createRenderOptions();\n            this.createHitDetectionCanvas_(renderOptions);\n        }\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        if (!this.canvas_[pixelRatio || 1]) {\n            var renderOptions = this.createRenderOptions();\n            var context = createCanvasContext2D(renderOptions.size * pixelRatio || 1, renderOptions.size * pixelRatio || 1);\n            this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n            this.canvas_[pixelRatio || 1] = context.canvas;\n        }\n        return this.canvas_[pixelRatio || 1];\n    };\n    /*\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * */\n    RegularShape.prototype.getPixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @return {import(\"../size.js\").Size} Size.\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.listenImageChange = function (listener) { };\n    /**\n     * Load not yet loaded URI.\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener) { };\n    /**\n     * @returns {RenderOptions}  The render options\n     * @protected\n     */\n    RegularShape.prototype.createRenderOptions = function () {\n        var lineCap = defaultLineCap;\n        var lineJoin = defaultLineJoin;\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        return {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit,\n        };\n    };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render = function () {\n        var renderOptions = this.createRenderOptions();\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.draw_(renderOptions, context, 0, 0, 1);\n        this.canvas_[1] = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        var size = context.canvas.width;\n        var imageSize = size;\n        var displacement = this.getDisplacement();\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     * @param {number} pixelRatio The pixel ratio.\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y, pixelRatio) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = renderOptions.lineCap;\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionCanvas_ = this.getImage(1);\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            // determine if fill is transparent (or pattern or gradient)\n            var opacity = 0;\n            if (typeof color === 'string') {\n                color = asArray(color);\n            }\n            if (color === null) {\n                opacity = 1;\n            }\n            else if (Array.isArray(color)) {\n                opacity = color.length === 4 ? color[3] : 1;\n            }\n            if (opacity === 0) {\n                // if a transparent fill style is set, create an extra hit-detection image\n                // with a default fill style\n                var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                this.hitDetectionCanvas_ = context.canvas;\n                this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {CircleStyle} The cloned style.\n     * @api\n     */\n    CircleStyle.prototype.clone = function () {\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius(),\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n        this.render();\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @protected\n         */\n        this.disposed = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed) {\n            this.disposed = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return (this.minX <= tileRange.minX &&\n            tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY &&\n            tileRange.maxY <= this.maxY);\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return (this.minX == tileRange.minX &&\n            this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX &&\n            this.maxY == tileRange.maxY);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return (this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY);\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\nimport { toString } from '../transform.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {import(\"../size.js\").Size} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * Declutter groups for support of multi geometries.\n * @typedef {Array<DeclutterGroup>} DeclutterGroups\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var div;\n    var heights = textHeights;\n    return function (fontSpec) {\n        var height = heights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                textHeights[fontSpec] =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!div) {\n                    div = document.createElement('div');\n                    div.innerHTML = 'M';\n                    div.style.margin = '0 !important';\n                    div.style.padding = '0 !important';\n                    div.style.position = 'absolute !important';\n                    div.style.left = '-99999px !important';\n                }\n                div.style.font = fontSpec;\n                document.body.appendChild(div);\n                height = div.offsetHeight;\n                heights[fontSpec] = height;\n                document.body.removeChild(div);\n            }\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nvar createTransformStringCanvas = null;\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return toString(transform);\n    }\n    else {\n        if (!createTransformStringCanvas) {\n            createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n        }\n        createTransformStringCanvas.style.transform = toString(transform);\n        return createTransformStringCanvas.style.transform;\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        _this.values_ = null;\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_ && this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return (this.values_ && Object.keys(this.values_)) || [];\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return (this.values_ && assign({}, this.values_)) || {};\n    };\n    /**\n     * @return {boolean} The object has properties.\n     */\n    BaseObject.prototype.hasProperties = function () {\n        return !!this.values_;\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        var values = this.values_ || (this.values_ = {});\n        if (opt_silent) {\n            values[key] = value;\n        }\n        else {\n            var oldValue = values[key];\n            values[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (this.values_ && key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (isEmpty(this.values_)) {\n                this.values_ = null;\n            }\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key)\n        ? changeEventTypeCache[key]\n        : (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number=} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { containsXY, createOrUpdateFromCoordinate } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle',\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroups=} opt_declutterGroups Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroups) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft',\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; offset + stride < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./State.js\").default}\n         */\n        _this.state_ =\n            options.state !== undefined ? options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {import(\"./State.js\").default} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    Source.prototype.getContextOptions = function () {\n        return undefined;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./State.js\").default} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map"],"sourceRoot":""}