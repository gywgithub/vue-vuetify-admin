{"version":3,"sources":["webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/rbush/rbush.min.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./src/components/Maps/OpenLayers.vue?f797","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/source/common.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./src/components/Maps/OpenLayers.vue?18c3","webpack:///./src/components/Maps/OpenLayers.vue?e16f","webpack:///./src/components/Maps/OpenLayers.vue","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/layer/BaseVector.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Builder.js","webpack:///./node_modules/ol/render/canvas/ImageBuilder.js","webpack:///./node_modules/ol/render/canvas/LineStringBuilder.js","webpack:///./node_modules/ol/render/canvas/PolygonBuilder.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/render/canvas/TextBuilder.js","webpack:///./node_modules/ol/render/canvas/BuilderGroup.js","webpack:///./node_modules/ol/render/canvas/BuilderType.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Executor.js","webpack:///./node_modules/ol/render/canvas/ExecutorGroup.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/render/canvas/hitdetect.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/BaseTile.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/control.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/Image.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/style/IconOrigin.js","webpack:///./node_modules/ol/style/IconImage.js","webpack:///./node_modules/ol/style/Icon.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/style/IconAnchorUnits.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/Circle.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/interaction/Draw.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/source/Source.js"],"names":["CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","all","var_args","conditions","arguments","event","pass","i","ii","length","altShiftKeysOnly","mapBrowserEvent","originalEvent","altKey","metaKey","ctrlKey","shiftKey","focus","target","getTargetElement","contains","document","activeElement","focusWithTabindex","map","hasAttribute","always","mouseActionButton","button","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerEvent","undefined","pointerType","primaryAction","isPrimary","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","getForProjection","projection","tileGrid","getDefaultTileGrid","createForProjection","setDefaultTileGrid","wrapX","tileCoord","z","center","getTileCoordCenter","projectionExtent","extentFromProjection","worldWidth","worldsAway","Math","ceil","getTileCoordForCoordAndZ","createForExtent","extent","opt_maxZoom","opt_tileSize","opt_corner","corner","TOP_LEFT","resolutions","resolutionsFromExtent","origin","tileSize","createXYZ","opt_options","xyzOptions","getExtent","gridOptions","minZoom","maxZoom","maxResolution","opt_maxResolution","height","width","max","Array","pow","half","DEGREES","getMetersPerUnit","createCanvasContext2D","opt_width","opt_height","opt_canvasPool","canvas","shift","OffscreenCanvas","createElement","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","appendChild","getInteriorPointOfArray","flatCoordinates","offset","ends","stride","flatCenters","flatCentersOffset","opt_dest","x","x1","x2","y1","y2","y","intersections","r","rr","end","push","pointX","NaN","maxSegmentLength","Infinity","sort","segmentLength","abs","isNaN","getInteriorPointsOfMultiArray","endss","interiorPoints","boundingExtent","coordinates","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","opt_extent","minX","min","apply","minY","maxX","maxY","createOrUpdate","buffer","value","clone","slice","closestSquaredDistanceXY","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","extendFlatCoordinates","equals","extend","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","isEmpty","getWidth","getHeight","getCenter","getCorner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_RIGHT","getForViewAndSize","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","opt_stops","l","canWrapX","floor","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","p","prototype","hasOwnProperty","call","__","this","constructor","create","Target","_super","opt_target","_this","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","type","listener","listeners","listenersForType","indexOf","dispatchEvent","evt","propagate","dispatching","pendingRemovals","handleEvent","propagationStopped","pr","removeEventListener","disposeInternal","getListeners","hasListener","opt_type","keys","index","splice","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","VERSION","LayerRenderer","layer","boundHandleImageChange_","handleImageChange_","bind","layer_","declutterExecutorGroup","getFeatures","pixel","prepareFrame","frameState","renderFrame","loadedTileCallback","tiles","zoom","tile","toString","createLoadedTileFinder","source","tileRange","forEachLoadedTile","forEachFeatureAtCoordinate","hitTolerance","matches","getDataAtPixel","getLayer","handleFontsChanged","image","getState","ImageState","LOADED","renderIfReadyAndVisible","loadImage","imageState","EventType","IDLE","load","getVisible","getSourceState","READY","changed","Observable","Layer","CanvasLayerRenderer","container","renderedResolution","tempTransform","pixelTransform","inversePixelTransform","context","containerReused","useContainer","transform","opacity","layerClassName","getClassName","style","className","firstElementChild","HTMLCanvasElement","position","left","transformOrigin","clip","pixelRatio","halfWidth","halfHeight","viewState","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","save","beginPath","moveTo","lineTo","clipUnrotated","inverted","round","dispatchRenderEvent_","event_1","preRender","postRender","getRenderTransform","offsetX","dx1","dy1","sx","sy","dx2","dy2","data","renderPixel","layerExtent","renderCoordinate","pixelToCoordinateTransform","newCanvas","newContext","clearRect","drawImage","getImageData","err","name","Uint8Array","ADD","REMOVE","options","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","SOURCE","handleSourcePropertyChange_","setSource","getLayersArray","opt_array","array","getLayerStatesArray","opt_states","states","getLayerState","getSource","get","UNDEFINED","handleSourceChange_","layerRenderer","getRenderer","renderEvent","layerStatesArray","layerState","some","arrayLayerState","set","createRenderer","hasRenderer","inView","visible","minResolution","douglasPeucker","squaredTolerance","simplifiedFlatCoordinates","simplifiedOffset","n","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance_1","douglasPeuckerArray","simplifiedEnds","snap","tolerance","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","listen","opt_this","opt_once","originalListener_1","eventsKey","listenOnce","unlistenByKey","key","Projection","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","PI","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","units","Units","METERS","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","output","toEPSG4326","atan","exp","METERS_PER_UNIT","EPSG4326Projection","opt_axisOrientation","cache","replace","add","transforms","destination","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","addProjections","projections","forEach","projectionLike","opt_units","pointResolution","getter","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","getTransform","transformExtent","userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","t","module","exports","e","a","h","o","s","f","u","sqrt","m","c","_maxEntries","_minEntries","clear","leaf","_all","search","toBBox","collides","insert","_build","_splitRoot","_insert","remove","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","_vm","_h","$createElement","_c","_self","staticClass","attrs","items","on","typeChange","model","$$v","drawType","expression","staticRenderFns","Tile","state","interimTile","hifi","transition_","transition","transitionStarts_","release","getKey","getInterimTile","TileState","refreshInterimChain","prev","LOADING","getTileCoord","setState","getAlpha","id","time","delta","inTransition","endTransition","ImageTile","src","crossOrigin","tileLoadFunction","crossOrigin_","src_","image_","Image","unlisten_","tileLoadFunction_","getImage","handleImageError_","unlistenImage_","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","EMPTY","ctx","fillStyle","fillRect","brokenDiagonalRendering_","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","sourceProj","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","arr","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","isFinite","isNotFinite","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","IMAGE_SMOOTHING_DISABLED","imageSmoothingEnabled","msImageSmoothingEnabled","drawTestTriangle","u1","v1","u2","v2","closePath","restore","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","globalCompositeOperation","calculateSourceResolution","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","triangulation","sources","gutter","opt_renderEdges","opt_contextOptions","pixelRound","scale","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","step","translate","strokeStyle","lineWidth","stroke","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","pixelRatio_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","getResolution","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","unlistenSources_","setTimeout","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","containsKey","entry","value_","key_","newer","older","getKeys","getValues","values","peekLast","peekLastKey","peekFirstKey","setSize","TileCache","expireCache","usedTiles","pruneExceptNewestZ","TILELOADSTART","TILELOADEND","TILELOADERROR","TileSource","attributions","attributionsCollapsible","opaque_","opaque","tilePixelRatio_","tilePixelRatio","getMinZoom","tileCache","cacheSize","tmpSize","tileOptions","zDirection","getTileCacheForProjection","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getResolutions","getTile","getTileGrid","getTileGridForProjection","getProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","getWrapX","refresh","updateCacheSize","tileCount","useTile","Source","TileSourceEvent","Event","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","getFullTileRange","createFromTemplates","templates","len","tileUrlFunctions","createFromTileUrlFunctions","expandUrl","url","urls","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop_1","parseInt","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","handleTileChange","uid","tileState","TileEventType","setTileLoadFunction","setTileUrlFunction","join","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","usedTileCache","getContextOptions","getGutter","JSON","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","XYZ","ATTRIBUTION","OSM","draw","vector","sourceVector","raster","Vector","Map","layers","view","View","Draw","freehand","addInteraction","console","info","removeInteraction","component","opt_tileCoord","getKeyZXY","fromKey","split","Number","hash","withinExtentAndZ","getMaxZoom","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","hasArea","ratio","opt_size","toSize","isArray","revision_","getRevision","once","ol_key","un","unByKey","assign","var_sources","TypeError","object","property","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","color","maxCacheSize","colorString","shared","Property","RENDER_ORDER","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","renderDeclutter","declutterTree","setRenderOrder","renderOrder","opt_style","BaseVector","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","geometry","feature","renderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","CanvasBuilder","maxExtent","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","Relationship","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","getType","getStride","builderBegin","GeometryType","MULTI_POLYGON","getOrientedFlatCoordinates","getEndss","myEnds","inflate","POLYGON","MULTI_LINE_STRING","getFlatCoordinates","getEnds","LINE_STRING","MULTI_POINT","POINT","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","begin","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","lineCap","strokeStyleLineDash","getLineDash","lineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","strokeStyleLineJoin","getLineJoin","lineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","rotation_","scale_","width_","declutterImageWithText_","myBegin","opt_sharedData","anchor","getAnchor","getSize","hitDetectionImage","getHitDetectionImage","getOrigin","getPixelRatio","getOpacity","getRotateWithView","getRotation","getScaleArray","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","fill","numEnds","setFillStrokeStyles_","circleInstruction","LINE","matchingChunk","maxAngle","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","TEXT_ALIGN","CanvasTextBuilder","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","placement","TextPlacement","geometryWidths","overflow","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoint","getFlatInteriorPoints","saveTextStates_","backgroundFill","backgroundStroke","padding","p0","p1","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","drawChars_","strokeKey","textKey","font","textBaseline","fillKey","baseline","offsetY","text","strokeWidth","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","getText","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","zIndex","builderType","zIndexKey","replays","replay","Constructor","DEFAULT","IMAGE","TEXT","drawTextOnPath","startM","measureAndCacheTextWidth","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","result","singleSegment","previousAngle_1","atan2","angle","iStart","charLength","chars","substring","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","RegExp","horizontalTextAlign","align","test","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","lineHeight","renderWidth","contextInstructions","w","label","Context","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","setLineDash","leftRight","replayTextBackground_","strokeInstruction","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","centerX","centerY","anchorX","anchorY","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","origin_1","repeatSize","rotate","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","getGeometry","arc","fn","coords","rotateWithView","declutterImageWithText","labelWithAnchor","widthIndex","args","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","ORDER","BuilderType","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","getPixelIndexArray","featureCallback","imageData","idx","result_1","j","executor","zs","opt_builderTypes","jj","builderTypes","circlePixelIndexArrayCache","radius","maxDistanceSq","distances","distanceSq","distance","pixelIndex","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","alpha","globalAlpha","setTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","GEOMETRY_COLLECTION","getGeometryFunction","geometries","getGeometriesArray","simplifyTransformed","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","createHitDetectionImageData","features","styleFunction","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","setColor","setText","imgSize","getImageSize","canvas_1","imgContext","img","width_1","height_1","iconContext","setImage","Icon","anchorXUnits","IconAnchorUnits","PIXELS","anchorYUnits","getScale","getZIndex","byGeometryType","zIndexKeys","geomAndStyle","k","kk","hitDetect","resultFeatures","g","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","opt_declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","opt_transform","loading","getImageState","unlistenImageChange","listenImageChange","renderFeatureInternal","simplifiedGeometry","renderGeometry","geometryRenderer","getGeometries","lineStringReplay","polygonReplay","imageReplay","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","renderWorlds","executorGroup","vectorSource","viewHints","ViewHint","ANIMATING","INTERACTING","multiWorld","endWorld","world","layerIndex","clipped","parseFloat","Promise","resolve","lastIndexOf","executorGroups","item","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","loadExtent","declutterBuilderGroup","userTransform","loadFeatures","dirty","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","VectorLayer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","getPointerCount","stopEvent","updateTrackedPointers_","preventDefault","handledUp","handled","isPointerDraggingEvent","pointerId","centroid","pointerEvents","clientX","clientY","Interaction","map_","setActive","getActive","ACTIVE","getMap","active","pan","opt_duration","currentCenter","getCenterInternal","animateInternal","duration","easing","getConstrainedCenter","zoomByDelta","opt_anchor","currentZoom","getZoom","newZoom","getConstrainedZoom","newResolution","getResolutionForZoom","getAnimating","cancelAnimations","animate","PRELOAD","USE_INTERIM_TILES_ON_ERROR","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","BaseTile","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpTileRange_","TileRange","isDrawableTile","tileSource","viewResolution","viewCenter","sourceRevision","tileResolution","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","getTileCoordChildTileRange","forEachTileCoordParentTileRange","canvasScale","clips","clipZs","currentClip","currentZ","currentTilePixelSize","currentResolution","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","tileGutter","tilesToDraw","floatX","nextX","floatY","nextY","drawTileImage","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alphaChanged","postRenderFunction","tileSourceKey","postRenderFunctions","opt_tileCallback","wantedTiles","tileQueue","isKeyQueued","enqueue","TileLayer","tmp","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","right","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","MapBrowserEvent","opt_dragging","pixel_","coordinate_","dragging","defineProperty","getEventPixel","enumerable","configurable","getCoordinateFromPixel","stopPropagation","XY","XYM","XYZM","BaseLayer","properties","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","setProperties","state_","opt_managed","managed","sourceState","getMaxResolution","getMinResolution","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","TRUE","FALSE","VOID","memoizeOne","lastResult","lastArgs","lastThis","called","nextArgs","RBush","opt_maxEntries","rbush_","items_","extents","update","bbox","getAll","getInExtent","forEach_","forEachInExtent","concat","rbush","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","ARRAY_BUFFER","XML","withCredentials","loadFeaturesXhr","format","success","failure","xhr","XMLHttpRequest","open","FormatType","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","VectorSourceEvent","opt_feature","opt_features","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","getArray","Collection","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","ObjectEventType","PROPERTYCHANGE","valid","getId","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","CollectionEventType","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","intersectsCoordinate","forEachFeatureIntersectingExtent","intersectsExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","closestPoint","minSquaredDistance","filter","previousMinSquaredDistance","closestPointXY","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","alreadyLoaded","this_1","removeLoadedExtent","removed","setLoader","lineStringLength","LinearRing","opt_layout","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","layout","getCoordinates","getSimplifiedGeometryInternal","GeometryLayout","LINEAR_RING","setLayout","deflate","SimpleGeometry","Polygon","opt_ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","polygon","applyProperties","orient","flatCenter","getInteriorPoint","Point","getLinearRingCount","getLinearRing","getLinearRings","linearRings","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","getLayout","arrayLength","makeRegular","getRadius","startAngle","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","fromNamed","el","body","rgb","getComputedStyle","fromString","MAX_CACHE_SIZE","fromStringInternal_","asArray","hasAlpha","substr","normalize","MapRenderer","dispatchRenderEvent","calculateMatrices2D","checkWrapped","thisArg","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","callback_1","order","forEachLayerAtPixel","hasFeatureAtCoordinate","scheduleExpireIconCache","expireIconCache","Disposable","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","getViewport","firstChild","children_","renderedVisible_","declutterLayers","previousElement","element","display","Composite","LAYERS","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","unique","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","Base","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","passive","emulateClick_","newEvent","MapBrowserEventType","clearTimeout","updateActivePointers_","handlePointerUp_","isMouseActionButton_","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","defaultPrevented","MOVESTART","MOVEEND","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileCenter","PluggableMap","optionsInternal","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","Date","now","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","controls","interactions","overlays_","overlays","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","overlay","addControl","getControls","getInteractions","addLayer","getLayerGroup","addOverlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getElementById","getView","getOverlayById","getLoading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","getOverlayContainerStopEvent","ownerDocument","browserEvent","handleMapBrowserEvent","eventType","rootNode","elementFromPoint","documentElement","interactionsArray","cont","handlePostRender","hints","lowOnFrameBudget","resolveConstraints","targetElement","dispose","updateSize","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","layerGroup","isRendered","renderSync","requestAnimationFrame","removeControl","removeLayer","removeOverlay","previousFrameState","isDef","getHints","moveStart","MapEvent","MapEventType","idle","setLayerGroup","setView","computedStyle","offsetWidth","offsetHeight","setViewportSize","Control","target_","listenerKeys","mapEvent","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","setRotation","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","setZoom","defaults","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attribution","attributionOptions","DoubleClickZoom","delta_","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","adjustCenterInternal","getDistance","getAngle","centerpx","dest","endInteraction","Pointer","DragRotate","lastAngle_","getConstraints","theta","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","pixels","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","mapExtent","calculateExtentInternal","boxPixelExtent","factor","getResolutionForExtentInternal","getConstrainedResolution","UP","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","mapUnitsDelta","KeyboardZoom","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","Mode","TRACKPAD","MouseWheelZoom","totalDelta_","lastDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","getConstrainResolution","adjustZoom","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","self","IMAGE_DECODE","decode","PASSIVE_EVENT_LISTENERS","error","ImageBase","ImageWrapper","imageLoadFunction","imageLoadFunction_","listenImage","loadHandler","errorHandler","promise","listening_1","unlisten","then","catch","message","Style","geometryFunction_","defaultGeometryFunction","setGeometry","stroke_","zIndex_","setRenderer","setFill","setStroke","toFunction","styles_1","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","taintedTestContext","IconImage","color_","imageState_","size_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","displacement","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","FRACTION","anchorYUnits_","iconImage_","offset_","offsetOrigin_","offsetOrigin","origin_","setAnchor","getHitDetectionImageSize","getDisplacement","iconImageSize","tmpTileCoord","TileGrid","zoomFactor","resolutions_","origins","zoomFactor_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","opt_direction","fullTileRanges","DEFAULT_RADIUS","c1","c2","opt_radius","lat1","lat2","deltaLatBy2","deltaLonBy2","bearing","lon1","dByR","lat","asin","lon","clamp","cosh","log2","LOG2E","squaredSegmentDistance","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","AssertionError","path","Fill","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","disable","none","createSnapToN","opt_isMoving","createSnapToZero","opt_tolerance","assert","assertion","errorCode","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","tmpTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","getSimplifiedGeometry","coord","getClosestPoint","opt_closestPoint","computeExtent","opt_sy","simplify","TILE_PIXELS","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getFirstCoordinate","getLastCoordinate","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","linearFindNearest","reverseSubArray","extension","arr1","arr2","len1","isSorted","opt_func","opt_strict","compare","every","currentVal","res","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","getViewportClampedResolution","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createSnapToResolutions","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","capped","createSnapToPower","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","createMinMaxResolution","DEFAULT_MIN_ZOOM","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setCenterInternal","setResolution","options_","getUpdatedOptions_","newOptions","animationCount","animationCallback","series","animation","complete","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","Boolean","opt_rotation","ViewProperty","opt_hints","calculateExtent","getZoomForResolution","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","logPower","getViewportSizeMinusPadding_","reducedSize","calculateCenterOn","nearest","baseLevel","fit","geometryOrExtent","fitInternal","cosAngle","sinAngle","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustResolution","isMoving","adjustRotation","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_resolutionDirection","endInteractionInternal","opt_targetResolution","targetZoom","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","coordinate1","coordinate2","coord1","coord2","getWorldsAway","opt_sourceExtentWidth","sourceExtentWidth","setFromArray","transform1","transform2","makeScale","compose","makeInverse","det","determinant","ImageStyle","scaleArray_","displacement_","setRotateWithView","setScale","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","opt_endss","Circle","setCenterAndRadius","getRadiusSquared_","circleExtent","setRadius","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","hasProperties","getProperties","setGeometryName","getGeometryName","handleGeometryChange_","createStyleFunction","setId","interpolatePoint","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getLength","MultiLineString","lineStrings","appendLineString","multiLineString","opt_interpolate","getLineString","getLineStrings","midpoints","midpoint","MultiPoint","appendPoint","multiPoint","getPoint","getPoints","points","linearRingss","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiPolygon","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","DrawEventType","DRAWSTART","DRAWEND","DRAWABORT","DrawEvent","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","source_","features_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","Constructor_1","mode_1","squaredLength","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","getDefaultStyleFunction","geometryName","freehandCondition_","freehandCondition","updateState_","getOverlay","move","addToDrawing_","startDrawing_","atFinish_","finishDrawing","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","mode","sketchCoords","finishCoordinate","finishPixel","sketchPointGeom","updateSketchFeatures_","createOrUpdateCustomSketchLine_","ring","sketchLineGeom","done","removeLastPoint","sketchFeature","abortDrawing_","appendCoordinates","newDrawing","ending","sketchFeatures","overlaySource","twiceArea","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","transform2D","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","easeIn","easeOut","inAndOut","linear","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","fontRegExMatchIndex","getFontParameters","fontSpec","weight","variant","families","family","RegularShape","hitDetectionCanvas_","radius_","radius1","radius2_","radius2","imageSize_","hitDetectionImageSize_","getRadius2","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","angle0","radiusC","drawHitDetectionCanvas_","CircleStyle","BaseEvent","disposed","containsTileRange","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","labelCache","warn","measureFont","measureContext","textHeights","registerFont","interval","referenceWidth","retries","referenceFonts","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","fonts","clearInterval","setInterval","measureTextHeight","div","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","margin","measureTextWidths","currentWidth","rotateAtOffset","drawImageOrLabel","labelOrImage","executeLabelInstructions","createTransformStringCanvas","createTransformString","ObjectEvent","oldValue","BaseObject","opt_values","values_","notify","getChangeEventType","opt_silent","unset","changeEventTypeCache","LENGTH","CollectionEvent","opt_element","opt_index","unique_","array_","assertUnique_","updateLength_","insertAt","elem","removeAt","setAt","opt_except","asColorLike","FEET","USFEET","ret","attributions_","adaptAttributions","attributionsCollapsible_","wrapX_","setAttributions","attributionLike"],"mappings":"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","file":"js/chunk-8ab95d0c.98e2c507.js","sourcesContent":["/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16,\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { MAC, WEBKIT } from '../has.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n    var conditions = arguments;\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} All conditions passed.\n     */\n    return function (event) {\n        var pass = true;\n        for (var i = 0, ii = conditions.length; i < ii; ++i) {\n            pass = pass && conditions[i](event);\n            if (!pass) {\n                break;\n            }\n        }\n        return pass;\n    };\n}\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement().contains(document.activeElement);\n};\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport var focusWithTabindex = function (event) {\n    return event.map.getTargetElement().hasAttribute('tabindex')\n        ? focus(event)\n        : true;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    var tagName = /** @type {Element} */ (originalEvent.target).tagName;\n    return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, get as getProjection } from './proj.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth, } from './extent.js';\nimport { toSize } from './size.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize,\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize, xyzOptions.maxResolution),\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize, opt_maxResolution) {\n    var maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = opt_maxResolution > 0\n        ? opt_maxResolution\n        : Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n    var canvas = opt_canvasPool && opt_canvasPool.length\n        ? opt_canvasPool.shift()\n        : WORKER_OFFSCREEN_CANVAS\n            ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n            : document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { linearRingsContainsXY } from './contains.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport { assert } from './asserts.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value,\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return (extent1[0] <= extent2[0] &&\n        extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] &&\n        extent2[3] <= extent1[3]);\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return (extent1[0] == extent2[0] &&\n        extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] &&\n        extent1[3] == extent2[3]);\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return (Math.abs(extent1[0] - extent2[0]) < tolerance &&\n        Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance &&\n        Math.abs(extent1[3] - extent2[3]) < tolerance);\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = (resolution * size[0]) / 2;\n    var dy = (resolution * size[1]) / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return (extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1]);\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - (endY - maxY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - (endX - maxX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - (endY - minY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - (endX - minX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + (width * i) / opt_stops, extent[1], extent[2], extent[1] + (height * i) / opt_stops, extent[2] - (width * i) / opt_stops, extent[3], extent[0], extent[3] - (height * i) / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0],\n            extent[1],\n            extent[2],\n            extent[1],\n            extent[2],\n            extent[3],\n            extent[0],\n            extent[3],\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() &&\n        (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = worldsAway * worldWidth;\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.pendingRemovals_ = null;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.dispatching_ = null;\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = null;\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_ || (this.listeners_ = {});\n        var listenersForType = listeners[type] || (listeners[type] = []);\n        if (listenersForType.indexOf(listener) === -1) {\n            listenersForType.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_ && this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            var dispatching = this.dispatching_ || (this.dispatching_ = {});\n            var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n            if (!(type in dispatching)) {\n                dispatching[type] = 0;\n                pendingRemovals[type] = 0;\n            }\n            ++dispatching[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --dispatching[type];\n            if (dispatching[type] === 0) {\n                var pr = pendingRemovals[type];\n                delete pendingRemovals[type];\n                while (pr--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete dispatching[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * Clean up.\n     */\n    Target.prototype.disposeInternal = function () {\n        this.listeners_ && clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return (this.listeners_ && this.listeners_[type]) || undefined;\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        if (!this.listeners_) {\n            return false;\n        }\n        return opt_type\n            ? opt_type in this.listeners_\n            : Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_ && this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.5.0';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        /**\n         * @type {import(\"../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { containsCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target &&\n            target.style.opacity === '' &&\n            target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context &&\n            (context.canvas.width === 0 ||\n                context.canvas.style.transform === transform)) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var layer = this.getLayer();\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            var renderCoordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n            /** get only data inside of the layer extent */\n            if (!containsCoordinate(layerExtent, renderCoordinate)) {\n                return null;\n            }\n        }\n        var data;\n        try {\n            var x = Math.round(renderPixel[0]);\n            var y = Math.round(renderPixel[1]);\n            var newCanvas = document.createElement('canvas');\n            var newContext = newCanvas.getContext('2d');\n            newCanvas.width = 1;\n            newCanvas.height = 1;\n            newContext.clearRect(0, 0, 1, 1);\n            newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n            data = newContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove',\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source\n            ? /** @type {SourceType} */ (options.source)\n            : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    Layer.prototype.getFeatures = function (pixel) {\n        return this.renderer_.getFeatures(pixel);\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                var layerState = this.getLayerState(false);\n                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                assert(!layerStatesArray.some(function (arrayLayerState) {\n                    return arrayLayerState.layer === layerState.layer;\n                }), 67);\n                layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    /**\n     * Clean up.\n     */\n    Layer.prototype.disposeInternal = function () {\n        this.setSource(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution ||\n        resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredDistance, squaredSegmentDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined\n        ? opt_simplifiedFlatCoordinates\n        : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if (dx1 * dy2 == dy1 * dx2 &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener,\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ =\n            options.worldExtent !== undefined ? options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ =\n            options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { cosh } from '../math.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport var MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            },\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (HALF_SIZE * input[i]) / 180;\n        var y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n        if (y > MAX_SAFE_Y) {\n            y = MAX_SAFE_Y;\n        }\n        else if (y < -MAX_SAFE_Y) {\n            y = -MAX_SAFE_Y;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (180 * input[i]) / HALF_SIZE;\n        output[i + 1] =\n            (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT,\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return (cache[code] ||\n        cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n        null);\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { PROJECTIONS as EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326, } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport { add as addProj, clear as clearProj, get as getProj, } from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc, } from './proj/transforms.js';\nimport { applyTransform, getWidth } from './extent.js';\nimport { clamp, modulo } from './math.js';\nimport { getDistance } from './sphere.js';\nimport { getWorldsAway } from './coordinate.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string'\n        ? getProj(/** @type {string} */ (projectionLike))\n        : /** @type {Projection} */ (projectionLike) || null;\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution =\n                    (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            if (toEPSG4326_1 === identityTransform && units !== Units.DEGREES) {\n                // no transform is available\n                pointResolution = resolution * projection.getMetersPerUnit();\n            }\n            else {\n                var vertices = [\n                    point[0] - resolution / 2,\n                    point[1],\n                    point[0] + resolution / 2,\n                    point[1],\n                    point[0],\n                    point[1] - resolution / 2,\n                    point[0],\n                    point[1] + resolution / 2,\n                ];\n                vertices = toEPSG4326_1(vertices, vertices, 2);\n                var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n                var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n                pointResolution = (width + height) / 2;\n            }\n            var metersPerUnit = opt_units\n                ? METERS_PER_UNIT[opt_units]\n                : projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return /** @type {Projection} */ (projection);\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {?Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n    return function (coord) {\n        var sourceX = coord[0];\n        var sourceY = coord[1];\n        var transformed, worldsAway;\n        if (sourceProj.canWrapX()) {\n            var sourceExtent = sourceProj.getExtent();\n            var sourceExtentWidth = getWidth(sourceExtent);\n            worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n            if (worldsAway) {\n                // Move x to the real world\n                sourceX = sourceX - worldsAway * sourceExtentWidth;\n            }\n            sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n            sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n            transformed = transform([sourceX, sourceY]);\n        }\n        else {\n            transformed = transform(coord);\n        }\n        if (worldsAway && destProj.canWrapX()) {\n            // Move transformed coordinate back to the offset world\n            transformed[0] += worldsAway * getWidth(destProj.getExtent());\n        }\n        return transformed;\n    };\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"map\",attrs:{\"id\":\"map\"}}),_c('v-select',{staticClass:\"mt-4\",attrs:{\"dense\":\"\",\"items\":_vm.items,\"label\":\"Draw-Type\",\"outlined\":\"\"},on:{\"change\":_vm.typeChange},model:{value:(_vm.drawType),callback:function ($$v) {_vm.drawType=$$v},expression:\"drawType\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport { abstract } from './util.js';\nimport { easeIn } from './easing.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {import(\"./TileState.js\").default}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ =\n            options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Called by the tile cache when the tile is removed from the cache due to expiry\n     */\n    Tile.prototype.release = function () { };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {import(\"./TileState.js\").default} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        if (this.state !== TileState.ERROR && this.state > state) {\n            throw new Error('Tile load sequence violation');\n        }\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + 1000 / 60; // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        _this.key = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/reproj\n */\nimport { IMAGE_SMOOTHING_DISABLED } from './source/common.js';\nimport { assign } from './obj.js';\nimport { containsCoordinate, createEmpty, extend, forEachCorner, getCenter, getHeight, getTopLeft, getWidth, } from './extent.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { getPointResolution, transform } from './proj.js';\nimport { solveLinearSystem } from './math.js';\nvar brokenDiagonalRendering_;\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(u1, v1);\n    ctx.lineTo(u2, v2);\n    ctx.closePath();\n    ctx.save();\n    ctx.clip();\n    ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n    ctx.restore();\n}\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n    // the values ought to be close to the rgba(210, 0, 0, 0.75)\n    return (Math.abs(data[offset * 4] - 210) > 2 ||\n        Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2);\n}\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n    if (brokenDiagonalRendering_ === undefined) {\n        var ctx = document.createElement('canvas').getContext('2d');\n        ctx.globalCompositeOperation = 'lighter';\n        ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n        drawTestTriangle(ctx, 4, 5, 4, 0);\n        drawTestTriangle(ctx, 4, 5, 0, 5);\n        var data = ctx.getImageData(0, 0, 3, 3).data;\n        brokenDiagonalRendering_ =\n            verifyBrokenDiagonalRendering(data, 0) ||\n                verifyBrokenDiagonalRendering(data, 4) ||\n                verifyBrokenDiagonalRendering(data, 8);\n    }\n    return brokenDiagonalRendering_;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(sourceProj, targetProj, targetExtent, targetResolution) {\n    var targetCenter = getCenter(targetExtent);\n    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n        forEachCorner(targetExtent, function (corner) {\n            sourceResolution = calculateSourceResolution(sourceProj, targetProj, corner, targetResolution);\n            return isFinite(sourceResolution) && sourceResolution > 0;\n        });\n    }\n    return sourceResolution;\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @param {object=} opt_contextOptions Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges, opt_contextOptions) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    assign(context, opt_contextOptions);\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    function pixelRound(value) {\n        return Math.round(value * pixelRatio) / pixelRatio;\n    }\n    context.globalCompositeOperation = 'lighter';\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution), Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution));\n    assign(stitchContext, opt_contextOptions);\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        // This test should never fail -- but it does. Need to find a fix the upstream condition\n        if (src.image.width > 0 && src.image.height > 0) {\n            stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n        }\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        // Make sure that everything is on pixel boundaries\n        var u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n        var v0 = pixelRound(-(target[0][1] - targetTopLeft[1]) / targetResolution);\n        var u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n        var v1 = pixelRound(-(target[1][1] - targetTopLeft[1]) / targetResolution);\n        var u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n        var v2 = pixelRound(-(target[2][1] - targetTopLeft[1]) / targetResolution);\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0],\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        if (isBrokenDiagonalRendering() ||\n            opt_contextOptions === IMAGE_SMOOTHING_DISABLED) {\n            // Make sure that all lines are horizontal or vertical\n            context.moveTo(u1, v1);\n            // This is the diagonal line. Do it in 4 steps\n            var steps = 4;\n            var ud = u0 - u1;\n            var vd = v0 - v1;\n            for (var step = 0; step < steps; step++) {\n                // Go horizontally\n                context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound((step * vd) / (steps - 1)));\n                // Go vertically\n                if (step != steps - 1) {\n                    context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound(((step + 1) * vd) / (steps - 1)));\n                }\n            }\n            // We are almost at u0r, v0r\n            context.lineTo(u2, v2);\n        }\n        else {\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n        }\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.globalCompositeOperation = 'source-over';\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getArea, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects, } from '../extent.js';\nimport { getTransform } from '../proj.js';\nimport { log2, modulo } from '../math.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ =\n            this.sourceProj_.canWrapX() &&\n                !!maxSourceExtent &&\n                !!this.sourceProj_.getExtent() &&\n                getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n            ? getWidth(this.sourceProj_.getExtent())\n            : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent()\n            ? getWidth(this.targetProj_.getExtent())\n            : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        /*\n         * The maxSubdivision controls how many splittings of the target area can\n         * be done. The idea here is to do a linear mapping of the target areas\n         * but the actual overal reprojection (can be) extremely non-linear. The\n         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n         * tile size. However this function is also called to remap canvas rendered\n         * layers which can be much larger. This calculation increases the maxSubdivision\n         * value by the right factor so that each 256x256 pixel area has\n         * MAX_SUBDIVISION divisions.\n         */\n        var maxSubdivision = MAX_SUBDIVISION +\n            (opt_destinationResolution\n                ? Math.max(0, Math.ceil(log2(getArea(targetExtent) /\n                    (opt_destinationResolution *\n                        opt_destinationResolution *\n                        256 *\n                        256))))\n                : 0);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) -\n                    leftBound_1 >\n                    this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [\n                        [triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]],\n                    ];\n                    if (newTriangle[0][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[1][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[2][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if (maxX - minX < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c],\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_\n            ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n            : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 &&\n            sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision =\n                    targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision =\n                    sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (isFinite(sourceQuadExtent[0]) &&\n                isFinite(sourceQuadExtent[1]) &&\n                isFinite(sourceQuadExtent[2]) &&\n                isFinite(sourceQuadExtent[3])) {\n                if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                    // whole quad outside source projection extent -> ignore\n                    return;\n                }\n            }\n        }\n        var isNotFinite = 0;\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) ||\n                !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) ||\n                !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) ||\n                !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) ||\n                !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    // It might be the case that only 1 of the points is infinite. In this case\n                    // we can draw a single triangle with the other three points\n                    isNotFinite =\n                        (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n                            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n                            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n                            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n                    if (isNotFinite != 1 &&\n                        isNotFinite != 2 &&\n                        isNotFinite != 4 &&\n                        isNotFinite != 8) {\n                        return;\n                    }\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) /\n                        2;\n                    dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        // Exactly zero or one of *Src is not finite\n        // The triangles must have the diagonal line as the first side\n        // This is to allow easy code in reproj.s to make it straight for broken\n        // browsers that can't handle diagonal clipping\n        if ((isNotFinite & 0xb) == 0) {\n            this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        }\n        if ((isNotFinite & 0xe) == 0) {\n            this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n        }\n        if (isNotFinite) {\n            // Try the other two triangles\n            if ((isNotFinite & 0xd) == 0) {\n                this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n            }\n            if ((isNotFinite & 0x7) == 0) {\n                this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n            }\n        }\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_DISABLED = {\n    imageSmoothingEnabled: false,\n    msImageSmoothingEnabled: false,\n};\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceExtentResolution, render as renderReprojected, } from '../reproj.js';\nimport { clamp } from '../math.js';\nimport { getArea, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     * @param {object=} opt_contextOptions Properties to set on the canvas context.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges, opt_contextOptions) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var sourceResolution = calculateSourceExtentResolution(sourceProj, targetProj, limitedTargetExtent, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage(),\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_, this.contextOptions_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * Desired max cache size after expireCache(). If set to 0, no cache entries\n         * will be pruned at all.\n         * @type {number}\n         */\n        this.highWaterMark =\n            opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value,\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    function TileCache() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().release();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.release();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror',\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { equivalent } from '../proj.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection, wrapX, } from '../tilegrid.js';\nimport { scale as scaleSize, toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ =\n            options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        var tileGrid = options.tileGrid;\n        if (tileGrid) {\n            toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(options.cacheSize || 0);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = callback(tile) !== false;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        assert(equivalent(this.getProjection(), projection), 68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n        );\n        return this.tileCache;\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ? opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Increases the cache size if needed\n     * @param {number} tileCount Minimum number of tiles needed.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.updateCacheSize = function (tileCount, projection) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCount > tileCache.highWaterMark) {\n            tileCache.highWaterMark = tileCount;\n        }\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template\n                .replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, expandUrl } from '../tileurlfunction.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ =\n            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        if (options.tileUrlFunction) {\n            _this.tileUrlFunction = options.tileUrlFunction;\n        }\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n            ? this.tileUrlFunction.bind(this)\n            : this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        return undefined;\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass =\n            options.tileClass !== undefined ? options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    TileImage.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileImage.prototype.getKey = function () {\n        return (_super.prototype.getKey.call(this) +\n            (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : ''));\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return this.tileGridForProjection[projKey];\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord\n            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n            : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = cache.get(tileCoordKey);\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.contextOptions_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined\n            ? options.url\n            : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            attributionsCollapsible: false,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            transition: options.transition,\n            url: url,\n            wrapX: options.wrapX,\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from 'vue-property-decorator'\r\n\r\nimport 'ol/ol.css'\r\nimport Map from 'ol/Map'\r\nimport View from 'ol/View'\r\nimport Draw from 'ol/interaction/Draw'\r\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer'\r\nimport { OSM, Vector as VectorSource } from 'ol/source'\r\n\r\n@Component({})\r\nexport default class Openlayers extends Vue {\r\n  private drawType: any = ''\r\n  private items: string[] = ['LineString', 'Polygon', 'Circle', 'None']\r\n  private draw: any = null\r\n  private map: any = null\r\n  private vector: any = null\r\n  private sourceVector: any = null\r\n\r\n  private mounted() {\r\n    const raster = new TileLayer({\r\n      source: new OSM()\r\n    })\r\n\r\n    this.sourceVector = new VectorSource({ wrapX: false })\r\n\r\n    this.vector = new VectorLayer({\r\n      source: this.sourceVector\r\n    })\r\n\r\n    this.map = new Map({\r\n      layers: [raster, this.vector],\r\n      target: 'map',\r\n      view: new View({\r\n        center: [-11000000, 4600000],\r\n        zoom: 4\r\n      })\r\n    })\r\n  }\r\n\r\n  private addInteraction() {\r\n    const value: any = this.drawType\r\n    if (value !== 'None') {\r\n      this.draw = new Draw({\r\n        source: this.sourceVector,\r\n        type: this.drawType,\r\n        freehand: true\r\n      })\r\n      this.map.addInteraction(this.draw)\r\n    }\r\n  }\r\n\r\n  private typeChange() {\r\n    console.info(this.drawType)\r\n    this.map.removeInteraction(this.draw)\r\n    this.addInteraction()\r\n  }\r\n}\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OpenLayers.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OpenLayers.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./OpenLayers.vue?vue&type=template&id=eb05b46c&scoped=true&\"\nimport script from \"./OpenLayers.vue?vue&type=script&lang=ts&\"\nexport * from \"./OpenLayers.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"eb05b46c\",\n  null\n  \n)\n\nexport default component.exports","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var tileRange = tileGrid.getFullTileRange(z);\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. Only available\n         * when a Canvas renderer is used, null otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        var key;\n        if (Array.isArray(type)) {\n            var len = type.length;\n            key = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                key[i] = listenOnce(this, type[i], listener);\n            }\n        }\n        else {\n            key = listenOnce(this, /** @type {string} */ (type), listener);\n        }\n        /** @type {Object} */ (listener).ol_key = key;\n        return key;\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        var key = /** @type {Object} */ (listener).ol_key;\n        if (key) {\n            unByKey(key);\n        }\n        else if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        var values = [];\n        for (var property in object) {\n            values.push(object[property]);\n        }\n        return values;\n    };\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction, } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder',\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ =\n            options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ =\n            options.renderBuffer !== undefined ? options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ =\n            options.updateWhileAnimating !== undefined\n                ? options.updateWhileAnimating\n                : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ =\n            options.updateWhileInteracting !== undefined\n                ? options.updateWhileInteracting\n                : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n     * that resolves with an array of features. The array will either contain the topmost feature\n     * when a hit was detected, or it will be empty.\n     *\n     * The hit detection algorithm used for this method is optimized for performance, but is less\n     * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n     * is not considered, and icons are only represented by their bounding box instead of the exact\n     * image.\n     *\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n     * @api\n     */\n    BaseVectorLayer.prototype.getFeatures = function (pixel) {\n        return _super.prototype.getFeatures.call(this, pixel);\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    BaseVectorLayer.prototype.renderDeclutter = function (frameState) {\n        if (!frameState.declutterTree) {\n            frameState.declutterTree = new RBush(9);\n        }\n        /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If set to `null`, the layer has no style (a `null` style),\n     * so only features that have their own styles will be rendered in the layer. Call\n     * `setStyle()` without arguments to reset to the default style. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {(import(\"../style/Style.js\").StyleLike|null)=} opt_style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n        this.styleFunction_ =\n            opt_style === null ? undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12,\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with a text style.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterImageWithText) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with an image style.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterImageWithText) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, containsCoordinate, coordinateRelationship, } from '../../extent.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../canvas.js';\nimport { equals, reverseSubArray } from '../../array.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray, } from '../../geom/flat/inflate.js';\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1\n            ? dashArray\n            : dashArray.map(function (dash) {\n                return dash * pixelRatio;\n            });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} stride Stride.\n     * @protected\n     * @return {number} My end\n     */\n    CanvasBuilder.prototype.appendFlatPointCoordinates = function (flatCoordinates, stride) {\n        var extent = this.getBufferedMaxExtent();\n        var tmpCoord = this.tmpCoordinate_;\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            tmpCoord[0] = flatCoordinates[i];\n            tmpCoord[1] = flatCoordinates[i + 1];\n            if (containsCoordinate(extent, tmpCoord)) {\n                coordinates[myEnd++] = tmpCoord[0];\n                coordinates[myEnd++] = tmpCoord[1];\n            }\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatLineCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    coordinates[myEnd++] = lastXCoord;\n                    coordinates[myEnd++] = lastYCoord;\n                    skipped = false;\n                }\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            coordinates[myEnd++] = lastXCoord;\n            coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(geometry, feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEndss,\n                geometry,\n                renderer,\n                inflateMultiCoordinatesArray,\n            ]);\n        }\n        else if (type == GeometryType.POLYGON ||\n            type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates =\n                type == GeometryType.POLYGON\n                    ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n                    : geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnds,\n                geometry,\n                renderer,\n                inflateCoordinatesArray,\n            ]);\n        }\n        else if (type == GeometryType.LINE_STRING ||\n            type == GeometryType.CIRCLE) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnd,\n                geometry,\n                renderer,\n                inflateCoordinates,\n            ]);\n        }\n        else if (type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (builderEnd > builderBegin) {\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    renderer,\n                    inflateCoordinates,\n                ]);\n            }\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnd,\n                geometry,\n                renderer,\n            ]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n        this.beginGeometryInstruction1_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates,\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap =\n                strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash.slice()\n                : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset\n                ? strokeStyleLineDashOffset\n                : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin =\n                strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth =\n                strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit =\n                strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth * this.pixelRatio,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            this.applyPixelRatio(state.lineDash),\n            state.lineDashOffset * this.pixelRatio,\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash &&\n                !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.imagePixelRatio_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        /**\n         * Data shared with a text builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(pointGeometry, feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(multiPointGeometry, feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.imagePixelRatio_ = undefined;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @param {Object=} opt_sharedData Shared data.\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, opt_sharedData) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage();\n        var image = imageStyle.getImage(this.pixelRatio);\n        var origin = imageStyle.getOrigin();\n        this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScaleArray();\n        this.width_ = size[0];\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction, } from './Instruction.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [\n            CanvasInstruction.MOVE_TO_LINE_TO,\n            myBegin,\n            myEnd,\n        ];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, \n            /** @type {number} */ (ends[i]), stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, closePathInstruction, fillInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport { snap } from '../../geom/flat/simplify.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle !== undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [\n                CanvasInstruction.MOVE_TO_LINE_TO,\n                myBegin,\n                myEnd,\n            ];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(circleGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(polygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, \n        /** @type {Array<number>} */ (ends), stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(multiPolygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line',\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont, } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1,\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        /**\n         * Data shared with an image builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var coordinates = this.coordinates;\n        var begin = coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var stride = geometry.getStride();\n        if (textState.placement === TextPlacement.LINE &&\n            (geometryType == GeometryType.LINE_STRING ||\n                geometryType == GeometryType.MULTI_LINE_STRING ||\n                geometryType == GeometryType.POLYGON ||\n                geometryType == GeometryType.MULTI_POLYGON)) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n                    .getEnds()\n                    .slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                ends = [];\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (var i = flatOffset; i < flatEnd; i += stride) {\n                    coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                var end = coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = textState.overflow ? null : [];\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    stride = 2;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (var i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    if (flatCoordinates.length === 0) {\n                        return;\n                    }\n                    stride = 2;\n                    break;\n                default:\n            }\n            var end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (end === begin) {\n                return;\n            }\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // adjust padding for negative scale\n            var padding = textState.padding;\n            if (padding != defaultPadding &&\n                (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n                var p0 = textState.padding[0];\n                var p1 = textState.padding[1];\n                var p2 = textState.padding[2];\n                var p3 = textState.padding[3];\n                if (textState.scale[0] < 0) {\n                    p1 = -p1;\n                    p3 = -p3;\n                }\n                if (textState.scale[1] < 0) {\n                    p0 = -p0;\n                    p2 = -p2;\n                }\n                padding = [p0, p1, p2, p3];\n            }\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [1, 1],\n                NaN,\n                this.declutterImageWithText_,\n                padding == defaultPadding\n                    ? defaultPadding\n                    : padding.map(function (p) {\n                        return p * pixelRatio_1;\n                    }),\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            var scale = 1 / pixelRatio_1;\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [scale, scale],\n                NaN,\n                this.declutterImageWithText_,\n                padding,\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash,\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale,\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle,\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var strokeWidth = strokeState\n            ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n            : 0;\n        this.instructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            pixelRatio,\n            offsetY,\n            strokeKey,\n            strokeWidth * pixelRatio,\n            text,\n            textKey,\n            1,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            1,\n            offsetY,\n            strokeKey,\n            strokeWidth,\n            text,\n            textKey,\n            1 / pixelRatio,\n        ]);\n    };\n    /**\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @param {Object=} opt_sharedData Shared data.\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, opt_sharedData) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = null;\n                this.textFillState_ = fillState;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                    this.textFillState_ = fillState;\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = null;\n                this.textStrokeState_ = strokeState;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                    this.textStrokeState_ = strokeState;\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            registerFont(font);\n            var textScale = textStyle.getScaleArray();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline =\n                textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? [1, 1] : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ =\n                textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState\n                ? (typeof strokeState.strokeStyle == 'string'\n                    ? strokeState.strokeStyle\n                    : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap +\n                    strokeState.lineDashOffset +\n                    '|' +\n                    strokeState.lineWidth +\n                    strokeState.lineJoin +\n                    strokeState.miterLimit +\n                    '[' +\n                    strokeState.lineDash.join() +\n                    ']'\n                : '';\n            this.textKey_ =\n                textState.font +\n                    textState.scale +\n                    (textState.textAlign || '?') +\n                    (textState.textBaseline || '?');\n            this.fillKey_ = fillState\n                ? typeof fillState.fillStyle == 'string'\n                    ? fillState.fillStyle\n                    : '|' + getUid(fillState.fillStyle)\n                : '';\n        }\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder,\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text',\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\nimport { rotate } from './transform.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache, rotation) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var x1 = 0;\n    var y1 = 0;\n    var segmentLength = 0;\n    var segmentM = 0;\n    function advance() {\n        x1 = x2;\n        y1 = y2;\n        offset += stride;\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        segmentM += segmentLength;\n        segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    do {\n        advance();\n    } while (offset < end - stride && segmentM + segmentLength < startM);\n    var interpolate = (startM - segmentM) / segmentLength;\n    var beginX = lerp(x1, x2, interpolate);\n    var beginY = lerp(y1, y2, interpolate);\n    var startOffset = offset - stride;\n    var startLength = segmentM;\n    var endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n    while (offset < end - stride && segmentM + segmentLength < endM) {\n        advance();\n    }\n    interpolate = (endM - segmentM) / segmentLength;\n    var endX = lerp(x1, x2, interpolate);\n    var endY = lerp(y1, y2, interpolate);\n    // Keep text upright\n    var reverse;\n    if (rotation) {\n        var flat = [beginX, beginY, endX, endY];\n        rotate(flat, 0, 4, 2, rotation, flat, flat);\n        reverse = flat[0] > flat[2];\n    }\n    else {\n        reverse = beginX > endX;\n    }\n    var PI = Math.PI;\n    var result = [];\n    var singleSegment = startOffset + stride === offset;\n    offset = startOffset;\n    segmentLength = 0;\n    segmentM = startLength;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    // All on the same segment\n    if (singleSegment) {\n        advance();\n        var previousAngle_1 = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            previousAngle_1 += previousAngle_1 > 0 ? -PI : PI;\n        }\n        var x = (endX + beginX) / 2;\n        var y = (endY + beginY) / 2;\n        result[0] = [x, y, (endM - startM) / 2, previousAngle_1, text];\n        return result;\n    }\n    var previousAngle;\n    for (var i = 0, ii = text.length; i < ii;) {\n        advance();\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -PI : PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        previousAngle = angle;\n        var iStart = i;\n        var charLength = 0;\n        for (; i < ii; ++i) {\n            var index = reverse ? ii - i - 1 : i;\n            var len = scale * measureAndCacheTextWidth(font, text[index], cache);\n            if (offset + stride < end &&\n                segmentM + segmentLength < startM + charLength + len / 2) {\n                break;\n            }\n            charLength += len;\n        }\n        if (i === iStart) {\n            continue;\n        }\n        var chars = reverse\n            ? text.substring(ii - iStart, ii - i)\n            : text.substring(iStart, i);\n        interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        result.push([x, y, charLength / 2, angle, chars]);\n        startM += charLength;\n    }\n    return result;\n}\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../../has.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, setFromArray as transformSetFromArray, } from '../../transform.js';\nimport { createEmpty, createOrUpdate, intersects } from '../../extent.js';\nimport { defaultPadding, defaultTextBaseline, drawImageOrLabel, } from '../canvas.js';\nimport { defaultTextAlign, measureAndCacheTextWidth, measureTextHeight, measureTextWidths, } from '../canvas.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { equals } from '../../array.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @typedef {Object} BBox\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {*} value\n */\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX\n * @property {number} drawImageY\n * @property {number} drawImageW\n * @property {number} drawImageH\n * @property {number} originX\n * @property {number} originY\n * @property {Array<number>} scale\n * @property {BBox} declutterBox\n * @property {import(\"../../transform.js\").Transform} canvasTransform\n */\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n    return replayImageOrLabelArgs[3].declutterBox;\n}\nvar rtlRegEx = new RegExp(\n/* eslint-disable prettier/prettier */\n'[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n    ']'\n/* eslint-enable prettier/prettier */\n);\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n    if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n        align = align === 'start' ? 'left' : 'right';\n    }\n    return TEXT_ALIGN[align];\n}\nvar Executor = /** @class */ (function () {\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n     * @param {import(\"../../size.js\").Size} renderBuffer Render buffer (width/height) in pixels.\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions, renderBuffer) {\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        this.renderBuffer_ = renderBuffer;\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        this.widths_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../canvas.js\").Label>}\n         */\n        this.labels_ = {};\n    }\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {import(\"../canvas.js\").Label} Label.\n     */\n    Executor.prototype.createLabel = function (text, textKey, fillKey, strokeKey) {\n        var key = text + textKey + fillKey + strokeKey;\n        if (this.labels_[key]) {\n            return this.labels_[key];\n        }\n        var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n        var fillState = fillKey ? this.fillStates[fillKey] : null;\n        var textState = this.textStates[textKey];\n        var pixelRatio = this.pixelRatio;\n        var scale = [\n            textState.scale[0] * pixelRatio,\n            textState.scale[1] * pixelRatio,\n        ];\n        var align = horizontalTextAlign(text, textState.textAlign || defaultTextAlign);\n        var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var lines = text.split('\\n');\n        var numLines = lines.length;\n        var widths = [];\n        var width = measureTextWidths(textState.font, lines, widths);\n        var lineHeight = measureTextHeight(textState.font);\n        var height = lineHeight * numLines;\n        var renderWidth = width + strokeWidth;\n        var contextInstructions = [];\n        // make canvas 2 pixels wider to account for italic text width measurement errors\n        var w = (renderWidth + 2) * scale[0];\n        var h = (height + strokeWidth) * scale[1];\n        /** @type {import(\"../canvas.js\").Label} */\n        var label = {\n            width: w < 0 ? Math.floor(w) : Math.ceil(w),\n            height: h < 0 ? Math.floor(h) : Math.ceil(h),\n            contextInstructions: contextInstructions,\n        };\n        if (scale[0] != 1 || scale[1] != 1) {\n            contextInstructions.push('scale', scale);\n        }\n        contextInstructions.push('font', textState.font);\n        if (strokeKey) {\n            contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n            contextInstructions.push('lineWidth', strokeWidth);\n            contextInstructions.push('lineCap', strokeState.lineCap);\n            contextInstructions.push('lineJoin', strokeState.lineJoin);\n            contextInstructions.push('miterLimit', strokeState.miterLimit);\n            // eslint-disable-next-line\n            var Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n            if (Context.prototype.setLineDash) {\n                contextInstructions.push('setLineDash', [strokeState.lineDash]);\n                contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n            }\n        }\n        if (fillKey) {\n            contextInstructions.push('fillStyle', fillState.fillStyle);\n        }\n        contextInstructions.push('textBaseline', 'middle');\n        contextInstructions.push('textAlign', 'center');\n        var leftRight = 0.5 - align;\n        var x = align * renderWidth + leftRight * strokeWidth;\n        var i;\n        if (strokeKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('strokeText', [\n                    lines[i],\n                    x + leftRight * widths[i],\n                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n                ]);\n            }\n        }\n        if (fillKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('fillText', [\n                    lines[i],\n                    x + leftRight * widths[i],\n                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n                ]);\n            }\n        }\n        this.labels_[key] = label;\n        return label;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, \n            /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {number} sheetWidth Width of the sprite sheet.\n     * @param {number} sheetHeight Height of the sprite sheet.\n     * @param {number} centerX X.\n     * @param {number} centerY Y.\n     * @param {number} width Width.\n     * @param {number} height Height.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {import(\"../../size.js\").Size} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {Array<number>} padding Padding.\n     * @param {boolean} fillStroke Background fill or stroke.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n     */\n    Executor.prototype.calculateImageOrLabelDimensions_ = function (sheetWidth, sheetHeight, centerX, centerY, width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, fillStroke, feature) {\n        anchorX *= scale[0];\n        anchorY *= scale[1];\n        var x = centerX - anchorX;\n        var y = centerY - anchorY;\n        var w = width + originX > sheetWidth ? sheetWidth - originX : width;\n        var h = height + originY > sheetHeight ? sheetHeight - originY : height;\n        var boxW = padding[3] + w * scale[0] + padding[1];\n        var boxH = padding[0] + h * scale[1] + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = boxX;\n            p4[0] = boxX;\n            p1[1] = boxY;\n            p2[1] = boxY;\n            p2[0] = boxX + boxW;\n            p3[0] = p2[0];\n            p3[1] = boxY + boxH;\n            p4[1] = p3[1];\n        }\n        var transform;\n        if (rotation !== 0) {\n            transform = composeTransform(createTransform(), centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(transform, p1);\n            applyTransform(transform, p2);\n            applyTransform(transform, p3);\n            applyTransform(transform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(Math.min(boxX, boxX + boxW), Math.min(boxY, boxY + boxH), Math.max(boxX, boxX + boxW), Math.max(boxY, boxY + boxH), tmpExtent);\n        }\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        return {\n            drawImageX: x,\n            drawImageY: y,\n            drawImageW: w,\n            drawImageH: h,\n            originX: originX,\n            originY: originY,\n            declutterBox: {\n                minX: tmpExtent[0],\n                minY: tmpExtent[1],\n                maxX: tmpExtent[2],\n                maxY: tmpExtent[3],\n                value: feature,\n            },\n            canvasTransform: transform,\n            scale: scale,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n     * @param {ImageOrLabelDimensions} dimensions Dimensions.\n     * @param {number} opacity Opacity.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     * @return {boolean} The image or label was rendered.\n     */\n    Executor.prototype.replayImageOrLabel_ = function (context, contextScale, imageOrLabel, dimensions, opacity, fillInstruction, strokeInstruction) {\n        var fillStroke = !!(fillInstruction || strokeInstruction);\n        var box = dimensions.declutterBox;\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction\n            ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n            : 0;\n        var intersects = box.minX - strokePadding <= canvas.width / contextScale &&\n            box.maxX + strokePadding >= 0 &&\n            box.minY - strokePadding <= canvas.height / contextScale &&\n            box.maxY + strokePadding >= 0;\n        if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImageOrLabel(context, dimensions.canvasTransform, opacity, imageOrLabel, dimensions.originX, dimensions.originY, dimensions.drawImageW, dimensions.drawImageH, dimensions.drawImageX, dimensions.drawImageY, dimensions.scale);\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context['strokeStyle'] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawLabelWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.createLabel(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = horizontalTextAlign(text, textState.textAlign || defaultTextAlign);\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in createLabel() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale[0];\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = (baseline * label.height) / pixelRatio +\n            2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check\n     *     features that intersect this extent.\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, contextScale, transform, instructions, snapToPixel, opt_featureCallback, opt_hitExtent, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, image, text, textKey, strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation,\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y, currentGeometry;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    currentGeometry = instruction[3];\n                    if (!feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined &&\n                        !intersects(opt_hitExtent, currentGeometry.getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = NaN;\n                        prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    var height = /** @type {number} */ (instruction[6]);\n                    var opacity = /** @type {number} */ (instruction[7]);\n                    var originX = /** @type {number} */ (instruction[8]);\n                    var originY = /** @type {number} */ (instruction[9]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[10]);\n                    var rotation = /** @type {number} */ (instruction[11]);\n                    var scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n                    var width = /** @type {number} */ (instruction[13]);\n                    var declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = labelWithAnchor.label;\n                        instruction[3] = image;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        instruction[4] = anchorX;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        instruction[5] = anchorY;\n                        height = image.height;\n                        instruction[6] = height;\n                        width = image.width;\n                        instruction[13] = width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = false;\n                        backgroundStroke = false;\n                    }\n                    if (rotateWithView && viewRotationFromTransform) {\n                        // Canvas is expected to be rotated to reverse view rotation.\n                        rotation += viewRotation;\n                    }\n                    else if (!rotateWithView && !viewRotationFromTransform) {\n                        // Canvas is not rotated, images need to be rotated back to be north-up.\n                        rotation -= viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths &&\n                            geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        var dimensions = this.calculateImageOrLabelDimensions_(image.width, image.height, pixelCoordinates[d], pixelCoordinates[d + 1], width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, backgroundFill || backgroundStroke, feature);\n                        /** @type {ReplayImageOrLabelArgs} */\n                        var args = [\n                            context,\n                            contextScale,\n                            image,\n                            dimensions,\n                            opacity,\n                            backgroundFill\n                                ? /** @type {Array<*>} */ (lastFillInstruction)\n                                : null,\n                            backgroundStroke\n                                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                                : null,\n                        ];\n                        var imageArgs = void 0;\n                        var imageDeclutterBox = void 0;\n                        if (opt_declutterTree && declutterImageWithText) {\n                            if (!declutterImageWithText[d]) {\n                                // We now have the image for an image+text combination.\n                                declutterImageWithText[d] = args;\n                                // Don't render anything for now, wait for the text.\n                                continue;\n                            }\n                            imageArgs = declutterImageWithText[d];\n                            delete declutterImageWithText[d];\n                            imageDeclutterBox = getDeclutterBox(imageArgs);\n                            if (opt_declutterTree.collides(imageDeclutterBox)) {\n                                continue;\n                            }\n                        }\n                        if (opt_declutterTree &&\n                            opt_declutterTree.collides(dimensions.declutterBox)) {\n                            continue;\n                        }\n                        if (imageArgs) {\n                            // We now have image and text for an image+text combination.\n                            if (opt_declutterTree) {\n                                opt_declutterTree.insert(imageDeclutterBox);\n                            }\n                            // Render the image before we render the text.\n                            this.replayImageOrLabel_.apply(this, imageArgs);\n                        }\n                        if (opt_declutterTree) {\n                            opt_declutterTree.insert(dimensions.declutterBox);\n                        }\n                        this.replayImageOrLabel_.apply(this, args);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    var overflow = /** @type {number} */ (instruction[4]);\n                    fillKey = /** @type {string} */ (instruction[5]);\n                    var maxAngle = /** @type {number} */ (instruction[6]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[7]);\n                    var offsetY = /** @type {number} */ (instruction[8]);\n                    strokeKey = /** @type {string} */ (instruction[9]);\n                    var strokeWidth = /** @type {number} */ (instruction[10]);\n                    text = /** @type {string} */ (instruction[11]);\n                    textKey = /** @type {string} */ (instruction[12]);\n                    var pixelRatioScale = [\n                        /** @type {number} */ (instruction[13]),\n                        /** @type {number} */ (instruction[13]),\n                    ];\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = [\n                        textState.scale[0] * measurePixelRatio,\n                        textState.scale[1] * measurePixelRatio,\n                    ];\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = {};\n                        this.widths_[font] = cachedWidths;\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = Math.abs(textScale[0]) *\n                        measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, Math.abs(textScale[0]), measureAndCacheTextWidth, font, cachedWidths, viewRotationFromTransform ? 0 : this.viewRotation_);\n                        drawChars: if (parts) {\n                            /** @type {Array<ReplayImageOrLabelArgs>} */\n                            var replayImageOrLabelArgs = [];\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, '', strokeKey);\n                                    anchorX =\n                                        /** @type {number} */ (part[2]) +\n                                            (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                                    anchorY =\n                                        baseline * label.height +\n                                            ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                                                textScale[0] -\n                                            offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (opt_declutterTree) {\n                                opt_declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n                            }\n                            for (var i_1 = 0, ii_1 = replayImageOrLabelArgs.length; i_1 < ii_1; ++i_1) {\n                                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i_1]);\n                            }\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (opt_featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = opt_featureCallback(feature, currentGeometry);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     */\n    Executor.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, contextScale, transform, this.instructions, snapToPixel, undefined, undefined, opt_declutterTree);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check\n     *     features that intersect this extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, 1, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}());\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { isEmpty } from '../../obj.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT,\n];\nvar ExecutorGroup = /** @class */ (function () {\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n         */\n        this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        this.hitDetectionTransform_ = createTransform();\n        this.createExecutors_(allInstructions);\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                executors = {};\n                this.executorsByZIndex_[zIndex] = executors;\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            var renderBuffer = [this.renderBuffer_ || 0, this.renderBuffer_ || 0];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions, renderBuffer);\n            }\n        }\n    };\n    /**\n     * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var newContext = !this.hitDetectionContext_;\n        if (newContext) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize ||\n            context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else if (!newContext) {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var indexes = getPixelIndexArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function featureCallback(feature, geometry) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize)\n                .data;\n            for (var i_1 = 0, ii = indexes.length; i_1 < ii; i_1++) {\n                if (imageData[indexes[i_1]] > 0) {\n                    if (!declutteredFeatures ||\n                        (builderType !== BuilderType.IMAGE &&\n                            builderType !== BuilderType.TEXT) ||\n                        declutteredFeatures.indexOf(feature) !== -1) {\n                        var idx = (indexes[i_1] - 3) / 4;\n                        var x = hitTolerance - (idx % contextSize);\n                        var y = hitTolerance - ((idx / contextSize) | 0);\n                        var result_1 = callback(feature, geometry, x * x + y * y);\n                        if (result_1) {\n                            return result_1;\n                        }\n                    }\n                    context.clearRect(0, 0, contextSize, contextSize);\n                    break;\n                }\n            }\n            return undefined;\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<import(\"./BuilderType.js\").default>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     */\n    ExecutorGroup.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        if (opt_declutterTree) {\n            zs.reverse();\n        }\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    replay.execute(context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree);\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}());\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nvar circlePixelIndexArrayCache = {};\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n    if (circlePixelIndexArrayCache[radius] !== undefined) {\n        return circlePixelIndexArrayCache[radius];\n    }\n    var size = radius * 2 + 1;\n    var maxDistanceSq = radius * radius;\n    var distances = new Array(maxDistanceSq + 1);\n    for (var i = 0; i <= radius; ++i) {\n        for (var j = 0; j <= radius; ++j) {\n            var distanceSq = i * i + j * j;\n            if (distanceSq > maxDistanceSq) {\n                break;\n            }\n            var distance = distances[distanceSq];\n            if (!distance) {\n                distance = [];\n                distances[distanceSq] = distance;\n            }\n            distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n            if (i > 0) {\n                distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n            }\n            if (j > 0) {\n                distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n                if (i > 0) {\n                    distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n                }\n            }\n        }\n    }\n    var pixelIndex = [];\n    for (var i = 0, ii = distances.length; i < ii; ++i) {\n        if (distances[i]) {\n            pixelIndex.push.apply(pixelIndex, distances[i]);\n        }\n    }\n    circlePixelIndexArrayCache[radius] = pixelIndex;\n    return pixelIndex;\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.imageScale_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.textScale_ = [0, 0];\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 ||\n                this.imageScale_[0] != 1 ||\n                this.imageScale_[1] != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n                context.translate(centerX, centerY);\n                context.scale(this.imageScale_[0], this.imageScale_[1]);\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n            }\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 ||\n                this.textScale_[0] != 1 ||\n                this.textScale_[1] != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n                context.translate(x, y);\n                context.scale(this.textScale_[0], this.textScale_[1]);\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, 0, 0);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, 0, 0);\n                }\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, x, y);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, x, y);\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(\n                /** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(\n                /** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(\n                /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(\n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(\n                /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(\n                /** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, \n            /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle,\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle,\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign\n            ? textState.textAlign\n            : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline,\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle),\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined\n                    ? strokeStyleLineCap\n                    : defaultLineCap,\n                lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset\n                    ? strokeStyleLineDashOffset\n                    : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin,\n                lineWidth: this.pixelRatio_ *\n                    (strokeStyleWidth !== undefined\n                        ? strokeStyleWidth\n                        : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle),\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageSize = imageStyle.getSize();\n            if (!imageSize) {\n                this.image_ = null;\n            }\n            else {\n                var imageAnchor = imageStyle.getAnchor();\n                // FIXME pixel ratio\n                var imageImage = imageStyle.getImage(1);\n                var imageOrigin = imageStyle.getOrigin();\n                var imageScale = imageStyle.getScaleArray();\n                this.imageAnchorX_ = imageAnchor[0];\n                this.imageAnchorY_ = imageAnchor[1];\n                this.imageHeight_ = imageSize[1];\n                this.image_ = imageImage;\n                this.imageOpacity_ = imageStyle.getOpacity();\n                this.imageOriginX_ = imageOrigin[0];\n                this.imageOriginY_ = imageOrigin[1];\n                this.imageRotateWithView_ = imageStyle.getRotateWithView();\n                this.imageRotation_ = imageStyle.getRotation();\n                this.imageScale_ = [\n                    this.pixelRatio_ * imageScale[0],\n                    this.pixelRatio_ * imageScale[1],\n                ];\n                this.imageWidth_ = imageSize[0];\n            }\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle),\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined\n                        ? textStrokeStyleLineCap\n                        : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash\n                        ? textStrokeStyleLineDash\n                        : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset\n                        ? textStrokeStyleLineDashOffset\n                        : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined\n                        ? textStrokeStyleLineJoin\n                        : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined\n                        ? textStrokeStyleWidth\n                        : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined\n                        ? textStrokeStyleMiterLimit\n                        : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle),\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScaleArray();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ? textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined\n                    ? textTextBaseline\n                    : defaultTextBaseline,\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n            this.textRotateWithView_ =\n                textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = [\n                this.pixelRatio_ * textScale[0],\n                this.pixelRatio_ * textScale[1],\n            ];\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/render/canvas/hitdetect\n */\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport { Icon } from '../../style.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { intersects } from '../../extent.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n    var width = size[0] / 2;\n    var height = size[1] / 2;\n    var context = createCanvasContext2D(width, height);\n    context.imageSmoothingEnabled = false;\n    var canvas = context.canvas;\n    var renderer = new CanvasImmediateRenderer(context, 0.5, extent, null, rotation);\n    var featureCount = features.length;\n    // Stretch hit detection index to use the whole available color range\n    var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n    var featuresByZIndex = {};\n    for (var i = 1; i <= featureCount; ++i) {\n        var feature = features[i - 1];\n        var featureStyleFunction = feature.getStyleFunction() || styleFunction;\n        if (!styleFunction) {\n            continue;\n        }\n        var styles = featureStyleFunction(feature, resolution);\n        if (!styles) {\n            continue;\n        }\n        if (!Array.isArray(styles)) {\n            styles = [styles];\n        }\n        var index = i * indexFactor;\n        var color = '#' + ('000000' + index.toString(16)).slice(-6);\n        for (var j = 0, jj = styles.length; j < jj; ++j) {\n            var originalStyle = styles[j];\n            var style = originalStyle.clone();\n            var fill = style.getFill();\n            if (fill) {\n                fill.setColor(color);\n            }\n            var stroke = style.getStroke();\n            if (stroke) {\n                stroke.setColor(color);\n            }\n            style.setText(undefined);\n            var image = originalStyle.getImage();\n            if (image) {\n                var imgSize = image.getImageSize();\n                if (!imgSize) {\n                    continue;\n                }\n                var canvas_1 = document.createElement('canvas');\n                canvas_1.width = imgSize[0];\n                canvas_1.height = imgSize[1];\n                var imgContext = canvas_1.getContext('2d', { alpha: false });\n                imgContext.fillStyle = color;\n                var img = imgContext.canvas;\n                imgContext.fillRect(0, 0, img.width, img.height);\n                var width_1 = imgSize ? imgSize[0] : img.width;\n                var height_1 = imgSize ? imgSize[1] : img.height;\n                var iconContext = createCanvasContext2D(width_1, height_1);\n                iconContext.drawImage(img, 0, 0);\n                style.setImage(new Icon({\n                    img: img,\n                    imgSize: imgSize,\n                    anchor: image.getAnchor(),\n                    anchorXUnits: IconAnchorUnits.PIXELS,\n                    anchorYUnits: IconAnchorUnits.PIXELS,\n                    offset: image.getOrigin(),\n                    size: image.getSize(),\n                    opacity: image.getOpacity(),\n                    scale: image.getScale(),\n                    rotation: image.getRotation(),\n                    rotateWithView: image.getRotateWithView(),\n                }));\n            }\n            var zIndex = Number(style.getZIndex());\n            var byGeometryType = featuresByZIndex[zIndex];\n            if (!byGeometryType) {\n                byGeometryType = {};\n                featuresByZIndex[zIndex] = byGeometryType;\n                byGeometryType[GeometryType.POLYGON] = [];\n                byGeometryType[GeometryType.CIRCLE] = [];\n                byGeometryType[GeometryType.LINE_STRING] = [];\n                byGeometryType[GeometryType.POINT] = [];\n            }\n            var geometry = style.getGeometryFunction()(feature);\n            if (geometry && intersects(extent, geometry.getExtent())) {\n                byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n            }\n        }\n    }\n    var zIndexKeys = Object.keys(featuresByZIndex)\n        .map(Number)\n        .sort(numberSafeCompareFunction);\n    for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n        var byGeometryType = featuresByZIndex[zIndexKeys[i]];\n        for (var type in byGeometryType) {\n            var geomAndStyle = byGeometryType[type];\n            for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n                renderer.setStyle(geomAndStyle[j + 1]);\n                for (var k = 0, kk = transforms.length; k < kk; ++k) {\n                    renderer.setTransform(transforms[k]);\n                    renderer.drawGeometry(geomAndStyle[j]);\n                }\n            }\n        }\n    }\n    return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n    var resultFeatures = [];\n    if (imageData) {\n        var index = (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) *\n            4;\n        var r = imageData.data[index];\n        var g = imageData.data[index + 1];\n        var b = imageData.data[index + 2];\n        var i = b + 256 * (g + 256 * r);\n        var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n        if (i && i % indexFactor === 0) {\n            resultFeatures.push(features[i / indexFactor - 1]);\n        }\n    }\n    return resultFeatures;\n}\n//# sourceMappingURL=hitdetect.js.map","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry,\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform, opt_declutterBuilderGroup) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (opt_declutterBuilderGroup) {\n        builderGroup = opt_declutterBuilderGroup;\n        declutterImageWithText =\n            imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n    }\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (opt_declutterBuilderGroup) {\n        builderGroup = opt_declutterBuilderGroup;\n        declutterImageWithText =\n            imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n    }\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport { apply, makeInverse, makeScale, toString as transformToString, } from '../../transform.js';\nimport { buffer, containsExtent, createEmpty, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX, } from '../../extent.js';\nimport { createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { fromUserExtent, getTransformFromProjections, getUserProjection, toUserExtent, } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { wrapX as wrapCoordinateX } from '../../coordinate.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @type {boolean}\n         */\n        _this.animatingOrInteracting_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @type {ImageData}\n         */\n        _this.hitDetectionImageData_ = null;\n        /**\n         * @type {Array<import(\"../../Feature.js\").default>}\n         */\n        _this.renderedFeatures_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {import(\"../../coordinate\").Coordinate}\n         */\n        _this.renderedCenter_ = null;\n        /**\n         * @private\n         * @type {import(\"../../proj/Projection\").default}\n         */\n        _this.renderedProjection_ = null;\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        /**\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        /**\n         * Clipping to be performed by `renderFrame()`\n         * @type {boolean}\n         */\n        _this.clipping = true;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasVectorLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        if (opacity < 1) {\n            target = null;\n        }\n        _super.prototype.useContainer.call(this, target, transform, opacity);\n    };\n    /**\n     * @param {ExecutorGroup} executorGroup Executor group.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     */\n    CanvasVectorLayerRenderer.prototype.renderWorlds = function (executorGroup, frameState, opt_declutterTree) {\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        var pixelRatio = frameState.pixelRatio;\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var context = this.context;\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        var multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n        var worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n        var endWorld = multiWorld\n            ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n            : 1;\n        var world = multiWorld\n            ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n            : 0;\n        do {\n            var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, world * worldWidth);\n            executorGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, opt_declutterTree);\n        } while (++world < endWorld);\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CanvasVectorLayerRenderer.prototype.renderDeclutter = function (frameState) {\n        if (this.declutterExecutorGroup) {\n            this.renderWorlds(this.declutterExecutorGroup, frameState, frameState.declutterTree);\n        }\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = transformToString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        var declutterExecutorGroup = this.declutterExecutorGroup;\n        if ((!replayGroup || replayGroup.isEmpty()) &&\n            (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())) {\n            if (!this.containerReused && canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return this.container;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent && this.clipping) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            clipped =\n                !containsExtent(layerExtent, frameState.extent) &&\n                    intersectsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        this.renderWorlds(replayGroup, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        var container = this.container;\n        if (opacity !== parseFloat(container.style.opacity)) {\n            container.style.opacity = opacity === 1 ? '' : String(opacity);\n        }\n        if (this.renderedRotation_ !== viewState.rotation) {\n            this.renderedRotation_ = viewState.rotation;\n            this.hitDetectionImageData_ = null;\n        }\n        return this.container;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(\n        /**\n         * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (resolve) {\n            if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n                var size = [this.context.canvas.width, this.context.canvas.height];\n                apply(this.pixelTransform, size);\n                var center = this.renderedCenter_;\n                var resolution = this.renderedResolution_;\n                var rotation = this.renderedRotation_;\n                var projection = this.renderedProjection_;\n                var extent = this.renderedExtent_;\n                var layer = this.getLayer();\n                var transforms = [];\n                var width = size[0] / 2;\n                var height = size[1] / 2;\n                transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, 0).slice());\n                var source = layer.getSource();\n                var projectionExtent = projection.getExtent();\n                if (source.getWrapX() &&\n                    projection.canWrapX() &&\n                    !containsExtent(projectionExtent, extent)) {\n                    var startX = extent[0];\n                    var worldWidth = getWidth(projectionExtent);\n                    var world = 0;\n                    var offsetX = void 0;\n                    while (startX < projectionExtent[0]) {\n                        --world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n                        startX += worldWidth;\n                    }\n                    world = 0;\n                    startX = extent[2];\n                    while (startX > projectionExtent[2]) {\n                        ++world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n                        startX -= worldWidth;\n                    }\n                }\n                this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n            }\n            resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n        }.bind(this));\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        var _this = this;\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        var layer = this.getLayer();\n        /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n        var features = {};\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @param {number} distanceSq The squared distance to the click position\n         * @return {T|undefined} Callback result.\n         */\n        var featureCallback = function (feature, geometry, distanceSq) {\n            var key = getUid(feature);\n            var match = features[key];\n            if (!match) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    return callback(feature, layer, geometry);\n                }\n                matches.push((features[key] = {\n                    feature: feature,\n                    layer: layer,\n                    geometry: geometry,\n                    distanceSq: distanceSq,\n                    callback: callback,\n                }));\n            }\n            else if (match !== true && distanceSq < match.distanceSq) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    matches.splice(matches.lastIndexOf(match), 1);\n                    return callback(feature, layer, geometry);\n                }\n                match.geometry = geometry;\n                match.distanceSq = distanceSq;\n            }\n            return undefined;\n        };\n        var result;\n        var executorGroups = [this.replayGroup_];\n        if (this.declutterExecutorGroup) {\n            executorGroups.push(this.declutterExecutorGroup);\n        }\n        executorGroups.some(function (executorGroup) {\n            return (result = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, executorGroup === _this.declutterExecutorGroup\n                ? frameState.declutterTree.all().map(function (item) { return item.value; })\n                : null));\n        });\n        return result;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        if (!vectorSource) {\n            return false;\n        }\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if ((!this.dirty_ && !updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            this.animatingOrInteracting_ = true;\n            return true;\n        }\n        this.animatingOrInteracting_ = false;\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var center = viewState.center.slice();\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var loadExtents = [extent.slice()];\n        var projectionExtent = projection.getExtent();\n        if (vectorSource.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n            wrapCoordinateX(center, projection);\n            var loadExtent = wrapExtentX(loadExtents[0], projection);\n            // If the extent crosses the date line, we load data for both edges of the worlds\n            if (loadExtent[0] < projectionExtent[0] &&\n                loadExtent[2] < projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] + worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] + worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n            else if (loadExtent[0] > projectionExtent[0] &&\n                loadExtent[2] > projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] - worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] - worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        var declutterBuilderGroup;\n        if (this.getLayer().getDeclutter()) {\n            declutterBuilderGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        }\n        var userProjection = getUserProjection();\n        var userTransform;\n        if (userProjection) {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(toUserExtent(loadExtents[i], projection), resolution, userProjection);\n            }\n            userTransform = getTransformFromProjections(userProjection, projection);\n        }\n        else {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n            }\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        var render = \n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform, declutterBuilderGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        /** @type {Array<import(\"../../Feature.js\").default>} */\n        var features = vectorSource.getFeaturesInExtent(userExtent);\n        if (vectorLayerRenderOrder) {\n            features.sort(vectorLayerRenderOrder);\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            render(features[i]);\n        }\n        this.renderedFeatures_ = features;\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        if (declutterBuilderGroup) {\n            this.declutterExecutorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), declutterBuilderGroup.finish(), vectorLayer.getRenderBuffer());\n        }\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.renderedCenter_ = center;\n        this.renderedProjection_ = projection;\n        this.replayGroup_ = executorGroup;\n        this.hitDetectionImageData_ = null;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_transform Transform from user to view projection.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform, opt_declutterBuilderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Returns the current number of pointers involved in the interaction,\n     * e.g. `2` when two fingers are used.\n     * @return {number} The number of pointers.\n     * @api\n     */\n    PointerInteraction.prototype.getPointerCount = function () {\n        return this.targetPointers.length;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n                // prevent page scrolling during dragging\n                mapBrowserEvent.originalEvent.preventDefault();\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence =\n                    handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.originalEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return (type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP);\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport { easeOut, linear } from '../easing.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions=} opt_options Options.\n     */\n    function Interaction(opt_options) {\n        var _this = _super.call(this) || this;\n        if (opt_options && opt_options.handleEvent) {\n            _this.handleEvent = opt_options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center),\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut,\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined\n            ? options.useInterimTilesOnError\n            : true);\n        return _this;\n    }\n    /**\n     * Return the level as number to which we will preload tiles up to.\n     * @return {number} The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n     * Set the level as number to which we will preload tiles up to.\n     * @param {number} preload The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n     * Whether we use interim tiles on error.\n     * @return {boolean} Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n     * Set whether we use interim tiles on error.\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { createEmpty, equals, getIntersection, getTopLeft, } from '../../extent.js';\nimport { createTransformString } from '../../render/canvas.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {?import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedPixelRatio;\n        /**\n         * @protected\n         * @type {import(\"../../proj/Projection.js\").default}\n         */\n        _this.renderedProjection = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return (tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            (tileState == TileState.ERROR && !useInterimTilesOnError));\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = size;\n            height = size;\n        }\n        var dx = (tileResolution * width) / 2 / tilePixelRatio;\n        var dy = (tileResolution * height) / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy,\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ &&\n                            (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        assign(context, tileSource.getContextOptions());\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 &&\n            (!this.containerReused ||\n                tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform, [\n                (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n                    tileResolution,\n                (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n                    tileResolution,\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1;\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1;\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n                if (clips && !inTransition) {\n                    context.restore();\n                }\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged =\n            !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.renderedPixelRatio = pixelRatio;\n        this.renderedProjection = projection;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     * @param {number} opacity Opacity.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alpha = opacity * tileAlpha;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (tileAlpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Image\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tileCount = 0;\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        ++tileCount;\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([\n                                    tile,\n                                    tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord),\n                                    tileResolution,\n                                ]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n        tileSource.updateCacheSize(tileCount, projection);\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1,\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge === 0 ? undefined : edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0\n            ? (right && isClockwise) || (!right && !isClockwise)\n            : (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {EVENT} originalEvent Original event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {EVENT}\n         * @api\n         */\n        _this.originalEvent = originalEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM',\n};\n//# sourceMappingURL=GeometryLayout.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ =\n            properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ ||\n            /** @type {?} */ ({\n                layer: this,\n                managed: opt_managed === undefined ? true : opt_managed,\n            });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex =\n            zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * Clean up.\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value,\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value,\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature',\n    /**\n     * Triggered when features starts loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n     * @api\n     */\n    FEATURESLOADSTART: 'featuresloadstart',\n    /**\n     * Triggered when features finishes loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n     * @api\n     */\n    FEATURESLOADEND: 'featuresloadend',\n    /**\n     * Triggered if feature loading results in an error.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n     * @api\n     */\n    FEATURESLOADERROR: 'featuresloaderror',\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml',\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport { VOID } from './functions.js';\n/**\n *\n * @type {boolean}\n * @private\n */\nvar withCredentials = false;\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection and success and failure callbacks as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(url, format, extent, resolution, projection, success, failure) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n    if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n    }\n    xhr.withCredentials = withCredentials;\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    xhr.onload = function (event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n            var type = format.getType();\n            /** @type {Document|Node|Object|string|undefined} */\n            var source = void 0;\n            if (type == FormatType.JSON || type == FormatType.TEXT) {\n                source = xhr.responseText;\n            }\n            else if (type == FormatType.XML) {\n                source = xhr.responseXML;\n                if (!source) {\n                    source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                }\n            }\n            else if (type == FormatType.ARRAY_BUFFER) {\n                source = /** @type {ArrayBuffer} */ (xhr.response);\n            }\n            if (source) {\n                success(\n                /** @type {Array<import(\"./Feature.js\").default>} */\n                (format.readFeatures(source, {\n                    extent: extent,\n                    featureProjection: projection,\n                })), format.readProjection(source));\n            }\n            else {\n                failure();\n            }\n        }\n        else {\n            failure();\n        }\n    };\n    /**\n     * @private\n     */\n    xhr.onerror = failure;\n    xhr.send();\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @param {function(): void=} success Success\n     *      Function called when loading succeeded.\n     * @param {function(): void=} failure Failure\n     *      Function called when loading failed.\n     * @this {import(\"./source/Vector\").default}\n     */\n    return function (extent, resolution, projection, success, failure) {\n        var source = /** @type {import(\"./source/Vector\").default} */ (this);\n        loadFeaturesXhr(url, format, extent, resolution, projection, \n        /**\n         * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n         * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n         * projection.\n         */\n        function (features, dataProjection) {\n            if (success !== undefined) {\n                success(features);\n            }\n            source.addFeatures(features);\n        }, \n        /* FIXME handle error */ failure ? failure : VOID);\n    };\n}\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n    withCredentials = xhrWithCredentials;\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { getValues, isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>=} opt_features Features.\n     */\n    function VectorSourceEvent(type, opt_feature, opt_features) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        /**\n         * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n         * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, \n            /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ =\n            options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this),\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.getInExtent(extent);\n        }\n        else if (this.featuresCollection_) {\n            return this.featuresCollection_.getArray();\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADSTART));\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection, function (features) {\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADEND, undefined, features));\n                }.bind(this_1), function () {\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADERROR));\n                }.bind(this_1));\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LinearRing} Simplified LinearRing.\n     * @protected\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { modulo } from '../math.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { offset as sphereOffset } from '../sphere.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        var polygon = new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        polygon.applyProperties(this);\n        return polygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Polygon} Simplified Polygon.\n     * @protected\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [\n        minX,\n        minY,\n        minX,\n        maxY,\n        maxX,\n        maxY,\n        maxX,\n        minY,\n        minX,\n        minY,\n    ];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n        flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n        flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) {\n        // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) {\n        // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) {\n        // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return (HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0);\n}\n//# sourceMappingURL=color.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature\n * @property {import(\"../layer/Layer.js\").default} layer\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} distanceSq\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback\n * @template T\n */\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n            return callback.call(thisArg, feature, managed ? layer : null, geometry);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var matches = /** @type {Array<HitMatch<T>>} */ ([]);\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = layerState.layer;\n                if (layer.hasRenderer() &&\n                    inView(layerState, viewState) &&\n                    layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX()\n                            ? translatedCoordinate\n                            : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, matches);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        if (matches.length === 0) {\n            return undefined;\n        }\n        var order = 1 / matches.length;\n        matches.forEach(function (m, i) { return (m.distanceSq += i * order); });\n        matches.sort(function (a, b) { return a.distanceSq - b.distanceSq; });\n        matches.some(function (m) {\n            return (result = m.callback(m.feature, m.layer, m.geometry));\n        });\n        return result;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        /**\n         * @type {Array<import(\"../layer/BaseVector.js\").default>}\n         */\n        var declutterLayers = [];\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY &&\n                    layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n            if ('getDeclutter' in layer) {\n                declutterLayers.push(layer);\n            }\n        }\n        for (var i = declutterLayers.length - 1; i >= 0; --i) {\n            declutterLayers[i].renderDeclutter(frameState);\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() &&\n                inView(layerState, viewState) &&\n                layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign, clear } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers',\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof ( /** @type {?} */(layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { listen, unlistenByKey } from './events.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n         * @type {boolean}\n         */\n        _this.emulateClicks_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance\n            ? moveTolerance * DEVICE_PIXEL_RATIO\n            : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(\n            /** @this {MapBrowserEventHandler} */\n            function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (this.emulateClicks_ &&\n            !newEvent.propagationStopped &&\n            !this.dragging_ &&\n            this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.emulateClicks_ = this.activePointers_ === 0;\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            var doc = this.map_.getOwnerDocument();\n            this.dragListenerKeys_.push(listen(doc, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n            if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n                this.dragListenerKeys_.push(listen(this.element_.getRootNode(), MapBrowserEventType.POINTERUP, this.handlePointerUp_, this));\n            }\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        if (!this.originalPointerMoveEvent_ ||\n            this.originalPointerMoveEvent_.defaultPrevented) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return (this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) >\n                this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_);\n    };\n    /**\n     * Clean up.\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view',\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @param {Array} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if ((tile.hifi && state === TileState.LOADED) ||\n            state === TileState.ERROR ||\n            state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading &&\n            newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return (65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution);\n}\n//# sourceMappingURL=TileQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE, PASSIVE_EVENT_LISTENERS, } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform, } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty, } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {import(\"rbush\").default} declutterTree\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ =\n            options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ =\n            options.pixelRatio !== undefined\n                ? options.pixelRatio\n                : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = /** @this {PluggableMap} */ function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className =\n            'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.style.pointerEvents = 'none';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.moveTolerance_ = options.moveTolerance;\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {undefined|function(Event): void}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(\n            /** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * Clean up.\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined ? options.hitTolerance : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {UIEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = \n        //FIXME Are we really calling this with a TouchEvent anywhere?\n        'changedTouches' in event\n            ? /** @type {TouchEvent} */ (event).changedTouches[0]\n            : /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top,\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string'\n                ? document.getElementById(target)\n                : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return /** @type {View} */ (this.get(MapProperty.VIEW));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @return {!Document} The document where the map is displayed.\n     */\n    PluggableMap.prototype.getOwnerDocument = function () {\n        return this.getTargetElement()\n            ? this.getTargetElement().ownerDocument\n            : document;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {UIEvent} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n        var eventType = originalEvent.type;\n        if (eventType === PointerEventType.POINTERDOWN ||\n            eventType === EventType.WHEEL ||\n            eventType === EventType.KEYDOWN) {\n            var doc = this.getOwnerDocument();\n            var rootNode = this.viewport_.getRootNode\n                ? this.viewport_.getRootNode()\n                : doc;\n            var target = 'host' in rootNode // ShadowRoot\n                ? /** @type {ShadowRoot} */ (rootNode).elementFromPoint(originalEvent.clientX, originalEvent.clientY)\n                : /** @type {Node} */ (originalEvent.target);\n            if (\n            // Abort if the target is a child of the container for elements whose events are not meant\n            // to be handled by map interactions.\n            this.overlayContainerStopEvent_.contains(target) ||\n                // Abort if the event target is a child of the container that is no longer in the page.\n                // It's possible for the target to no longer be in the page if it has been removed in an\n                // event listener, this might happen in a Control that recreates it's content based on\n                // user interaction either manually or via a render in something like https://reactjs.org/\n                !(rootNode === doc ? doc.documentElement : rootNode).contains(target)) {\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            var interactionsArray = this.getInteractions().getArray().slice();\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (interaction.getMap() !== this ||\n                    !interaction.getActive() ||\n                    !this.getTargetElement()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont || mapBrowserEvent.propagationStopped) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState &&\n            this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n            !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() &&\n            !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView() && !this.getView().getAnimating()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.mapBrowserEventHandler_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n            this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n            this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n            this.mapBrowserEventHandler_.dispose();\n            this.mapBrowserEventHandler_ = null;\n            removeNode(this.viewport_);\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderTimeoutHandle_ = undefined;\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n            for (var key in MapBrowserEventType) {\n                this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n            }\n            this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n            this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n            var keyboardEventTarget = !this.keyboardEventTarget_\n                ? targetElement\n                : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this),\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this),\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var _this = this;\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterTree: null,\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {},\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        if (!this.postRenderTimeoutHandle_) {\n            this.postRenderTimeoutHandle_ = setTimeout(function () {\n                _this.postRenderTimeoutHandle_ = undefined;\n                _this.handlePostRender();\n            }, 0);\n        }\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth']),\n            ]);\n        }\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10),\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget =\n            typeof options.keyboardEventTarget === 'string'\n                ? document.getElementById(options.keyboardEventTarget)\n                : options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers &&\n        typeof ( /** @type {?} */(options.layers).getLayers) === 'function'\n        ? /** @type {LayerGroup} */ (options.layers)\n        : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] =\n        options.view !== undefined ? options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.controls).getArray) === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.interactions).getArray) ===\n                'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.overlays).getArray) === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values,\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport { VOID } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { removeNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        var element = options.element;\n        if (element && !options.target && !element.style.pointerEvents) {\n            element.style.pointerEvents = 'auto';\n        }\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = element ? element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_\n                ? this.target_\n                : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * Renders the control.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @api\n     */\n    Control.prototype.render = function (mapEvent) { };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ =\n            typeof target === 'string' ? document.getElementById(target) : target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ =\n            options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.userCollapsed_ = _this.collapsed_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ =\n            options.collapsible !== undefined ? options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var expandClassName = options.expandClassName !== undefined\n            ? options.expandClassName\n            : className + '-expand';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        var collapseClassName = options.collapseClassName !== undefined\n            ? options.collapseClassName\n            : className + '-collpase';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n            _this.collapseLabel_.className = collapseClassName;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n            _this.label_.className = expandClassName;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className +\n            ' ' +\n            CLASS_UNSELECTABLE +\n            ' ' +\n            CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var collapsible = true;\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            collapsible =\n                collapsible && source.getAttributionsCollapsible() !== false;\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        if (!this.overrideCollapsible_) {\n            this.setCollapsible(collapsible);\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n        this.userCollapsed_ = this.collapsed_;\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (this.userCollapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        this.userCollapsed_ = collapsed;\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Update the attribution element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Attribution.prototype.render = function (mapEvent) {\n        this.updateElement_(mapEvent.frameState);\n    };\n    return Attribution;\n}(Control));\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        var compassClassName = options.compassClassName !== undefined\n            ? options.compassClassName\n            : 'ol-compass';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = compassClassName;\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add(compassClassName);\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    /**\n     * Update the rotate control element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Rotate.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            return;\n        }\n        var rotation = frameState.viewState.rotation;\n        if (rotation != this.rotation_) {\n            var transform = 'rotate(' + rotation + 'rad)';\n            if (this.autoHide_) {\n                var contains = this.element.classList.contains(CLASS_HIDDEN);\n                if (!contains && rotation === 0) {\n                    this.element.classList.add(CLASS_HIDDEN);\n                }\n                else if (contains && rotation !== 0) {\n                    this.element.classList.remove(CLASS_HIDDEN);\n                }\n            }\n            this.label_.style.transform = transform;\n        }\n        this.rotation_ = rotation;\n    };\n    return Rotate;\n}(Control));\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInClassName = options.zoomInClassName !== undefined\n            ? options.zoomInClassName\n            : className + '-in';\n        var zoomOutClassName = options.zoomOutClassName !== undefined\n            ? options.zoomOutClassName\n            : className + '-out';\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined\n            ? options.zoomOutTipLabel\n            : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = zoomInClassName;\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string'\n            ? document.createTextNode(zoomInLabel)\n            : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = zoomOutClassName;\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string'\n            ? document.createTextNode(zoomOutLabel)\n            : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ? options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n     * doubleclick) and eventually zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    DoubleClickZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n            var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n            var map = mapBrowserEvent.map;\n            var anchor = mapBrowserEvent.coordinate;\n            var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, anchor, this.duration_);\n            browserEvent.preventDefault();\n            stopEvent = true;\n        }\n        return !stopEvent;\n    };\n    return DoubleClickZoom;\n}(Interaction));\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { all, focusWithTabindex, noModifierKeys, primaryAction, } from '../events/condition.js';\nimport { easeOut } from '../easing.js';\nimport { rotate as rotateCoordinate, scale as scaleCoordinate, } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        var condition = options.condition\n            ? options.condition\n            : all(noModifierKeys, primaryAction);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1],\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n        mapBrowserEvent.originalEvent.preventDefault();\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle),\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut,\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { altShiftKeysOnly, mouseActionButton, mouseOnly, } from '../events/condition.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.style.pointerEvents = 'auto';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]],\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport { mouseActionButton } from '../events/condition.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend',\n    /**\n     * Triggered upon drag box canceled.\n     * @event DragBoxEvent#boxcancel\n     * @api\n     */\n    BOXCANCEL: 'boxcancel',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\nexport { DragBoxEvent };\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        if (options.onBoxEnd) {\n            _this.onBoxEnd = options.onBoxEnd;\n        }\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : mouseActionButton;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition\n            ? options.boxEndCondition\n            : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.box_.setMap(null);\n        var completeBox = this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel);\n        if (completeBox) {\n            this.onBoxEnd(mapBrowserEvent);\n        }\n        this.dispatchEvent(new DragBoxEvent(completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL, mapBrowserEvent.coordinate, mapBrowserEvent));\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragBox.prototype.onBoxEnd = function (event) { };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter, } from '../extent.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragZoom.prototype.onBoxEnd = function (event) {\n        var map = this.getMap();\n        var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n        var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n        var extent = this.getGeometry().getExtent();\n        if (this.out_) {\n            var mapExtent = view.calculateExtentInternal(size);\n            var boxPixelExtent = createOrUpdateFromCoordinates([\n                map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n                map.getPixelFromCoordinateInternal(getTopRight(extent)),\n            ]);\n            var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n            scaleFromCenter(mapExtent, 1 / factor);\n            extent = mapExtent;\n        }\n        var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n        var center = view.getConstrainedCenter(getCenter(extent), resolution);\n        view.animateInternal({\n            resolution: resolution,\n            center: center,\n            duration: this.duration_,\n            easing: easeOut,\n        });\n    };\n    return DragZoom;\n}(DragBox));\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { pan } from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport { rotate as rotateCoordinate } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return (noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent));\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ =\n            options.condition !== undefined\n                ? options.condition\n                : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ =\n            options.pixelDelta !== undefined ? options.pixelDelta : 128;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n     * pressed).\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardPan}\n     */\n    KeyboardPan.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var keyCode = keyEvent.keyCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (keyCode == KeyCode.DOWN ||\n                    keyCode == KeyCode.LEFT ||\n                    keyCode == KeyCode.RIGHT ||\n                    keyCode == KeyCode.UP)) {\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n                var deltaX = 0, deltaY = 0;\n                if (keyCode == KeyCode.DOWN) {\n                    deltaY = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.LEFT) {\n                    deltaX = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.RIGHT) {\n                    deltaX = mapUnitsDelta;\n                }\n                else {\n                    deltaY = mapUnitsDelta;\n                }\n                var delta = [deltaX, deltaY];\n                rotateCoordinate(delta, view.getRotation());\n                pan(view, delta, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardPan;\n}(Interaction));\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { targetNotEditable } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n     * key pressed was '+' or '-').\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardZoom}\n     */\n    KeyboardZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN ||\n            mapBrowserEvent.type == EventType.KEYPRESS) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var charCode = keyEvent.charCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n                var map = mapBrowserEvent.map;\n                var delta = charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n                var view = map.getView();\n                zoomByDelta(view, delta, undefined, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardZoom;\n}(Interaction));\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport { all, always, focusWithTabindex } from '../events/condition.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel',\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ =\n            options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.constrainResolution_ =\n            options.constrainResolution !== undefined\n                ? options.constrainResolution\n                : false;\n        var condition = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.deltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        wheelEvent.preventDefault();\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n        }\n        var view = map.getView();\n        if (this.mode_ === Mode.TRACKPAD &&\n            !(view.getConstrainResolution() || this.constrainResolution_)) {\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n            view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n        if (view.getConstrainResolution() || this.constrainResolution_) {\n            // view has a zoom constraint, zoom by 1\n            delta = delta ? (delta > 0 ? 1 : -1) : 0;\n        }\n        zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined\n        ? options.altShiftDragRotate\n        : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            onFocusOnly: options.onFocusOnly,\n            kinetic: kinetic,\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            onFocusOnly: options.onFocusOnly,\n            duration: options.zoomDuration,\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions({\n                onFocusOnly: true,\n            });\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n    typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            },\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise\n            .then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' &&\n                    error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler),\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/Style\n */\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {import(\"./Image.js\").default}\n         */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex(),\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)',\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25,\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5,\n                }),\n                fill: fill,\n                stroke: stroke,\n            }),\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5],\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2,\n            }),\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width,\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue,\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2,\n                }),\n            }),\n            zIndex: Infinity,\n        }),\n    ];\n    styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Origin is at bottom left\n     * @api\n     */\n    BOTTOM_LEFT: 'bottom-left',\n    /**\n     * Origin is at bottom right\n     * @api\n     */\n    BOTTOM_RIGHT: 'bottom-right',\n    /**\n     * Origin is at top left\n     * @api\n     */\n    TOP_LEFT: 'top-left',\n    /**\n     * Origin is at top right\n     * @api\n     */\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar taintedTestContext = null;\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            if (!taintedTestContext) {\n                taintedTestContext = createCanvasContext2D(1, 1);\n            }\n            taintedTestContext.drawImage(this.image_, 0, 0);\n            try {\n                taintedTestContext.getImageData(0, 0, 1, 1);\n                this.tainted_ = false;\n            }\n            catch (e) {\n                taintedTestContext = null;\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        else {\n            this.size_ = [this.image_.width, this.image_.height];\n        }\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Image or Canvas element.\n     */\n    IconImage.prototype.getPixelRatio = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? pixelRatio : 1;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function (pixelRatio) {\n        if (!this.color_ || this.canvas_[pixelRatio]) {\n            return;\n        }\n        var canvas = document.createElement('canvas');\n        this.canvas_[pixelRatio] = canvas;\n        canvas.width = Math.ceil(this.image_.width * pixelRatio);\n        canvas.height = Math.ceil(this.image_.height * pixelRatio);\n        var ctx = canvas.getContext('2d');\n        ctx.scale(pixelRatio, pixelRatio);\n        ctx.drawImage(this.image_, 0, 0);\n        ctx.globalCompositeOperation = 'multiply';\n        // Internet Explorer 11 does not support the multiply operation.\n        // If the canvas is tainted in Internet Explorer this still produces\n        // a solid color image with the shape of the icon.\n        if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n            ctx.fillStyle = asString(this.color_);\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.drawImage(this.image_, 0, 0);\n        }\n        else {\n            var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            var data = imgData.data;\n            var r = this.color_[0] / 255.0;\n            var g = this.color_[1] / 255.0;\n            var b = this.color_[2] / 255.0;\n            var a = this.color_[3];\n            for (var i = 0, ii = data.length; i < ii; i += 4) {\n                data[i] *= r;\n                data[i + 1] *= g;\n                data[i + 2] *= b;\n                data[i + 3] *= a;\n            }\n            ctx.putImageData(imgData, 0, 0);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            rotateWithView: rotateWithView,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ =\n            options.anchorOrigin !== undefined\n                ? options.anchorOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ =\n            options.anchorXUnits !== undefined\n                ? options.anchorXUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ =\n            options.anchorYUnits !== undefined\n                ? options.anchorYUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, \n        /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ =\n            options.offsetOrigin !== undefined\n                ? options.offsetOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: this.color_ && this.color_.slice\n                ? this.color_.slice()\n                : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n        });\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * Get the pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} The pixel ration of the image.\n     * @api\n     */\n    Icon.prototype.getPixelRatio = function (pixelRatio) {\n        return this.iconImage_.getPixelRatio(pixelRatio);\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    Icon.prototype.getHitDetectionImageSize = function () {\n        return this.getImageSize();\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    Icon.prototype.getHitDetectionImage = function () {\n        return this.iconImage_.getHitDetectionImage();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        var displacement = this.getDisplacement();\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        offset[0] += displacement[0];\n        offset[1] += displacement[1];\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error',\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, { createOrUpdate as createOrUpdateTileRange, } from '../TileRange.js';\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport { clamp } from '../math.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { toSize } from '../size.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined && !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ =\n            options.tileSize !== undefined\n                ? options.tileSize\n                : !this.tileSizes_\n                    ? DEFAULT_TILE_SIZE\n                    : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                if (extent) {\n                    var restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n                    tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n                    tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n                    tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n                    tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n                }\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = (scale * xFromOrigin) / tileSize[0];\n        var tileCoordY = (scale * yFromOrigin) / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return this.extent_\n                ? this.getTileRangeForExtentAndZ(this.extent_, z)\n                : null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport { toDegrees, toRadians } from './math.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) *\n            Math.sin(deltaLonBy2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area +=\n            toRadians(x2 - x1) *\n                (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return (area * radius * radius) / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 +\n        Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange',\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n})();\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport var log2 = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var log2;\n    if ('log2' in Math) {\n        // The environment supports the native Math.log2 function, use it…\n        log2 = Math.log2;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        log2 = function (x) {\n            return Math.log(x) * Math.LOG2E;\n        };\n    }\n    return log2;\n})();\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return (angleInRadians * 180) / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return (angleInDegrees * Math.PI) / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Anchor is a fraction\n     * @api\n     */\n    FRACTION: 'fraction',\n    /**\n     * Anchor is in pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' +\n            path +\n            '/doc/errors/#' +\n            code +\n            ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {CanvasLineCap|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {CanvasLineJoin|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth(),\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {CanvasLineCap|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {CanvasLineJoin|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {CanvasLineCap|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {CanvasLineJoin|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = (2 * Math.PI) / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index +=\n                stride *\n                    Math.max(((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n                        maxDelta) |\n                        0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, create as createTransform, } from '../transform.js';\nimport { createEmpty, createOrUpdateEmpty, getHeight, returnOrUpdate, } from '../extent.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport { memoizeOne } from '../functions.js';\nimport { transform2D } from './flat/transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            var extent = this.computeExtent(this.extent_);\n            if (isNaN(extent[0]) || isNaN(extent[1])) {\n                createOrUpdateEmpty(extent);\n            }\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS\n            ? function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            }\n            : getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport { rotate, scale, transform2D, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./GeometryLayout.js\").default}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {import(\"./GeometryLayout.js\").default} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in counter-clockwise radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + ((high - low) >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) {\n            /* Too low. */\n            low = mid + 1;\n        }\n        else {\n            /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || (opt_strict && res === 0));\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation',\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @param {Array<number>=} opt_centerShift Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n            var shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n            var minX = extent[0] + viewWidth / 2 + shiftX;\n            var maxX = extent[2] - viewWidth / 2 + shiftX;\n            var minY = extent[1] + viewHeight / 2 + shiftY;\n            var maxY = extent[3] - viewHeight / 2 + shiftY;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = (maxX + minX) / 2;\n                maxX = minX;\n            }\n            if (minY > maxY) {\n                minY = (maxY + minY) / 2;\n                maxY = minY;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x +=\n                    -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y +=\n                    -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { clamp } from './math.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { linearFindNearest } from './array.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    if (showFullExtent) {\n        return Math.min(resolution, Math.max(xResolution, yResolution));\n    }\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *=\n        Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n            1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /=\n            Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n                ratio +\n                1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var tolerance = 1e-9;\n            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n            var offset = -direction * (0.5 - tolerance) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, createProjection, fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from './proj.js';\nimport { VOID } from './functions.js';\nimport { add as addCoordinate, equals as coordinatesEqual, rotate as rotateCoordinate, } from './coordinate.js';\nimport { assert } from './asserts.js';\nimport { assign } from './obj.js';\nimport { none as centerNone, createExtent } from './centerconstraint.js';\nimport { clamp, modulo } from './math.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\nimport { createSnapToN, createSnapToZero, disable, none as rotationNone, } from './rotationconstraint.js';\nimport { createSnapToPower, createSnapToResolutions, } from './resolutionconstraint.js';\nimport { easeOut } from './easing.js';\nimport { equals } from './coordinate.js';\nimport { getCenter, getForViewAndSize, getHeight, getWidth, isEmpty, } from './extent.js';\nimport { inAndOut } from './easing.js';\nimport { linearFindNearest } from './array.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./size.js\").Size}\n         */\n        _this.viewportSize_ = [100, 100];\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.cancelAnchor_ = undefined;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * Padding (in css pixels).\n         * If the map viewport is partially covered with other content (overlays) along\n         * its edges, this setting allows to shift the center of the viewport away from that\n         * content. The order of the values in the array is top, right, bottom, left.\n         * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n         * @type {Array<number>|undefined}\n         * @api\n         */\n        this.padding = options.padding;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint,\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 &&\n            typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback,\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        var anchor;\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n            if (!anchor) {\n                for (var j = 0, jj = series.length; j < jj; ++j) {\n                    var animation = series[j];\n                    if (!animation.complete) {\n                        anchor = animation.anchor;\n                        break;\n                    }\n                }\n            }\n        }\n        this.animations_.length = 0;\n        this.cancelAnchor_ = anchor;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1\n                        ? animation.targetResolution\n                        : animation.sourceResolution +\n                            progress *\n                                (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getViewportSize_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined &&\n                    animation.targetRotation !== undefined) {\n                    var rotation = progress === 1\n                        ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                            Math.PI\n                        : animation.sourceRotation +\n                            progress *\n                                (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] -\n                (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n            var y = anchor[1] -\n                (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * Returns the current viewport size.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getViewportSize_ = function (opt_rotation) {\n        var size = this.viewportSize_;\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            return [\n                Math.abs(w * Math.cos(opt_rotation)) +\n                    Math.abs(h * Math.sin(opt_rotation)),\n                Math.abs(w * Math.sin(opt_rotation)) +\n                    Math.abs(h * Math.cos(opt_rotation)),\n            ];\n        }\n        else {\n            return size;\n        }\n    };\n    /**\n     * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n     * to avoid performance hit and layout reflow.\n     * This should be done on map size change.\n     * Note: the constraints are not resolved during an animation to avoid stopping it\n     * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n     */\n    View.prototype.setViewportSize = function (opt_size) {\n        this.viewportSize_ = Array.isArray(opt_size)\n            ? opt_size.slice()\n            : [100, 100];\n        if (!this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @return {boolean} Resolution constraint is set\n     */\n    View.prototype.getConstrainResolution = function () {\n        return this.options_.constrainResolution;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n     * of the map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided,\n     * the map's last known viewport size will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var logPower = Math.log(opt_power || 2);\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / logPower;\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = Math.log(maxResolution / resolution) / logPower / max;\n            return value;\n        });\n    };\n    /**\n     * Returns the size of the viewport minus padding.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n     */\n    View.prototype.getViewportSizeMinusPadding_ = function (opt_rotation) {\n        var size = this.getViewportSize_(opt_rotation);\n        var padding = this.padding;\n        if (padding) {\n            size = [\n                size[0] - padding[1] - padding[3],\n                size[1] - padding[0] - padding[2],\n            ];\n        }\n        return size;\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var padding = this.padding;\n        if (padding) {\n            var reducedSize = this.getViewportSizeMinusPadding_();\n            center = calculateCenterOn(center, this.getViewportSize_(), [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n        }\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom(),\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return (this.resolutions_[baseLevel] /\n                Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1)));\n        }\n        else {\n            return (this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_));\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) ||\n            typeof ( /** @type {?} */(geometryOrExtent).getSimplifiedGeometry) ===\n                'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n                    .clone()\n                    .transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, opt_options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getViewportSizeMinusPadding_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution)\n            ? minResolution\n            : Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n        centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = this.getConstrainedCenter([centerX, centerY], resolution);\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: center,\n                duration: options.duration,\n                easing: options.easing,\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        this.setCenterInternal(calculateCenterOn(coordinate, size, position, this.getResolution(), this.getRotation()));\n    };\n    /**\n     * Calculates the shift between map and viewport center.\n     * @param {import(\"./coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {import(\"./size.js\").Size} size Size.\n     * @return {Array<number>|undefined} Center shift.\n     */\n    View.prototype.calculateCenterShift = function (center, resolution, rotation, size) {\n        var centerShift;\n        var padding = this.padding;\n        if (padding && center) {\n            var reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n            var shiftedCenter = calculateCenterOn(center, size, [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n            centerShift = [\n                center[0] - shiftedCenter[0],\n                center[1] - shiftedCenter[1],\n            ];\n        }\n        return centerShift;\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getViewportSize_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {import(\"./ViewHint.js\").default} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) ||\n            !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n        this.cancelAnchor_ = undefined;\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, false, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (duration === 0 && !this.cancelAnchor_) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n        this.cancelAnchor_ = undefined;\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: anchor,\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined\n            ? options.smoothExtentConstraint\n            : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ? options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined\n        ? options.smoothResolutionConstraint\n        : true;\n    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution =\n            resolutions[maxZoom] !== undefined\n                ? resolutions[maxZoom]\n                : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent\n            ? // use an extent that can fit the whole world if need be\n                (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n            : Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution /\n            Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom =\n            minZoom +\n                Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    return {\n        constraint: resolutionConstraint,\n        maxResolution: maxResolution,\n        minResolution: minResolution,\n        minZoom: minZoom,\n        zoomFactor: zoomFactor,\n    };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n    // calculate rotated position\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n    return [centerX, centerY];\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/coordinate\n */\nimport { getWidth } from './extent.js';\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + (r * dx) / d;\n    var y = y0 + (r * dy) / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = dx === 0 && dy === 0\n        ? 0\n        : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - deg * 3600 - min * 60;\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return (deg +\n        '\\u00b0 ' +\n        padNumber(min, 2) +\n        '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) +\n        '\\u2033' +\n        (normalizedDegrees == 0\n            ? ''\n            : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return (degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n            ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    if (projection.canWrapX()) {\n        var worldWidth = getWidth(projection.getExtent());\n        var worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n        if (worldsAway) {\n            coordinate[0] -= worldsAway * worldWidth;\n        }\n    }\n    return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number=} opt_sourceExtentWidth Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n    var projectionExtent = projection.getExtent();\n    var worldsAway = 0;\n    if (projection.canWrapX() &&\n        (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])) {\n        var sourceExtentWidth = opt_sourceExtentWidth || getWidth(projectionExtent);\n        worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / sourceExtentWidth);\n    }\n    return worldsAway;\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number|import(\"../size.js\").Size} scale\n * @property {Array<number>} displacement\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.displacement_ = options.displacement;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number|import(\"../size.js\").Size} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    ImageStyle.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the displacement of the shape\n     * @return {Array<number>} Shape's center displacement\n     * @api\n     */\n    ImageStyle.prototype.getDisplacement = function () {\n        return this.displacement_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function () {\n        return abstract();\n    };\n    /*\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * */\n    ImageStyle.prototype.getPixelRatio = function (pixelRatio) {\n        return 1;\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale);\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Circle\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { createOrUpdate, forEachCorner, intersects } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { rotate, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    /**\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     *     For internal use, flat coordinates in combination with `opt_layout` and no\n     *     `opt_radius` are also accepted.\n     * @param {number=} opt_radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Circle(center, opt_radius, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout !== undefined && opt_radius === undefined) {\n            _this.setFlatCoordinates(opt_layout, center);\n        }\n        else {\n            var radius = opt_radius ? opt_radius : 0;\n            _this.setCenterAndRadius(center, radius, opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Circle} Clone.\n     * @api\n     */\n    Circle.prototype.clone = function () {\n        var circle = new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n        circle.applyProperties(this);\n        return circle;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Circle.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        var squaredDistance = dx * dx + dy * dy;\n        if (squaredDistance < minSquaredDistance) {\n            if (squaredDistance === 0) {\n                for (var i = 0; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            else {\n                var delta = this.getRadius() / Math.sqrt(squaredDistance);\n                closestPoint[0] = flatCoordinates[0] + delta * dx;\n                closestPoint[1] = flatCoordinates[1] + delta * dy;\n                for (var i = 2; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            closestPoint.length = this.stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Circle.prototype.containsXY = function (x, y) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        return dx * dx + dy * dy <= this.getRadiusSquared_();\n    };\n    /**\n     * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @return {import(\"../coordinate.js\").Coordinate} Center.\n     * @api\n     */\n    Circle.prototype.getCenter = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Circle.prototype.computeExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n        return createOrUpdate(flatCoordinates[0] - radius, flatCoordinates[1] - radius, flatCoordinates[0] + radius, flatCoordinates[1] + radius, extent);\n    };\n    /**\n     * Return the radius of the circle.\n     * @return {number} Radius.\n     * @api\n     */\n    Circle.prototype.getRadius = function () {\n        return Math.sqrt(this.getRadiusSquared_());\n    };\n    /**\n     * @private\n     * @return {number} Radius squared.\n     */\n    Circle.prototype.getRadiusSquared_ = function () {\n        var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n        var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n        return dx * dx + dy * dy;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Circle.prototype.getType = function () {\n        return GeometryType.CIRCLE;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Circle.prototype.intersectsExtent = function (extent) {\n        var circleExtent = this.getExtent();\n        if (intersects(extent, circleExtent)) {\n            var center = this.getCenter();\n            if (extent[0] <= center[0] && extent[2] >= center[0]) {\n                return true;\n            }\n            if (extent[1] <= center[1] && extent[3] >= center[1]) {\n                return true;\n            }\n            return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n        }\n        return false;\n    };\n    /**\n     * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\n     * @api\n     */\n    Circle.prototype.setCenter = function (center) {\n        var stride = this.stride;\n        var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n        var flatCoordinates = center.slice();\n        flatCoordinates[stride] = flatCoordinates[0] + radius;\n        for (var i = 1; i < stride; ++i) {\n            flatCoordinates[stride + i] = center[i];\n        }\n        this.setFlatCoordinates(this.layout, flatCoordinates);\n        this.changed();\n    };\n    /**\n     * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n     * number) of the circle.\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     * @param {number} radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Circle.prototype.setCenterAndRadius = function (center, radius, opt_layout) {\n        this.setLayout(opt_layout, center, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        /** @type {Array<number>} */\n        var flatCoordinates = this.flatCoordinates;\n        var offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n        flatCoordinates[offset++] = flatCoordinates[0] + radius;\n        for (var i = 1, ii = this.stride; i < ii; ++i) {\n            flatCoordinates[offset++] = flatCoordinates[i];\n        }\n        flatCoordinates.length = offset;\n        this.changed();\n    };\n    Circle.prototype.getCoordinates = function () {\n        return null;\n    };\n    Circle.prototype.setCoordinates = function (coordinates, opt_layout) { };\n    /**\n     * Set the radius of the circle. The radius is in the units of the projection.\n     * @param {number} radius Radius.\n     * @api\n     */\n    Circle.prototype.setRadius = function (radius) {\n        this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n        this.changed();\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in counter-clockwise radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Circle.prototype.rotate = function (angle, anchor) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(rotate(center, 0, center.length, stride, angle, anchor, center));\n        this.changed();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Circle.prototype.translate = function (deltaX, deltaY) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(translate(center, 0, center.length, stride, deltaX, deltaY, center));\n        this.changed();\n    };\n    return Circle;\n}(SimpleGeometry));\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n//# sourceMappingURL=Circle.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport EventType from './events/EventType.js';\nimport { assert } from './asserts.js';\nimport { listen, unlistenByKey } from './events.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        _this.addEventListener(getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_);\n        if (opt_geometryOrProperties) {\n            if (typeof (\n            /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry) === 'function') {\n                var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.hasProperties() ? this.getProperties() : null);\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {Geometry|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {Geometry|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature to override the layer style.  This can be a\n     * single style object, an array of styles, or a function that takes a\n     * resolution and returns an array of styles. To unset the feature style, call\n     * `setStyle()` without arguments or a falsey value.\n     * @param {import(\"./style/Style.js\").StyleLike=} opt_style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style;\n        this.styleFunction_ = !opt_style\n            ? undefined\n            : createStyleFunction(opt_style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        this.removeEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.geometryName_ = name;\n        this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_dimension Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest, opt_dimension) {\n    var o, t;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        o = offset;\n    }\n    else if (n === 2) {\n        o = offset;\n        t = fraction;\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            t =\n                (target - cumulativeLengths[-index - 2]) /\n                    (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            o = offset + (-index - 2) * stride;\n        }\n        else {\n            o = offset + index * stride;\n        }\n    }\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var dest = opt_dest ? opt_dest : new Array(dimension);\n    for (var i = 0; i < dimension; ++i) {\n        dest[i] =\n            o === undefined\n                ? NaN\n                : t === undefined\n                    ? flatCoordinates[o + i]\n                    : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        var lineString = new LineString(this.flatCoordinates.slice(), this.layout);\n        lineString.applyProperties(this);\n        return lineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest, this.stride);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} Simplified LineString.\n     * @protected\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM, } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        var multiLineString = new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        multiLineString.applyProperties(this);\n        return multiLineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiLineString} Simplified MultiLineString.\n     * @protected\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        multiPoint.applyProperties(this);\n        return multiPoint;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates\n            ? 0\n            : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta, } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray, } from './flat/orient.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        var multiPolygon = new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n        multiPolygon.applyProperties(this);\n        return multiPolygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiPolygon} Simplified MultiPolygon.\n     * @protected\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length =\n                lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, { fromCircle, makeRegular } from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { always, noModifierKeys, shiftKeyOnly } from '../events/condition.js';\nimport { boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../extent.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { fromUserCoordinate, getUserProjection } from '../proj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/GeometryType.js\").default} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    CIRCLE: 'Circle',\n};\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n    /**\n     * Triggered upon feature draw start\n     * @event DrawEvent#drawstart\n     * @api\n     */\n    DRAWSTART: 'drawstart',\n    /**\n     * Triggered upon feature draw end\n     * @event DrawEvent#drawend\n     * @api\n     */\n    DRAWEND: 'drawend',\n    /**\n     * Triggered upon feature draw abortion\n     * @event DrawEvent#drawabort\n     * @api\n     */\n    DRAWABORT: 'drawabort',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /** @class */ (function (_super) {\n    __extends(DrawEvent, _super);\n    /**\n     * @param {DrawEventType} type Type.\n     * @param {Feature} feature The feature drawn.\n     */\n    function DrawEvent(type, feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being drawn.\n         * @type {Feature}\n         * @api\n         */\n        _this.feature = feature;\n        return _this;\n    }\n    return DrawEvent;\n}(Event));\nexport { DrawEvent };\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /** @class */ (function (_super) {\n    __extends(Draw, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Draw(options) {\n        var _this = this;\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.shouldHandle_ = false;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.downPx_ = null;\n        /**\n         * @type {?}\n         * @private\n         */\n        _this.downTimeout_;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.lastDragTime_;\n        /**\n         * Pointer type of the last pointermove event\n         * @type {string}\n         * @private\n         */\n        _this.pointerType_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.freehand_ = false;\n        /**\n         * Target source for drawn features.\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * Target collection for drawn features.\n         * @type {import(\"../Collection.js\").default<Feature>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * Pixel distance for snapping.\n         * @type {number}\n         * @private\n         */\n        _this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n        /**\n         * Geometry type.\n         * @type {import(\"../geom/GeometryType.js\").default}\n         * @private\n         */\n        _this.type_ = /** @type {import(\"../geom/GeometryType.js\").default} */ (options.type);\n        /**\n         * Drawing mode (derived from geometry type.\n         * @type {Mode}\n         * @private\n         */\n        _this.mode_ = getMode(_this.type_);\n        /**\n         * Stop click, singleclick, and doubleclick events from firing during drawing.\n         * Default is `false`.\n         * @type {boolean}\n         * @private\n         */\n        _this.stopClick_ = !!options.stopClick;\n        /**\n         * The number of points that must be drawn before a polygon ring or line\n         * string can be finished.  The default is 3 for polygon rings and 2 for\n         * line strings.\n         * @type {number}\n         * @private\n         */\n        _this.minPoints_ = options.minPoints\n            ? options.minPoints\n            : _this.mode_ === Mode.POLYGON\n                ? 3\n                : 2;\n        /**\n         * The number of points that can be drawn before a polygon ring or line string\n         * is finished. The default is no restriction.\n         * @type {number}\n         * @private\n         */\n        _this.maxPoints_ =\n            _this.mode_ === Mode.CIRCLE\n                ? 2\n                : options.maxPoints\n                    ? options.maxPoints\n                    : Infinity;\n        /**\n         * A function to decide if a potential finish coordinate is permissible\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.finishCondition_ = options.finishCondition\n            ? options.finishCondition\n            : TRUE;\n        var geometryFunction = options.geometryFunction;\n        if (!geometryFunction) {\n            var mode_1 = _this.mode_;\n            if (mode_1 === Mode.CIRCLE) {\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n                 * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, geometry, projection) {\n                    var circle = geometry\n                        ? /** @type {Circle} */ (geometry)\n                        : new Circle([NaN, NaN]);\n                    var center = fromUserCoordinate(coordinates[0], projection);\n                    var squaredLength = squaredCoordinateDistance(center, fromUserCoordinate(coordinates[coordinates.length - 1], projection));\n                    circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\n                    var userProjection = getUserProjection();\n                    if (userProjection) {\n                        circle.transform(projection, userProjection);\n                    }\n                    return circle;\n                };\n            }\n            else {\n                var Constructor_1;\n                if (mode_1 === Mode.POINT) {\n                    Constructor_1 = Point;\n                }\n                else if (mode_1 === Mode.LINE_STRING) {\n                    Constructor_1 = LineString;\n                }\n                else if (mode_1 === Mode.POLYGON) {\n                    Constructor_1 = Polygon;\n                }\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n                 * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, geometry, projection) {\n                    if (geometry) {\n                        if (mode_1 === Mode.POLYGON) {\n                            if (coordinates[0].length) {\n                                // Add a closing coordinate to match the first\n                                geometry.setCoordinates([\n                                    coordinates[0].concat([coordinates[0][0]]),\n                                ]);\n                            }\n                            else {\n                                geometry.setCoordinates([]);\n                            }\n                        }\n                        else {\n                            geometry.setCoordinates(coordinates);\n                        }\n                    }\n                    else {\n                        geometry = new Constructor_1(coordinates);\n                    }\n                    return geometry;\n                };\n            }\n        }\n        /**\n         * @type {GeometryFunction}\n         * @private\n         */\n        _this.geometryFunction_ = geometryFunction;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.dragVertexDelay_ =\n            options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n        /**\n         * Finish coordinate for the feature (first point for polygons, last point for\n         * linestrings).\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.finishCoordinate_ = null;\n        /**\n         * Sketch feature.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchFeature_ = null;\n        /**\n         * Sketch point.\n         * @type {Feature<Point>}\n         * @private\n         */\n        _this.sketchPoint_ = null;\n        /**\n         * Sketch coordinates. Used when drawing a line or polygon.\n         * @type {SketchCoordType}\n         * @private\n         */\n        _this.sketchCoords_ = null;\n        /**\n         * Sketch line. Used when drawing polygon.\n         * @type {Feature<LineString>}\n         * @private\n         */\n        _this.sketchLine_ = null;\n        /**\n         * Sketch line coordinates. Used when drawing a polygon or circle.\n         * @type {LineCoordType}\n         * @private\n         */\n        _this.sketchLineCoords_ = null;\n        /**\n         * Squared tolerance for handling up events.  If the squared distance\n         * between a down and up event is greater than this tolerance, up events\n         * will not be handled.\n         * @type {number}\n         * @private\n         */\n        _this.squaredClickTolerance_ = options.clickTolerance\n            ? options.clickTolerance * options.clickTolerance\n            : 36;\n        /**\n         * Draw overlay where our sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: options.wrapX ? options.wrapX : false,\n            }),\n            style: options.style ? options.style : getDefaultStyleFunction(),\n            updateWhileInteracting: true,\n        });\n        /**\n         * Name of the geometry attribute for newly created features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.freehandCondition_;\n        if (options.freehand) {\n            _this.freehandCondition_ = always;\n        }\n        else {\n            _this.freehandCondition_ = options.freehandCondition\n                ? options.freehandCondition\n                : shiftKeyOnly;\n        }\n        _this.addEventListener(getChangeEventType(InteractionProperty.ACTIVE), _this.updateState_);\n        return _this;\n    }\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Draw.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        this.updateState_();\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Draw.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Draw.prototype.handleEvent = function (event) {\n        if (event.originalEvent.type === EventType.CONTEXTMENU) {\n            // Avoid context menu for long taps when drawing on mobile\n            event.originalEvent.preventDefault();\n        }\n        this.freehand_ =\n            this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n        var move = event.type === MapBrowserEventType.POINTERMOVE;\n        var pass = true;\n        if (!this.freehand_ &&\n            this.lastDragTime_ &&\n            event.type === MapBrowserEventType.POINTERDRAG) {\n            var now = Date.now();\n            if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n                this.downPx_ = event.pixel;\n                this.shouldHandle_ = !this.freehand_;\n                move = true;\n            }\n            else {\n                this.lastDragTime_ = undefined;\n            }\n            if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n                clearTimeout(this.downTimeout_);\n                this.downTimeout_ = undefined;\n            }\n        }\n        if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDRAG &&\n            this.sketchFeature_ !== null) {\n            this.addToDrawing_(event.coordinate);\n            pass = false;\n        }\n        else if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDOWN) {\n            pass = false;\n        }\n        else if (move && this.getPointerCount() < 2) {\n            pass = event.type === MapBrowserEventType.POINTERMOVE;\n            if (pass && this.freehand_) {\n                this.handlePointerMove_(event);\n                if (this.shouldHandle_) {\n                    // Avoid page scrolling when freehand drawing on mobile\n                    event.originalEvent.preventDefault();\n                }\n            }\n            else if (event.originalEvent.pointerType === 'mouse' ||\n                (event.type === MapBrowserEventType.POINTERDRAG &&\n                    this.downTimeout_ === undefined)) {\n                this.handlePointerMove_(event);\n            }\n        }\n        else if (event.type === MapBrowserEventType.DBLCLICK) {\n            pass = false;\n        }\n        return _super.prototype.handleEvent.call(this, event) && pass;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Draw.prototype.handleDownEvent = function (event) {\n        this.shouldHandle_ = !this.freehand_;\n        if (this.freehand_) {\n            this.downPx_ = event.pixel;\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event.coordinate);\n            }\n            return true;\n        }\n        else if (this.condition_(event)) {\n            this.lastDragTime_ = Date.now();\n            this.downTimeout_ = setTimeout(function () {\n                this.handlePointerMove_(new MapBrowserEvent(MapBrowserEventType.POINTERMOVE, event.map, event.originalEvent, false, event.frameState));\n            }.bind(this), this.dragVertexDelay_);\n            this.downPx_ = event.pixel;\n            return true;\n        }\n        else {\n            this.lastDragTime_ = undefined;\n            return false;\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Draw.prototype.handleUpEvent = function (event) {\n        var pass = true;\n        if (this.getPointerCount() === 0) {\n            if (this.downTimeout_) {\n                clearTimeout(this.downTimeout_);\n                this.downTimeout_ = undefined;\n            }\n            this.handlePointerMove_(event);\n            if (this.shouldHandle_) {\n                switch (true) {\n                    case !this.finishCoordinate_:\n                        this.startDrawing_(event.coordinate);\n                        if (this.mode_ !== Mode.POINT) {\n                            break;\n                        }\n                    // eslint-disable-next-line no-fallthrough\n                    case this.freehand_ ||\n                        (this.atFinish_(event.pixel) && this.finishCondition_(event)):\n                        this.finishDrawing();\n                        break;\n                    case !this.freehand_:\n                        this.addToDrawing_(event.coordinate);\n                        break;\n                    default:\n                        break;\n                }\n                pass = false;\n            }\n            else if (this.freehand_) {\n                this.abortDrawing();\n            }\n        }\n        if (!pass && this.stopClick_) {\n            event.originalEvent.stopPropagation();\n        }\n        return pass;\n    };\n    /**\n     * Handle move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n     * @private\n     */\n    Draw.prototype.handlePointerMove_ = function (event) {\n        this.pointerType_ = event.originalEvent.pointerType;\n        if (this.downPx_ &&\n            ((!this.freehand_ && this.shouldHandle_) ||\n                (this.freehand_ && !this.shouldHandle_))) {\n            var downPx = this.downPx_;\n            var clickPx = event.pixel;\n            var dx = downPx[0] - clickPx[0];\n            var dy = downPx[1] - clickPx[1];\n            var squaredDistance = dx * dx + dy * dy;\n            this.shouldHandle_ = this.freehand_\n                ? squaredDistance > this.squaredClickTolerance_\n                : squaredDistance <= this.squaredClickTolerance_;\n            if (!this.shouldHandle_) {\n                return;\n            }\n        }\n        if (this.finishCoordinate_) {\n            this.modifyDrawing_(event.coordinate);\n        }\n        else {\n            this.createOrUpdateSketchPoint_(event);\n        }\n    };\n    /**\n     * Determine if an event is within the snapping tolerance of the start coord.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {boolean} The event is within the snapping tolerance of the start.\n     * @private\n     */\n    Draw.prototype.atFinish_ = function (pixel) {\n        var at = false;\n        if (this.sketchFeature_) {\n            var potentiallyDone = false;\n            var potentiallyFinishCoordinates = [this.finishCoordinate_];\n            var mode = this.mode_;\n            if (mode === Mode.POINT) {\n                at = true;\n            }\n            else if (mode === Mode.CIRCLE) {\n                at = this.sketchCoords_.length === 2;\n            }\n            else if (mode === Mode.LINE_STRING) {\n                potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n            }\n            else if (mode === Mode.POLYGON) {\n                var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n                potentiallyDone = sketchCoords[0].length > this.minPoints_;\n                potentiallyFinishCoordinates = [\n                    sketchCoords[0][0],\n                    sketchCoords[0][sketchCoords[0].length - 2],\n                ];\n            }\n            if (potentiallyDone) {\n                var map = this.getMap();\n                for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n                    var finishCoordinate = potentiallyFinishCoordinates[i];\n                    var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n                    var dx = pixel[0] - finishPixel[0];\n                    var dy = pixel[1] - finishPixel[1];\n                    var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n                    at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n                    if (at) {\n                        this.finishCoordinate_ = finishCoordinate;\n                        break;\n                    }\n                }\n            }\n        }\n        return at;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.createOrUpdateSketchPoint_ = function (event) {\n        var coordinates = event.coordinate.slice();\n        if (!this.sketchPoint_) {\n            this.sketchPoint_ = new Feature(new Point(coordinates));\n            this.updateSketchFeatures_();\n        }\n        else {\n            var sketchPointGeom = this.sketchPoint_.getGeometry();\n            sketchPointGeom.setCoordinates(coordinates);\n        }\n    };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n     * @private\n     */\n    Draw.prototype.createOrUpdateCustomSketchLine_ = function (geometry) {\n        if (!this.sketchLine_) {\n            this.sketchLine_ = new Feature();\n        }\n        var ring = geometry.getLinearRing(0);\n        var sketchLineGeom = this.sketchLine_.getGeometry();\n        if (!sketchLineGeom) {\n            sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n            this.sketchLine_.setGeometry(sketchLineGeom);\n        }\n        else {\n            sketchLineGeom.setFlatCoordinates(ring.getLayout(), ring.getFlatCoordinates());\n            sketchLineGeom.changed();\n        }\n    };\n    /**\n     * Start the drawing.\n     * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n     * @private\n     */\n    Draw.prototype.startDrawing_ = function (start) {\n        var projection = this.getMap().getView().getProjection();\n        this.finishCoordinate_ = start;\n        if (this.mode_ === Mode.POINT) {\n            this.sketchCoords_ = start.slice();\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            this.sketchCoords_ = [[start.slice(), start.slice()]];\n            this.sketchLineCoords_ = this.sketchCoords_[0];\n        }\n        else {\n            this.sketchCoords_ = [start.slice(), start.slice()];\n        }\n        if (this.sketchLineCoords_) {\n            this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n        }\n        var geometry = this.geometryFunction_(this.sketchCoords_, undefined, projection);\n        this.sketchFeature_ = new Feature();\n        if (this.geometryName_) {\n            this.sketchFeature_.setGeometryName(this.geometryName_);\n        }\n        this.sketchFeature_.setGeometry(geometry);\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Modify the drawing.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @private\n     */\n    Draw.prototype.modifyDrawing_ = function (coordinate) {\n        var map = this.getMap();\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = map.getView().getProjection();\n        var coordinates, last;\n        if (this.mode_ === Mode.POINT) {\n            last = this.sketchCoords_;\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            last = coordinates[coordinates.length - 1];\n            if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n                // snap to finish\n                coordinate = this.finishCoordinate_.slice();\n            }\n        }\n        else {\n            coordinates = this.sketchCoords_;\n            last = coordinates[coordinates.length - 1];\n        }\n        last[0] = coordinate[0];\n        last[1] = coordinate[1];\n        this.geometryFunction_(\n        /** @type {!LineCoordType} */ (this.sketchCoords_), geometry, projection);\n        if (this.sketchPoint_) {\n            var sketchPointGeom = this.sketchPoint_.getGeometry();\n            sketchPointGeom.setCoordinates(coordinate);\n        }\n        if (geometry.getType() === GeometryType.POLYGON &&\n            this.mode_ !== Mode.POLYGON) {\n            this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n        }\n        else if (this.sketchLineCoords_) {\n            var sketchLineGeom = this.sketchLine_.getGeometry();\n            sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Add a new coordinate to the drawing.\n     * @param {!PointCoordType} coordinate Coordinate\n     * @private\n     */\n    Draw.prototype.addToDrawing_ = function (coordinate) {\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        var done;\n        var coordinates;\n        var mode = this.mode_;\n        if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n            this.finishCoordinate_ = coordinate.slice();\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            this.geometryFunction_(coordinates, geometry, projection);\n        }\n        else if (mode === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            if (done) {\n                this.finishCoordinate_ = coordinates[0];\n            }\n            this.geometryFunction_(this.sketchCoords_, geometry, projection);\n        }\n        this.updateSketchFeatures_();\n        if (done) {\n            this.finishDrawing();\n        }\n    };\n    /**\n     * Remove last point of the feature currently being drawn. Does not do anything when\n     * drawing POINT or MULTI_POINT geometries.\n     * @api\n     */\n    Draw.prototype.removeLastPoint = function () {\n        if (!this.sketchFeature_) {\n            return;\n        }\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        var coordinates;\n        var mode = this.mode_;\n        if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            coordinates.splice(-2, 1);\n            if (coordinates.length >= 2) {\n                this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n                var finishCoordinate = this.finishCoordinate_.slice();\n                coordinates[coordinates.length - 1] = finishCoordinate;\n                this.sketchPoint_.setGeometry(new Point(finishCoordinate));\n            }\n            this.geometryFunction_(coordinates, geometry, projection);\n            if (geometry.getType() === GeometryType.POLYGON && this.sketchLine_) {\n                this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n            }\n        }\n        else if (mode === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            coordinates.splice(-2, 1);\n            var sketchLineGeom = this.sketchLine_.getGeometry();\n            if (coordinates.length >= 2) {\n                var finishCoordinate = coordinates[coordinates.length - 2].slice();\n                coordinates[coordinates.length - 1] = finishCoordinate;\n                this.sketchPoint_.setGeometry(new Point(finishCoordinate));\n            }\n            sketchLineGeom.setCoordinates(coordinates);\n            this.geometryFunction_(this.sketchCoords_, geometry, projection);\n        }\n        if (coordinates.length === 1) {\n            this.abortDrawing();\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Stop drawing and add the sketch feature to the target layer.\n     * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n     * dispatched before inserting the feature.\n     * @api\n     */\n    Draw.prototype.finishDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (!sketchFeature) {\n            return;\n        }\n        var coordinates = this.sketchCoords_;\n        var geometry = sketchFeature.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        if (this.mode_ === Mode.LINE_STRING) {\n            // remove the redundant last point\n            coordinates.pop();\n            this.geometryFunction_(coordinates, geometry, projection);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            // remove the redundant last point in ring\n            /** @type {PolyCoordType} */ (coordinates)[0].pop();\n            this.geometryFunction_(coordinates, geometry, projection);\n            coordinates = geometry.getCoordinates();\n        }\n        // cast multi-part geometries\n        if (this.type_ === GeometryType.MULTI_POINT) {\n            sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n            sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_POLYGON) {\n            sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]));\n        }\n        // First dispatch event to allow full set up of feature\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n        // Then insert feature\n        if (this.features_) {\n            this.features_.push(sketchFeature);\n        }\n        if (this.source_) {\n            this.source_.addFeature(sketchFeature);\n        }\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @return {Feature} The sketch feature (or null if none).\n     * @private\n     */\n    Draw.prototype.abortDrawing_ = function () {\n        this.finishCoordinate_ = null;\n        var sketchFeature = this.sketchFeature_;\n        this.sketchFeature_ = null;\n        this.sketchPoint_ = null;\n        this.sketchLine_ = null;\n        this.overlay_.getSource().clear(true);\n        return sketchFeature;\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @api\n     */\n    Draw.prototype.abortDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (sketchFeature) {\n            this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n        }\n    };\n    /**\n     * Append coordinates to the end of the geometry that is currently being drawn.\n     * This can be used when drawing LineStrings or Polygons. Coordinates will\n     * either be appended to the current LineString or the outer ring of the current\n     * Polygon. If no geometry is being drawn, a new one will be created.\n     * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n     * the coordinate array.\n     * @api\n     */\n    Draw.prototype.appendCoordinates = function (coordinates) {\n        var mode = this.mode_;\n        var newDrawing = !this.sketchFeature_;\n        if (newDrawing) {\n            this.startDrawing_(coordinates[0]);\n        }\n        /** @type {LineCoordType} */\n        var sketchCoords;\n        if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n            sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n        }\n        else if (mode === Mode.POLYGON) {\n            sketchCoords =\n                this.sketchCoords_ && this.sketchCoords_.length\n                    ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n                    : [];\n        }\n        else {\n            return;\n        }\n        if (newDrawing) {\n            sketchCoords.shift();\n        }\n        // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n        sketchCoords.pop();\n        // Append coordinate list\n        for (var i = 0; i < coordinates.length; i++) {\n            this.addToDrawing_(coordinates[i]);\n        }\n        var ending = coordinates[coordinates.length - 1];\n        // Duplicate last coordinate for sketch drawing (cursor position)\n        this.addToDrawing_(ending);\n        this.modifyDrawing_(ending);\n    };\n    /**\n     * Initiate draw mode by starting from an existing geometry which will\n     * receive new additional points. This only works on features with\n     * `LineString` geometries, where the interaction will extend lines by adding\n     * points to the end of the coordinates array.\n     * This will change the original feature, instead of drawing a copy.\n     *\n     * The function will dispatch a `drawstart` event.\n     *\n     * @param {!Feature<LineString>} feature Feature to be extended.\n     * @api\n     */\n    Draw.prototype.extend = function (feature) {\n        var geometry = feature.getGeometry();\n        var lineString = geometry;\n        this.sketchFeature_ = feature;\n        this.sketchCoords_ = lineString.getCoordinates();\n        var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n        this.finishCoordinate_ = last.slice();\n        this.sketchCoords_.push(last.slice());\n        this.sketchPoint_ = new Feature(new Point(last));\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Redraw the sketch features.\n     * @private\n     */\n    Draw.prototype.updateSketchFeatures_ = function () {\n        var sketchFeatures = [];\n        if (this.sketchFeature_) {\n            sketchFeatures.push(this.sketchFeature_);\n        }\n        if (this.sketchLine_) {\n            sketchFeatures.push(this.sketchLine_);\n        }\n        if (this.sketchPoint_) {\n            sketchFeatures.push(this.sketchPoint_);\n        }\n        var overlaySource = this.overlay_.getSource();\n        overlaySource.clear(true);\n        overlaySource.addFeatures(sketchFeatures);\n    };\n    /**\n     * @private\n     */\n    Draw.prototype.updateState_ = function () {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            this.abortDrawing();\n        }\n        this.overlay_.setMap(active ? map : null);\n    };\n    return Draw;\n}(PointerInteraction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    return function (feature, resolution) {\n        return styles[feature.getGeometry().getType()];\n    };\n}\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number=} opt_angle Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n    return function (coordinates, opt_geometry, projection) {\n        var center = fromUserCoordinate(\n        /** @type {LineCoordType} */ (coordinates)[0], projection);\n        var end = fromUserCoordinate(\n        /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1], projection);\n        var radius = Math.sqrt(squaredCoordinateDistance(center, end));\n        var geometry = opt_geometry\n            ? /** @type {Polygon} */ (opt_geometry)\n            : fromCircle(new Circle(center), opt_sides);\n        var angle = opt_angle;\n        if (!opt_angle && opt_angle !== 0) {\n            var x = end[0] - center[0];\n            var y = end[1] - center[1];\n            angle = Math.atan2(y, x);\n        }\n        makeRegular(geometry, center, radius, angle);\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            geometry.transform(projection, userProjection);\n        }\n        return geometry;\n    };\n}\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n    return function (coordinates, opt_geometry, projection) {\n        var extent = boundingExtent(\n        /** @type {LineCoordType} */ ([\n            coordinates[0],\n            coordinates[coordinates.length - 1],\n        ]).map(function (coordinate) {\n            return fromUserCoordinate(coordinate, projection);\n        }));\n        var boxCoordinates = [\n            [\n                getBottomLeft(extent),\n                getBottomRight(extent),\n                getTopRight(extent),\n                getTopLeft(extent),\n                getBottomLeft(extent),\n            ],\n        ];\n        var geometry = opt_geometry;\n        if (geometry) {\n            geometry.setCoordinates(boxCoordinates);\n        }\n        else {\n            geometry = new Polygon(boxCoordinates);\n        }\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            geometry.transform(projection, userProjection);\n        }\n        return geometry;\n    };\n}\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n    var mode;\n    if (type === GeometryType.POINT || type === GeometryType.MULTI_POINT) {\n        mode = Mode.POINT;\n    }\n    else if (type === GeometryType.LINE_STRING ||\n        type === GeometryType.MULTI_LINE_STRING) {\n        mode = Mode.LINE_STRING;\n    }\n    else if (type === GeometryType.POLYGON ||\n        type === GeometryType.MULTI_POLYGON) {\n        mode = Mode.POLYGON;\n    }\n    else if (type === GeometryType.CIRCLE) {\n        mode = Mode.CIRCLE;\n    }\n    return /** @type {!Mode} */ (mode);\n}\nexport default Draw;\n//# sourceMappingURL=Draw.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active',\n};\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment, } from '../../extent.js';\nimport { forEach as forEachSegment } from './segments.js';\nimport { linearRingContainsExtent, linearRingContainsXY } from './contains.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family',\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal',\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n//# sourceMappingURL=css.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../render/canvas.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: options.scale !== undefined ? options.scale : 1,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ =\n            options.radius !== undefined ? options.radius : options.radius1;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @return {HTMLCanvasElement} Image element.\n     */\n    RegularShape.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionCanvas_) {\n            var renderOptions = this.createRenderOptions();\n            this.createHitDetectionCanvas_(renderOptions);\n        }\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        if (!this.canvas_[pixelRatio || 1]) {\n            var renderOptions = this.createRenderOptions();\n            var context = createCanvasContext2D(renderOptions.size * pixelRatio || 1, renderOptions.size * pixelRatio || 1);\n            this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n            this.canvas_[pixelRatio || 1] = context.canvas;\n        }\n        return this.canvas_[pixelRatio || 1];\n    };\n    /*\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * */\n    RegularShape.prototype.getPixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @return {import(\"../size.js\").Size} Size.\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.listenImageChange = function (listener) { };\n    /**\n     * Load not yet loaded URI.\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener) { };\n    /**\n     * @returns {RenderOptions}  The render options\n     * @protected\n     */\n    RegularShape.prototype.createRenderOptions = function () {\n        var lineCap = defaultLineCap;\n        var lineJoin = defaultLineJoin;\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        return {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit,\n        };\n    };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render = function () {\n        var renderOptions = this.createRenderOptions();\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.draw_(renderOptions, context, 0, 0, 1);\n        this.canvas_ = {};\n        this.canvas_[1] = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        var size = context.canvas.width;\n        var imageSize = size;\n        var displacement = this.getDisplacement();\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     * @param {number} pixelRatio The pixel ratio.\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y, pixelRatio) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = renderOptions.lineCap;\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionCanvas_ = this.getImage(1);\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            // determine if fill is transparent (or pattern or gradient)\n            var opacity = 0;\n            if (typeof color === 'string') {\n                color = asArray(color);\n            }\n            if (color === null) {\n                opacity = 1;\n            }\n            else if (Array.isArray(color)) {\n                opacity = color.length === 4 ? color[3] : 1;\n            }\n            if (opacity === 0) {\n                // if a transparent fill style is set, create an extra hit-detection image\n                // with a default fill style\n                var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                this.hitDetectionCanvas_ = context.canvas;\n                this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke,\n            scale: options.scale !== undefined ? options.scale : 1,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            rotateWithView: options.rotateWithView !== undefined ? options.rotateWithView : false,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {CircleStyle} The cloned style.\n     * @api\n     */\n    CircleStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n        this.render();\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @protected\n         */\n        this.disposed = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed) {\n            this.disposed = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return (this.minX <= tileRange.minX &&\n            tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY &&\n            tileRange.maxY <= this.maxY);\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return (this.minX == tileRange.minX &&\n            this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX &&\n            this.maxY == tileRange.maxY);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return (this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY);\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\nimport { toString } from '../transform.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {import(\"../size.js\").Size} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var div;\n    return function (fontSpec) {\n        var height = textHeights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                height =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!div) {\n                    div = document.createElement('div');\n                    div.innerHTML = 'M';\n                    div.style.margin = '0 !important';\n                    div.style.padding = '0 !important';\n                    div.style.position = 'absolute !important';\n                    div.style.left = '-99999px !important';\n                }\n                div.style.font = fontSpec;\n                document.body.appendChild(div);\n                height = div.offsetHeight;\n                document.body.removeChild(div);\n            }\n            textHeights[fontSpec] = height;\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nvar createTransformStringCanvas = null;\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return toString(transform);\n    }\n    else {\n        if (!createTransformStringCanvas) {\n            createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n        }\n        createTransformStringCanvas.style.transform = toString(transform);\n        return createTransformStringCanvas.style.transform;\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        _this.values_ = null;\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_ && this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return (this.values_ && Object.keys(this.values_)) || [];\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return (this.values_ && assign({}, this.values_)) || {};\n    };\n    /**\n     * @return {boolean} The object has properties.\n     */\n    BaseObject.prototype.hasProperties = function () {\n        return !!this.values_;\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        var values = this.values_ || (this.values_ = {});\n        if (opt_silent) {\n            values[key] = value;\n        }\n        else {\n            var oldValue = values[key];\n            values[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Apply any properties from another object without triggering events.\n     * @param {BaseObject} source The source object.\n     * @protected\n     */\n    BaseObject.prototype.applyProperties = function (source) {\n        if (!source.values_) {\n            return;\n        }\n        assign(this.values_ || (this.values_ = {}), source.values_);\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (this.values_ && key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (isEmpty(this.values_)) {\n                this.values_ = null;\n            }\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key)\n        ? changeEventTypeCache[key]\n        : (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number=} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { containsXY, createOrUpdateFromCoordinate } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        point.applyProperties(this);\n        return point;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle',\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    /**\n     * Degrees\n     * @api\n     */\n    DEGREES: 'degrees',\n    /**\n     * Feet\n     * @api\n     */\n    FEET: 'ft',\n    /**\n     * Meters\n     * @api\n     */\n    METERS: 'm',\n    /**\n     * Pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n    /**\n     * Tile Pixels\n     * @api\n     */\n    TILE_PIXELS: 'tile-pixels',\n    /**\n     * US Feet\n     * @api\n     */\n    USFEET: 'us-ft',\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; offset + stride < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./State.js\").default}\n         */\n        _this.state_ =\n            options.state !== undefined ? options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {import(\"./State.js\").default} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    Source.prototype.getContextOptions = function () {\n        return undefined;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./State.js\").default} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map"],"sourceRoot":""}