{"version":3,"sources":["webpack:///./node_modules/prismjs/components/prism-javascript.js","webpack:///./node_modules/prismjs/components/prism-core.js","webpack:///./src/components/Highlight/Prism.vue?47ac","webpack:///./src/components/Highlight/Prism.vue?a109","webpack:///./src/components/Highlight/Prism.vue?1e02","webpack:///./src/components/Highlight/Prism.vue?f7ac","webpack:///./src/components/Highlight/Prism.vue","webpack:///./node_modules/prismjs/components/prism-clike.js","webpack:///./node_modules/vue-prism-editor/dist/prismeditor.esm.js"],"names":["Prism","languages","javascript","extend","clike","pattern","lookbehind","insertBefore","greedy","inside","alias","regex","rest","markup","tag","addInlined","js","_self","window","WorkerGlobalScope","self","lang","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","Array","isArray","map","replace","o","Object","prototype","toString","call","slice","objId","obj","defineProperty","value","clone","deepClone","visited","id","key","hasOwnProperty","forEach","v","i","getLanguage","element","test","className","parentElement","match","toLowerCase","currentScript","document","Error","err","src","exec","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","classList","contains","redef","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","apply","querySelectorAll","highlightElement","language","parent","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","tokenList","LinkedList","addAfter","head","matchGrammar","toArray","all","add","name","push","callbacks","length","matchedStr","matchPattern","pos","lastIndex","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","global","flags","RegExp","source","currentNode","next","tail","reach","str","removeCount","from","to","p","k","matchStr","after","removeFrom","prev","removeRange","wrapped","list","node","newNode","count","array","s","e","classes","attributes","aliases","join","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","hasAttribute","readyState","defer","requestAnimationFrame","setTimeout","module","exports","render","_vm","_h","$createElement","_c","_v","_s","directives","rawName","expression","attrs","domProps","lineNumbers","_i","on","$event","$$a","$$el","target","$$c","checked","$$v","$$i","concat","staticClass","highlighter","model","staticRenderFns","components","PrismEditor","component","_extends","assign","arguments","KEYCODE_ENTER","KEYCODE_TAB","KEYCODE_BACKSPACE","KEYCODE_Y","KEYCODE_Z","KEYCODE_M","KEYCODE_PARENS","KEYCODE_BRACKETS","KEYCODE_QUOTE","KEYCODE_BACK_QUOTE","KEYCODE_ESCAPE","HISTORY_LIMIT","HISTORY_TIME_GAP","isWindows","navigator","platform","isMacLike","props","Boolean","autoStyleLineNumbers","readonly","String","Function","required","tabSize","Number","insertSpaces","ignoreTabKey","placeholder","capture","history","offset","lineNumbersHeight","codeData","watch","immediate","handler","newVal","_this","$nextTick","setLineNumbersHeight","_this2","styleLineNumbers","computed","isEmpty","result","lineNumbersCount","totalLines","split","mounted","_recordCurrentState","methods","getComputedStyle","$refs","pre","height","$editor","$lineNumbers","$el","querySelector","editorStyles","btlr","bblr","style","stylesList","input","textarea","selectionStart","selectionEnd","_recordChange","_getLines","position","substring","_applyEdits","record","last","_updateInput","overwrite","_this$history","extras","Math","max","timestamp","Date","now","_this$_getLines$pop","_this$_getLines$pop2","re","previous","pop","current","startsWith","$emit","handleChange","_e$target","_undoEdit","_this$history2","_redoEdit","_this$history3","min","handleKeyDown","$listeners","keydown","defaultPrevented","keyCode","blur","_e$target2","tabCharacter","repeat","preventDefault","shiftKey","linesBeforeCaret","startLine","endLine","nextValue","line","startLineText","_linesBeforeCaret","_startLine","_endLine","_startLineText","updatedSelection","hasSelection","textBeforeCaret","endsWith","_updatedSelection","matches","indent","_updatedSelection2","chars","metaKey","ctrlKey","altKey","h","_this3","lineNumberWidthCalculator","keys","ref","click","keyup","focus","spellCheck","autocapitalize","autocomplete","autocorrect","preview","editorContainer"],"mappings":"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","file":"js/chunk-4533cdc9.a8433549.js","sourcesContent":["Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-flags': /[a-z]+$/,\n\t\t\t'regex-delimiter': /^\\/|\\/$/\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n","/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\n\nvar _ = {\n\t/**\n\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t * additional languages or plugins yourself.\n\t *\n\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t *\n\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t * empty Prism object into the global scope before loading the Prism script like this:\n\t *\n\t * ```js\n\t * window.Prism = window.Prism || {};\n\t * Prism.manual = true;\n\t * // add a new <script> to load Prism's script\n\t * ```\n\t *\n\t * @default false\n\t * @type {boolean}\n\t * @memberof Prism\n\t * @public\n\t */\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t/**\n\t * A namespace for utility methods.\n\t *\n\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t * change or disappear at any time.\n\t *\n\t * @namespace\n\t * @memberof Prism\n\t */\n\tutil: {\n\t\tencode: function encode(tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the name of the type of the given value.\n\t\t *\n\t\t * @param {any} o\n\t\t * @returns {string}\n\t\t * @example\n\t\t * type(null)      === 'Null'\n\t\t * type(undefined) === 'Undefined'\n\t\t * type(123)       === 'Number'\n\t\t * type('foo')     === 'String'\n\t\t * type(true)      === 'Boolean'\n\t\t * type([1, 2])    === 'Array'\n\t\t * type({})        === 'Object'\n\t\t * type(String)    === 'Function'\n\t\t * type(/abc+/)    === 'RegExp'\n\t\t */\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\t/**\n\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t *\n\t\t * @param {Object} obj\n\t\t * @returns {number}\n\t\t */\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t/**\n\t\t * Creates a deep clone of the given object.\n\t\t *\n\t\t * The main intended use of this function is to clone language definitions.\n\t\t *\n\t\t * @param {T} o\n\t\t * @param {Record<number, any>} [visited]\n\t\t * @returns {T}\n\t\t * @template T\n\t\t */\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar clone, id;\n\t\t\tswitch (_.util.type(o)) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t *\n\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @returns {string}\n\t\t */\n\t\tgetLanguage: function (element) {\n\t\t\twhile (element && !lang.test(element.className)) {\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n\t\t\t}\n\t\t\treturn 'none';\n\t\t},\n\n\t\t/**\n\t\t * Returns the script element that is currently executing.\n\t\t *\n\t\t * This does __not__ work for line script element.\n\t\t *\n\t\t * @returns {HTMLScriptElement | null}\n\t\t */\n\t\tcurrentScript: function () {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t}\n\n\t\t\t// IE11 workaround\n\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t// this will not work for inline scripts\n\n\t\t\ttry {\n\t\t\t\tthrow new Error();\n\t\t\t} catch (err) {\n\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t// A stack will look like this:\n\t\t\t\t//\n\t\t\t\t// Error\n\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\tif (src) {\n\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns whether a given class is active for `element`.\n\t\t *\n\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t * given class is just the given class with a `no-` prefix.\n\t\t *\n\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t *\n\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t * version of it, the class is considered active.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @param {string} className\n\t\t * @param {boolean} [defaultActivation=false]\n\t\t * @returns {boolean}\n\t\t */\n\t\tisActive: function (element, className, defaultActivation) {\n\t\t\tvar no = 'no-' + className;\n\n\t\t\twhile (element) {\n\t\t\t\tvar classList = element.classList;\n\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\treturn !!defaultActivation;\n\t\t}\n\t},\n\n\t/**\n\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t *\n\t * @namespace\n\t * @memberof Prism\n\t * @public\n\t */\n\tlanguages: {\n\t\t/**\n\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t *\n\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t * will be overwritten at its original position.\n\t\t *\n\t\t * ## Best practices\n\t\t *\n\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t *\n\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t *\n\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t * @param {Grammar} redef The new tokens to append.\n\t\t * @returns {Grammar} The new language created.\n\t\t * @public\n\t\t * @example\n\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t *     // at its original position\n\t\t *     'comment': { ... },\n\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t * });\n\t\t */\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t *\n\t\t * ## Usage\n\t\t *\n\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t * this:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.markup.style = {\n\t\t *     // token\n\t\t * };\n\t\t * ```\n\t\t *\n\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t *     'style': {\n\t\t *         // token\n\t\t *     }\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * ## Special cases\n\t\t *\n\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t * will be ignored.\n\t\t *\n\t\t * This behavior can be used to insert tokens after `before`:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t *     'comment': Prism.languages.markup.comment,\n\t\t *     // tokens after 'comment'\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * ## Limitations\n\t\t *\n\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t *\n\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t *\n\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t *\n\t\t * ```js\n\t\t * var oldMarkup = Prism.languages.markup;\n\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t *\n\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t * ```\n\t\t *\n\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t * object to be modified.\n\t\t * @param {string} before The key to insert before.\n\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t * object to be modified.\n\t\t *\n\t\t * Defaults to `Prism.languages`.\n\t\t * @returns {Grammar} The new grammar object.\n\t\t * @public\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\tvar grammar = root[inside];\n\t\t\t/** @type {Grammar} */\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tplugins: {},\n\n\t/**\n\t * This is the most high-level function in Prism’s API.\n\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t * each one of them.\n\t *\n\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t *\n\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\t/**\n\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t * {@link Prism.highlightElement} on each one of them.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-highlightall`\n\t * 2. `before-all-elements-highlight`\n\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t *\n\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tcontainer: container,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run('before-highlightall', env);\n\n\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\tfor (var i = 0, element; element = env.elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\t/**\n\t * Highlights the code inside a single element.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-sanity-check`\n\t * 2. `before-highlight`\n\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t * 4. `before-insert`\n\t * 5. `after-highlight`\n\t * 6. `complete`\n\t *\n\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t * the element's language.\n\t *\n\t * @param {Element} element The element containing the code.\n\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t *\n\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t * asynchronous highlighting to work. You can build your own bundle on the\n\t * [Download page](https://prismjs.com/download.html).\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language = _.util.getLanguage(element);\n\t\tvar grammar = _.languages[language];\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tvar parent = element.parentElement;\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\t/**\n\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t * and the language definitions to use, and returns a string with the HTML produced.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-tokenize`\n\t * 2. `after-tokenize`\n\t * 3. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string} text A string with the code to be highlighted.\n\t * @param {Grammar} grammar An object containing the tokens to use.\n\t *\n\t * Usually a language definition like `Prism.languages.markup`.\n\t * @param {string} language The name of the language definition passed to `grammar`.\n\t * @returns {string} The highlighted HTML.\n\t * @memberof Prism\n\t * @public\n\t * @example\n\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t */\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\t/**\n\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t * and the language definitions to use, and returns an array with the tokenized code.\n\t *\n\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t *\n\t * This method could be useful in other contexts as well, as a very crude parser.\n\t *\n\t * @param {string} text A string with the code to be highlighted.\n\t * @param {Grammar} grammar An object containing the tokens to use.\n\t *\n\t * Usually a language definition like `Prism.languages.markup`.\n\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t * @memberof Prism\n\t * @public\n\t * @example\n\t * let code = `var foo = 0;`;\n\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t * tokens.forEach(token => {\n\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t *         console.log(`Found numeric literal: ${token.content}`);\n\t *     }\n\t * });\n\t */\n\ttokenize: function(text, grammar) {\n\t\tvar rest = grammar.rest;\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\tvar tokenList = new LinkedList();\n\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\treturn toArray(tokenList);\n\t},\n\n\t/**\n\t * @namespace\n\t * @memberof Prism\n\t * @public\n\t */\n\thooks: {\n\t\tall: {},\n\n\t\t/**\n\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t *\n\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t *\n\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t *\n\t\t * @param {string} name The name of the hook.\n\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t * @public\n\t\t */\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\t/**\n\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t *\n\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t *\n\t\t * @param {string} name The name of the hook.\n\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t * @public\n\t\t */\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n_self.Prism = _;\n\n\n// Typescript note:\n// The following can be used to import the Token type in JSDoc:\n//\n//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n/**\n * Creates a new token.\n *\n * @param {string} type See {@link Token#type type}\n * @param {string | TokenStream} content See {@link Token#content content}\n * @param {string|string[]} [alias] The alias(es) of the token.\n * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n * @class\n * @global\n * @public\n */\nfunction Token(type, content, alias, matchedStr) {\n\t/**\n\t * The type of the token.\n\t *\n\t * This is usually the key of a pattern in a {@link Grammar}.\n\t *\n\t * @type {string}\n\t * @see GrammarToken\n\t * @public\n\t */\n\tthis.type = type;\n\t/**\n\t * The strings or tokens contained by this token.\n\t *\n\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t *\n\t * @type {string | TokenStream}\n\t * @public\n\t */\n\tthis.content = content;\n\t/**\n\t * The alias(es) of the token.\n\t *\n\t * @type {string|string[]}\n\t * @see GrammarToken\n\t * @public\n\t */\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || '').length | 0;\n}\n\n/**\n * A token stream is an array of strings and {@link Token Token} objects.\n *\n * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n * them.\n *\n * 1. No adjacent strings.\n * 2. No empty strings.\n *\n *    The only exception here is the token stream that only contains the empty string and nothing else.\n *\n * @typedef {Array<string | Token>} TokenStream\n * @global\n * @public\n */\n\n/**\n * Converts the given token or token stream to an HTML representation.\n *\n * The following hooks will be run:\n * 1. `wrap`: On each {@link Token}.\n *\n * @param {string | Token | TokenStream} o The token or token stream to be converted.\n * @param {string} language The name of current language.\n * @returns {string} The HTML representation of the token or token stream.\n * @memberof Token\n * @static\n */\nToken.stringify = function stringify(o, language) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\tif (Array.isArray(o)) {\n\t\tvar s = '';\n\t\to.forEach(function (e) {\n\t\t\ts += stringify(e, language);\n\t\t});\n\t\treturn s;\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: stringify(o.content, language),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language\n\t};\n\n\tvar aliases = o.alias;\n\tif (aliases) {\n\t\tif (Array.isArray(aliases)) {\n\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t} else {\n\t\t\tenv.classes.push(aliases);\n\t\t}\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = '';\n\tfor (var name in env.attributes) {\n\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n};\n\n/**\n * @param {RegExp} pattern\n * @param {number} pos\n * @param {string} text\n * @param {boolean} lookbehind\n * @returns {RegExpExecArray | null}\n */\nfunction matchPattern(pattern, pos, text, lookbehind) {\n\tpattern.lastIndex = pos;\n\tvar match = pattern.exec(text);\n\tif (match && lookbehind && match[1]) {\n\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\tvar lookbehindLength = match[1].length;\n\t\tmatch.index += lookbehindLength;\n\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t}\n\treturn match;\n}\n\n/**\n * @param {string} text\n * @param {LinkedList<string | Token>} tokenList\n * @param {any} grammar\n * @param {LinkedListNode<string | Token>} startNode\n * @param {number} startPos\n * @param {RematchOptions} [rematch]\n * @returns {void}\n * @private\n *\n * @typedef RematchOptions\n * @property {string} cause\n * @property {number} reach\n */\nfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\tfor (var token in grammar) {\n\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar patterns = grammar[token];\n\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patternObj = patterns[j],\n\t\t\t\tinside = patternObj.inside,\n\t\t\t\tlookbehind = !!patternObj.lookbehind,\n\t\t\t\tgreedy = !!patternObj.greedy,\n\t\t\t\talias = patternObj.alias;\n\n\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t}\n\n\t\t\t/** @type {RegExp} */\n\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t) {\n\n\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\tvar match;\n\n\t\t\t\tif (greedy) {\n\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t}\n\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\tpos = p;\n\n\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\tfor (\n\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\tk = k.next\n\t\t\t\t\t) {\n\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t}\n\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t// replace with the new match\n\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t} else {\n\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar from = match.index,\n\t\t\t\t\tmatchStr = match[0],\n\t\t\t\t\tbefore = str.slice(0, from),\n\t\t\t\t\tafter = str.slice(from + matchStr.length);\n\n\t\t\t\tvar reach = pos + str.length;\n\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\trematch.reach = reach;\n\t\t\t\t}\n\n\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\tif (before) {\n\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\tpos += before.length;\n\t\t\t\t}\n\n\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\tif (after) {\n\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t}\n\n\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t// this can only happen if the current pattern is greedy\n\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, {\n\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\treach: reach\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @typedef LinkedListNode\n * @property {T} value\n * @property {LinkedListNode<T> | null} prev The previous node.\n * @property {LinkedListNode<T> | null} next The next node.\n * @template T\n * @private\n */\n\n/**\n * @template T\n * @private\n */\nfunction LinkedList() {\n\t/** @type {LinkedListNode<T>} */\n\tvar head = { value: null, prev: null, next: null };\n\t/** @type {LinkedListNode<T>} */\n\tvar tail = { value: null, prev: head, next: null };\n\thead.next = tail;\n\n\t/** @type {LinkedListNode<T>} */\n\tthis.head = head;\n\t/** @type {LinkedListNode<T>} */\n\tthis.tail = tail;\n\tthis.length = 0;\n}\n\n/**\n * Adds a new node with the given value to the list.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {T} value\n * @returns {LinkedListNode<T>} The added node.\n * @template T\n */\nfunction addAfter(list, node, value) {\n\t// assumes that node != list.tail && values.length >= 0\n\tvar next = node.next;\n\n\tvar newNode = { value: value, prev: node, next: next };\n\tnode.next = newNode;\n\tnext.prev = newNode;\n\tlist.length++;\n\n\treturn newNode;\n}\n/**\n * Removes `count` nodes after the given node. The given node will not be removed.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {number} count\n * @template T\n */\nfunction removeRange(list, node, count) {\n\tvar next = node.next;\n\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\tnext = next.next;\n\t}\n\tnode.next = next;\n\tnext.prev = node;\n\tlist.length -= i;\n}\n/**\n * @param {LinkedList<T>} list\n * @returns {T[]}\n * @template T\n */\nfunction toArray(list) {\n\tvar array = [];\n\tvar node = list.head.next;\n\twhile (node !== list.tail) {\n\t\tarray.push(node.value);\n\t\tnode = node.next;\n\t}\n\treturn array;\n}\n\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n// Get current script and highlight\nvar script = _.util.currentScript();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (script.hasAttribute('data-manual')) {\n\t\t_.manual = true;\n\t}\n}\n\nfunction highlightAutomaticallyCallback() {\n\tif (!_.manual) {\n\t\t_.highlightAll();\n\t}\n}\n\nif (!_.manual) {\n\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t// See https://github.com/PrismJS/prism/issues/2102\n\tvar readyState = document.readyState;\n\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t} else {\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n*/\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n*/\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Prism.vue?vue&type=style&index=0&id=0804480a&scoped=true&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h1',[_vm._v(\"Vue Prism Editor\")]),_c('pre',[_vm._v(_vm._s(_vm.code))]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.lineNumbers),expression:\"lineNumbers\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.lineNumbers)?_vm._i(_vm.lineNumbers,null)>-1:(_vm.lineNumbers)},on:{\"change\":function($event){var $$a=_vm.lineNumbers,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.lineNumbers=$$a.concat([$$v]))}else{$$i>-1&&(_vm.lineNumbers=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.lineNumbers=$$c}}}}),_vm._v(\" Linenumbers \"),_c('prism-editor',{staticClass:\"my-editor height-300\",attrs:{\"highlight\":_vm.highlighter,\"line-numbers\":_vm.lineNumbers},model:{value:(_vm.code),callback:function ($$v) {_vm.code=$$v},expression:\"code\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from 'vue-property-decorator'\r\nimport { PrismEditor } from 'vue-prism-editor'\r\nimport 'vue-prism-editor/dist/prismeditor.min.css'\r\n\r\nimport { highlight, languages } from 'prismjs/components/prism-core'\r\nimport 'prismjs/components/prism-clike'\r\nimport 'prismjs/components/prism-javascript'\r\nimport 'prismjs/themes/prism-tomorrow.css'\r\n\r\n@Component({\r\n  components: {\r\n    PrismEditor\r\n  }\r\n})\r\nexport default class ComponentTemplate extends Vue {\r\n  private lineNumbers: boolean = true\r\n  private code: string = 'console.log(\"Hello World\")'\r\n\r\n  private highlighter(code: string) {\r\n    return highlight(code, languages.js)\r\n  }\r\n}\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Prism.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Prism.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Prism.vue?vue&type=template&id=0804480a&scoped=true&\"\nimport script from \"./Prism.vue?vue&type=script&lang=ts&\"\nexport * from \"./Prism.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Prism.vue?vue&type=style&index=0&id=0804480a&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0804480a\",\n  null\n  \n)\n\nexport default component.exports","Prism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n","import Vue from 'vue';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar KEYCODE_ENTER = 13;\nvar KEYCODE_TAB = 9;\nvar KEYCODE_BACKSPACE = 8;\nvar KEYCODE_Y = 89;\nvar KEYCODE_Z = 90;\nvar KEYCODE_M = 77;\nvar KEYCODE_PARENS = 57;\nvar KEYCODE_BRACKETS = 219;\nvar KEYCODE_QUOTE = 222;\nvar KEYCODE_BACK_QUOTE = 192;\nvar KEYCODE_ESCAPE = 27;\nvar HISTORY_LIMIT = 100;\nvar HISTORY_TIME_GAP = 3000;\nvar isWindows = 'navigator' in global && /*#__PURE__*/ /Win/i.test(navigator.platform);\nvar isMacLike = 'navigator' in global && /*#__PURE__*/ /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\nvar PrismEditor = /*#__PURE__*/Vue.extend({\n  props: {\n    lineNumbers: {\n      type: Boolean,\n      \"default\": false\n    },\n    autoStyleLineNumbers: {\n      type: Boolean,\n      \"default\": true\n    },\n    readonly: {\n      type: Boolean,\n      \"default\": false\n    },\n    value: {\n      type: String,\n      \"default\": ''\n    },\n    highlight: {\n      type: Function,\n      required: true\n    },\n    tabSize: {\n      type: Number,\n      \"default\": 2\n    },\n    insertSpaces: {\n      type: Boolean,\n      \"default\": true\n    },\n    ignoreTabKey: {\n      type: Boolean,\n      \"default\": false\n    },\n    placeholder: {\n      type: String,\n      \"default\": ''\n    }\n  },\n  data: function data() {\n    return {\n      capture: true,\n      history: {\n        stack: [],\n        offset: -1\n      },\n      lineNumbersHeight: '20px',\n      codeData: ''\n    };\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler: function handler(newVal) {\n        if (!newVal) {\n          this.codeData = '';\n        } else {\n          this.codeData = newVal;\n        }\n      }\n    },\n    content: {\n      immediate: true,\n      handler: function handler() {\n        var _this = this;\n\n        if (this.lineNumbers) {\n          this.$nextTick(function () {\n            _this.setLineNumbersHeight();\n          });\n        }\n      }\n    },\n    lineNumbers: function lineNumbers() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        _this2.styleLineNumbers();\n\n        _this2.setLineNumbersHeight();\n      });\n    }\n  },\n  computed: {\n    isEmpty: function isEmpty() {\n      return this.codeData.length === 0;\n    },\n    content: function content() {\n      var result = this.highlight(this.codeData) + '<br />'; // todo: VNode support?\n\n      return result;\n    },\n    lineNumbersCount: function lineNumbersCount() {\n      var totalLines = this.codeData.split(/\\r\\n|\\n/).length;\n      return totalLines;\n    }\n  },\n  mounted: function mounted() {\n    this._recordCurrentState();\n\n    this.styleLineNumbers();\n  },\n  methods: {\n    setLineNumbersHeight: function setLineNumbersHeight() {\n      this.lineNumbersHeight = getComputedStyle(this.$refs.pre).height;\n    },\n    styleLineNumbers: function styleLineNumbers() {\n      if (!this.lineNumbers || !this.autoStyleLineNumbers) return;\n      var $editor = this.$refs.pre;\n      var $lineNumbers = this.$el.querySelector('.prism-editor__line-numbers');\n      var editorStyles = window.getComputedStyle($editor);\n      this.$nextTick(function () {\n        var btlr = 'border-top-left-radius';\n        var bblr = 'border-bottom-left-radius';\n        if (!$lineNumbers) return;\n        $lineNumbers.style[btlr] = editorStyles[btlr];\n        $lineNumbers.style[bblr] = editorStyles[bblr];\n        $editor.style[btlr] = '0';\n        $editor.style[bblr] = '0';\n        var stylesList = ['background-color', 'margin-top', 'padding-top', 'font-family', 'font-size', 'line-height'];\n        stylesList.forEach(function (style) {\n          $lineNumbers.style[style] = editorStyles[style];\n        });\n        $lineNumbers.style['margin-bottom'] = '-' + editorStyles['padding-top'];\n      });\n    },\n    _recordCurrentState: function _recordCurrentState() {\n      var input = this.$refs.textarea;\n      if (!input) return; // Save current state of the input\n\n      var value = input.value,\n          selectionStart = input.selectionStart,\n          selectionEnd = input.selectionEnd;\n\n      this._recordChange({\n        value: value,\n        selectionStart: selectionStart,\n        selectionEnd: selectionEnd\n      });\n    },\n    _getLines: function _getLines(text, position) {\n      return text.substring(0, position).split('\\n');\n    },\n    _applyEdits: function _applyEdits(record) {\n      // Save last selection state\n      var input = this.$refs.textarea;\n      var last = this.history.stack[this.history.offset];\n\n      if (last && input) {\n        this.history.stack[this.history.offset] = _extends({}, last, {\n          selectionStart: input.selectionStart,\n          selectionEnd: input.selectionEnd\n        });\n      } // Save the changes\n\n\n      this._recordChange(record);\n\n      this._updateInput(record);\n    },\n    _recordChange: function _recordChange(record, overwrite) {\n      if (overwrite === void 0) {\n        overwrite = false;\n      }\n\n      var _this$history = this.history,\n          stack = _this$history.stack,\n          offset = _this$history.offset;\n\n      if (stack.length && offset > -1) {\n        // When something updates, drop the redo operations\n        this.history.stack = stack.slice(0, offset + 1); // Limit the number of operations to 100\n\n        var count = this.history.stack.length;\n\n        if (count > HISTORY_LIMIT) {\n          var extras = count - HISTORY_LIMIT;\n          this.history.stack = stack.slice(extras, count);\n          this.history.offset = Math.max(this.history.offset - extras, 0);\n        }\n      }\n\n      var timestamp = Date.now();\n\n      if (overwrite) {\n        var last = this.history.stack[this.history.offset];\n\n        if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\n          var _this$_getLines$pop, _this$_getLines$pop2;\n\n          // A previous entry exists and was in short interval\n          // Match the last word in the line\n          var re = /[^a-z0-9]([a-z0-9]+)$/i; // Get the previous line\n\n          var previous = (_this$_getLines$pop = this._getLines(last.value, last.selectionStart).pop()) === null || _this$_getLines$pop === void 0 ? void 0 : _this$_getLines$pop.match(re); // Get the current line\n\n          var current = (_this$_getLines$pop2 = this._getLines(record.value, record.selectionStart).pop()) === null || _this$_getLines$pop2 === void 0 ? void 0 : _this$_getLines$pop2.match(re);\n\n          if (previous && current && current[1].startsWith(previous[1])) {\n            // The last word of the previous line and current line match\n            // Overwrite previous entry so that undo will remove whole word\n            this.history.stack[this.history.offset] = _extends({}, record, {\n              timestamp: timestamp\n            });\n            return;\n          }\n        }\n      } // Add the new operation to the stack\n\n\n      this.history.stack.push(_extends({}, record, {\n        timestamp: timestamp\n      }));\n      this.history.offset++;\n    },\n    _updateInput: function _updateInput(record) {\n      var input = this.$refs.textarea;\n      if (!input) return; // Update values and selection state\n\n      input.value = record.value;\n      input.selectionStart = record.selectionStart;\n      input.selectionEnd = record.selectionEnd;\n      this.$emit('input', record.value); // this.props.onValueChange(record.value);\n    },\n    handleChange: function handleChange(e) {\n      var _e$target = e.target,\n          value = _e$target.value,\n          selectionStart = _e$target.selectionStart,\n          selectionEnd = _e$target.selectionEnd;\n\n      this._recordChange({\n        value: value,\n        selectionStart: selectionStart,\n        selectionEnd: selectionEnd\n      }, true);\n\n      this.$emit('input', value); // this.props.onValueChange(value);\n    },\n    _undoEdit: function _undoEdit() {\n      var _this$history2 = this.history,\n          stack = _this$history2.stack,\n          offset = _this$history2.offset; // Get the previous edit\n\n      var record = stack[offset - 1];\n\n      if (record) {\n        // Apply the changes and update the offset\n        this._updateInput(record);\n\n        this.history.offset = Math.max(offset - 1, 0);\n      }\n    },\n    _redoEdit: function _redoEdit() {\n      var _this$history3 = this.history,\n          stack = _this$history3.stack,\n          offset = _this$history3.offset; // Get the next edit\n\n      var record = stack[offset + 1];\n\n      if (record) {\n        // Apply the changes and update the offset\n        this._updateInput(record);\n\n        this.history.offset = Math.min(offset + 1, stack.length - 1);\n      }\n    },\n    handleKeyDown: function handleKeyDown(e) {\n      // console.log(navigator.platform);\n      var tabSize = this.tabSize,\n          insertSpaces = this.insertSpaces,\n          ignoreTabKey = this.ignoreTabKey;\n\n      if (this.$listeners.keydown) {\n        // onKeyDown(e);\n        this.$emit('keydown', e);\n\n        if (e.defaultPrevented) {\n          return;\n        }\n      }\n\n      if (e.keyCode === KEYCODE_ESCAPE) {\n        e.target.blur();\n        this.$emit('blur', e);\n      }\n\n      var _e$target2 = e.target,\n          value = _e$target2.value,\n          selectionStart = _e$target2.selectionStart,\n          selectionEnd = _e$target2.selectionEnd;\n      var tabCharacter = (insertSpaces ? ' ' : '\\t').repeat(tabSize);\n\n      if (e.keyCode === KEYCODE_TAB && !ignoreTabKey && this.capture) {\n        // Prevent focus change\n        e.preventDefault();\n\n        if (e.shiftKey) {\n          // Unindent selected lines\n          var linesBeforeCaret = this._getLines(value, selectionStart);\n\n          var startLine = linesBeforeCaret.length - 1;\n          var endLine = this._getLines(value, selectionEnd).length - 1;\n          var nextValue = value.split('\\n').map(function (line, i) {\n            if (i >= startLine && i <= endLine && line.startsWith(tabCharacter)) {\n              return line.substring(tabCharacter.length);\n            }\n\n            return line;\n          }).join('\\n');\n\n          if (value !== nextValue) {\n            var startLineText = linesBeforeCaret[startLine];\n\n            this._applyEdits({\n              value: nextValue,\n              // Move the start cursor if first line in selection was modified\n              // It was modified only if it started with a tab\n              selectionStart: startLineText.startsWith(tabCharacter) ? selectionStart - tabCharacter.length : selectionStart,\n              // Move the end cursor by total number of characters removed\n              selectionEnd: selectionEnd - (value.length - nextValue.length)\n            });\n          }\n        } else if (selectionStart !== selectionEnd) {\n          // Indent selected lines\n          var _linesBeforeCaret = this._getLines(value, selectionStart);\n\n          var _startLine = _linesBeforeCaret.length - 1;\n\n          var _endLine = this._getLines(value, selectionEnd).length - 1;\n\n          var _startLineText = _linesBeforeCaret[_startLine];\n\n          this._applyEdits({\n            value: value.split('\\n').map(function (line, i) {\n              if (i >= _startLine && i <= _endLine) {\n                return tabCharacter + line;\n              }\n\n              return line;\n            }).join('\\n'),\n            // Move the start cursor by number of characters added in first line of selection\n            // Don't move it if it there was no text before cursor\n            selectionStart: /\\S/.test(_startLineText) ? selectionStart + tabCharacter.length : selectionStart,\n            // Move the end cursor by total number of characters added\n            selectionEnd: selectionEnd + tabCharacter.length * (_endLine - _startLine + 1)\n          });\n        } else {\n          var updatedSelection = selectionStart + tabCharacter.length;\n\n          this._applyEdits({\n            // Insert tab character at caret\n            value: value.substring(0, selectionStart) + tabCharacter + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection\n          });\n        }\n      } else if (e.keyCode === KEYCODE_BACKSPACE) {\n        var hasSelection = selectionStart !== selectionEnd;\n        var textBeforeCaret = value.substring(0, selectionStart);\n\n        if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\n          // Prevent default delete behaviour\n          e.preventDefault();\n\n          var _updatedSelection = selectionStart - tabCharacter.length;\n\n          this._applyEdits({\n            // Remove tab character at caret\n            value: value.substring(0, selectionStart - tabCharacter.length) + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: _updatedSelection,\n            selectionEnd: _updatedSelection\n          });\n        }\n      } else if (e.keyCode === KEYCODE_ENTER) {\n        // Ignore selections\n        if (selectionStart === selectionEnd) {\n          // Get the current line\n          var line = this._getLines(value, selectionStart).pop();\n\n          var matches = line === null || line === void 0 ? void 0 : line.match(/^\\s+/);\n\n          if (matches && matches[0]) {\n            e.preventDefault(); // Preserve indentation on inserting a new line\n\n            var indent = '\\n' + matches[0];\n\n            var _updatedSelection2 = selectionStart + indent.length;\n\n            this._applyEdits({\n              // Insert indentation character at caret\n              value: value.substring(0, selectionStart) + indent + value.substring(selectionEnd),\n              // Update caret position\n              selectionStart: _updatedSelection2,\n              selectionEnd: _updatedSelection2\n            });\n          }\n        }\n      } else if (e.keyCode === KEYCODE_PARENS || e.keyCode === KEYCODE_BRACKETS || e.keyCode === KEYCODE_QUOTE || e.keyCode === KEYCODE_BACK_QUOTE) {\n        var chars;\n\n        if (e.keyCode === KEYCODE_PARENS && e.shiftKey) {\n          chars = ['(', ')'];\n        } else if (e.keyCode === KEYCODE_BRACKETS) {\n          if (e.shiftKey) {\n            chars = ['{', '}'];\n          } else {\n            chars = ['[', ']'];\n          }\n        } else if (e.keyCode === KEYCODE_QUOTE) {\n          if (e.shiftKey) {\n            chars = ['\"', '\"'];\n          } else {\n            chars = [\"'\", \"'\"];\n          }\n        } else if (e.keyCode === KEYCODE_BACK_QUOTE && !e.shiftKey) {\n          chars = ['`', '`'];\n        } // console.log(isMacLike, \"navigator\" in global && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform));\n        // If text is selected, wrap them in the characters\n\n\n        if (selectionStart !== selectionEnd && chars) {\n          e.preventDefault();\n\n          this._applyEdits({\n            value: value.substring(0, selectionStart) + chars[0] + value.substring(selectionStart, selectionEnd) + chars[1] + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: selectionStart,\n            selectionEnd: selectionEnd + 2\n          });\n        }\n      } else if ((isMacLike ? // Trigger undo with ⌘+Z on Mac\n      e.metaKey && e.keyCode === KEYCODE_Z : // Trigger undo with Ctrl+Z on other platforms\n      e.ctrlKey && e.keyCode === KEYCODE_Z) && !e.shiftKey && !e.altKey) {\n        e.preventDefault();\n\n        this._undoEdit();\n      } else if ((isMacLike ? // Trigger redo with ⌘+Shift+Z on Mac\n      e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey : isWindows ? // Trigger redo with Ctrl+Y on Windows\n      e.ctrlKey && e.keyCode === KEYCODE_Y : // Trigger redo with Ctrl+Shift+Z on other platforms\n      e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) && !e.altKey) {\n        e.preventDefault();\n\n        this._redoEdit();\n      } else if (e.keyCode === KEYCODE_M && e.ctrlKey && (isMacLike ? e.shiftKey : true)) {\n        e.preventDefault(); // Toggle capturing tab key so users can focus away\n\n        this.capture = !this.capture;\n      }\n    }\n  },\n  render: function render(h) {\n    var _this3 = this;\n\n    var lineNumberWidthCalculator = h('div', {\n      attrs: {\n        \"class\": 'prism-editor__line-width-calc',\n        style: 'height: 0px; visibility: hidden; pointer-events: none;'\n      }\n    }, '999');\n    var lineNumbers = h('div', {\n      staticClass: 'prism-editor__line-numbers',\n      style: {\n        'min-height': this.lineNumbersHeight\n      },\n      attrs: {\n        'aria-hidden': 'true'\n      }\n    }, [lineNumberWidthCalculator, Array.from(Array(this.lineNumbersCount).keys()).map(function (_, index) {\n      return h('div', {\n        attrs: {\n          \"class\": 'prism-editor__line-number token comment'\n        }\n      }, \"\" + ++index);\n    })]);\n    var textarea = h('textarea', {\n      ref: 'textarea',\n      on: {\n        input: this.handleChange,\n        keydown: this.handleKeyDown,\n        click: function click($event) {\n          _this3.$emit('click', $event);\n        },\n        keyup: function keyup($event) {\n          _this3.$emit('keyup', $event);\n        },\n        focus: function focus($event) {\n          _this3.$emit('focus', $event);\n        },\n        blur: function blur($event) {\n          _this3.$emit('blur', $event);\n        }\n      },\n      staticClass: 'prism-editor__textarea',\n      \"class\": {\n        'prism-editor__textarea--empty': this.isEmpty\n      },\n      attrs: {\n        spellCheck: 'false',\n        autocapitalize: 'off',\n        autocomplete: 'off',\n        autocorrect: 'off',\n        'data-gramm': 'false',\n        placeholder: this.placeholder,\n        'data-testid': 'textarea',\n        readonly: this.readonly\n      },\n      domProps: {\n        value: this.codeData\n      }\n    });\n    var preview = h('pre', {\n      ref: 'pre',\n      staticClass: 'prism-editor__editor',\n      attrs: {\n        'data-testid': 'preview'\n      },\n      domProps: {\n        innerHTML: this.content\n      }\n    });\n    var editorContainer = h('div', {\n      staticClass: 'prism-editor__container'\n    }, [textarea, preview]);\n    return h('div', {\n      staticClass: 'prism-editor-wrapper'\n    }, [this.lineNumbers && lineNumbers, editorContainer]);\n  }\n});\n\nexport { PrismEditor };\n//# sourceMappingURL=prismeditor.esm.js.map\n"],"sourceRoot":""}